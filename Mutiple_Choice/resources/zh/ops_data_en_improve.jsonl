{"id": 1, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "您应该检查什么以确认您的系统是否使用了cgroup v2?", "A": "运行Kubernetes诊断工具", "B": "检查系统的IP配置", "C": "在/sys/fs/cgroup/上使用stat命令", "D": "检查Docker版本", "answer": "C", "score": 3}
{"id": 2, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用cgroup v2与Kubernetes时，哪项要求不是必需的？", "A": "Linux内核版本5.8或更高", "B": "不支持cgroup v2的容器运行时", "C": "将kubelet配置为使用systemd cgroup驱动程序", "D": "操作系统默认启用cgroup v2", "answer": "B", "score": 4}
{"id": 3, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes命令对于授权cloud-controller-manager管理节点是必需的？", "A": "kubectl get nodes", "B": "kubectl patch nodes", "C": "kubectl create node", "D": "kubectl watch nodes", "answer": "B", "score": 4}
{"id": 4, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "cloud-controller-manager中的路由控制器提供什么功能？", "A": "配置云数据库", "B": "为pods分配IP地址", "C": "管理节点健康", "D": "配置节点间通信的路由", "answer": "D", "score": 4}
{"id": 5, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在API服务器上使用哪个标志来验证kubelet的服务证书？", "A": "--verify-kubelet-certificate", "B": "--kubelet-certificate-authority", "C": "--kubelet-secure", "D": "--validate-certificates", "answer": "B", "score": 3}
{"id": 6, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "API服务器到节点、Pods和服务的默认通信协议是什么？", "A": "HTTP", "B": "HTTPS", "C": "SSH", "D": "FTP", "answer": "B", "score": 4}
{"id": 7, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "作业控制器与哪个组件通信以管理集群任务？", "A": "kube-scheduler", "B": "API server", "C": "kube-proxy", "D": "etcd", "answer": "B", "score": 3}
{"id": 8, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "作业控制器如何与集群互动来执行其任务？", "A": "通过直接运行容器", "B": "通过在节点上调度Pods", "C": "通过向API服务器发送消息", "D": "通过更新kubelet", "answer": "C", "score": 4}
{"id": 9, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪一个 kubelet 命令行标志用于配置容器运行时的镜像服务端点？", "A": "--image-service-endpoint", "B": "--configure-runtime", "C": "--set-image-service", "D": "--runtime-endpoint", "answer": "A", "score": 3}
{"id": 10, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果 kubelet 无法与容器运行时协商支持的 CRI 版本，会发生什么情况？", "A": "kubelet 无限重试", "B": "kubelet 默认使用内部运行时", "C": "kubelet 不会注册为节点", "D": "kubelet 使用可用的运行时版本重新编译", "answer": "C", "score": 4}
{"id": 11, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "垃圾收集过程可以清理哪些 Kubernetes 对象的过时或过期实例？", "A": "ConfigMaps", "B": "Secrets", "C": "Pods", "D": "CertificateSigningRequests (CSRs)", "answer": "D", "score": 3}
{"id": 12, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪一个 kubelet 标志允许配置镜像垃圾收集策略？", "A": "--image-gc-policy", "B": "--image-service-endpoint", "C": "--kubelet-config", "D": "以上都不是", "answer": "A", "score": 4}
{"id": 13, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "租约在 Kubernetes 中的节点心跳中起什么作用？", "A": "租约指定可用于新 pod 的节点", "B": "租约更新以反映节点的可用性和健康状况", "C": "租约将特定的 pod 分配给节点", "D": "租约保护节点通信渠道", "answer": "B", "score": 4}
{"id": 14, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何查看与每个kube-apiserver实例相关的Lease对象？", "A": "kubectl get nodes", "B": "kubectl get leases", "C": "kubectl -n kube-system get lease -l apiserver.kubernetes.io/identity=kube-apiserver", "D": "kubectl describe pods", "answer": "C", "score": 4}
{"id": 15, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中的Mixed Version Proxy功能的目的是什麼？", "A": "自動化部署過程", "B": "在升級期間管理多個版本的API服务器", "C": "自動增加存儲容量", "D": "增强集群的安全性", "answer": "B", "score": 4}
{"id": 16, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在Kubernetes升級期間，Mixed Version Proxy防止什麼錯誤？", "A": "401 未授权", "B": "500 内部服务器错误", "C": "503 服务不可用", "D": "404 未找到", "answer": "C", "score": 4}
{"id": 17, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "配置Kubernetes中的Mixed Version Proxy功能时，哪个标志不是必须的？", "A": "--proxy-client-key-file", "B": "--peer-advertise-port", "C": "--node-port", "D": "--requestheader-client-ca-file", "answer": "C", "score": 4}
{"id": 18, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在Kubernetes中，kubelet的主要角色是什么？", "A": "调度pod到节点", "B": "管理节点通信", "C": "将节点自注册到控制平面", "D": "加密节点数据", "answer": "C", "score": 4}
{"id": 19, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在Kubernetes节点上使用交换空间必须启用哪个功能？", "A": "NodeSwap", "B": "NodeMemory", "C": "SwapSpace", "D": "MemoryManagement", "answer": "A", "score": 3}
{"id": 20, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "节点自注册需要哪些kubelet标志？（选择两个）", "A": "--kubeconfig 和 --register-node", "B": "--cloud-provider 和 --node-ip", "C": "--kubeconfig 和 --node-labels", "D": "--register-node 和 --cloud-provider", "answer": "A", "score": 4}
{"id": 21, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个Kubernetes组件负责在Pods之间进行流量负载均衡？", "A": "Ingress Controller", "B": "Kube-Proxy", "C": "Controller Manager", "D": "Scheduler", "answer": "B", "score": 3}
{"id": 22, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于获取Kubernetes集群中所有组件的状态？", "A": "kubectl get components", "B": "kubectl cluster-info", "C": "kubectl status", "D": "kubectl get all", "answer": "B", "score": 3}
{"id": 23, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "确保Kubernetes集群控制平面高可用的常见方法是什么？", "A": "运行多个调度器实例", "B": "使用单节点设置", "C": "实施Pod亲和性", "D": "复制控制平面", "answer": "D", "score": 4}
{"id": 24, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个网络附加组件使用eBPF为Kubernetes提供可观测性和安全解决方案？", "A": "Cilium", "B": "Canal", "C": "Antrea", "D": "Contiv", "answer": "A", "score": 3}
{"id": 25, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令可以用来安装CoreDNS作为Kubernetes pod的集群内DNS？", "A": "kubectl apply -f coredns.yaml", "B": "kubectl deploy coredns", "C": "helm install coredns", "D": "kubectl create -f coredns.yaml", "answer": "A", "score": 3}
{"id": 26, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "KubeVirt附加组件在Kubernetes环境中的主要功能是什么？", "A": "运行虚拟机", "B": "管理容器网络", "C": "部署无服务器函数", "D": "监控pod指标", "answer": "A", "score": 4}
{"id": 27, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "Kubernetes中哪个组件负责在有无法调度的pod时添加节点？", "A": "Descheduler", "B": "Cluster Proportional Autoscaler", "C": "Karpenter", "D": "Cluster Autoscaler", "answer": "D", "score": 4}
{"id": 28, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "哪个自动缩放组件可以在优化成本的同时管理节点？", "A": "Cluster Proportional Vertical Autoscaler", "B": "Cluster Autoscaler", "C": "Karpenter", "D": "Descheduler", "answer": "C", "score": 4}
{"id": 29, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Descheduler在Kubernetes集群中有何作用？", "A": "增加pod数量以满足需求。", "B": "将pod整合到较少的节点上。", "C": "自动扩展节点数量。", "D": "根据使用情况改变节点的容量。", "answer": "B", "score": 4}
{"id": 30, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令行标志启用Kubernetes中的API Priority和Fairness功能？", "A": "--enable-api-groups", "B": "--enable-priority-and-fairness", "C": "--priority-and-fairness-active", "D": "--enable-api-priority", "answer": "B", "score": 3}
{"id": 31, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪种类型的Kubernetes请求不受API Priority和Fairness限制？", "A": "所有API请求", "B": "所有变更请求", "C": "长时间运行的请求，如日志尾部读取", "D": "简单的GET请求", "answer": "C", "score": 3}
{"id": 32, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "API Priority和Fairness使用什么机制来防止一个流饥饿其他流？", "A": "令牌桶过滤", "B": "轮询调度", "C": "公平排队技术", "D": "优先级上限协议", "answer": "C", "score": 4}
{"id": 33, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "要禁用 APF 的弃用 API 组版本，使用什么组合的命令行标志？", "A": "--runtime-config=flowcontrol.apiserver.k8s.io/v1beta3=false", "B": "--disable-api-group=flowcontrol.apiserver.k8s.io/v1beta3", "C": "--set-api-version=flowcontrol.apiserver.k8s.io/v1=false", "D": "--api-version-override=flowcontrol.apiserver.k8s.io/v1beta3=false", "answer": "A", "score": 4}
{"id": 34, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "用于从 kube-state-metrics 生成的指标中获取数据的查询语言是什么？", "A": "SQL", "B": "PromQL", "C": "NoSQL", "D": "GraphQL", "answer": "B", "score": 3}
{"id": 35, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "kube_pod_container_info 指标包含哪些信息？", "A": "CPU 和内存使用统计", "B": "Pod 就绪和存活探针结果", "C": "容器名称、镜像和 ID 以及其他标签", "D": "每个容器的网络流量数据", "answer": "C", "score": 3}
{"id": 36, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "Prometheus 警报规则可以使用来自 kube-state-metrics 的指标做什么？", "A": "优化节点上的 Pod 调度", "B": "配置网络策略", "C": "监控和警报集群问题", "D": "为 Pod 分配安全上下文", "answer": "C", "score": 4}
{"id": 37, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Kubernetes 中应用 Pod 清单文件的命令是什么？", "A": "kubectl create -f pod.yaml", "B": "kubectl apply -f https://k8s.io/examples/debug/counter-pod.yaml", "C": "kubectl set -f pod.yaml", "D": "kubectl pods apply -f counter-pod.yaml", "answer": "B", "score": 4}
{"id": 38, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "哪一个Kubernetes特性允许你检索容器先前实例的日志？", "A": "kubectl logs --previous", "B": "kubectl rollback", "C": "kubectl retrieve --old", "D": "kubectl history", "answer": "A", "score": 4}
{"id": 39, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "‘kubectl logs’命令从容器中获取什么？", "A": "当前的活动连接", "B": "容器的历史日志", "C": "容器日志目录中的日志文件", "D": "标准输出和标准错误流中的日志", "answer": "D", "score": 3}
{"id": 40, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个组件负责为Kubernetes集群中的服务分配IP地址？", "A": "kube-scheduler", "B": "kube-apiserver", "C": "kube-proxy", "D": "kube-controller-manager", "answer": "C", "score": 5}
{"id": 41, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes集群可以配置哪种类型的IP寻址？", "A": "仅IPv4", "B": "仅IPv6", "C": "IPv4和IPv6都支持", "D": "既不支持IPv4也不支持IPv6", "answer": "C", "score": 3}
{"id": 42, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在Kubernetes中，什么决定了集群使用的主要IP族？", "A": "物理网络设备上配置的IP族", "B": "在Pod、Service和Node对象上存在的IP地址", "C": "外部DNS系统的配置设置", "D": "容器运行时设置的偏好", "answer": "B", "score": 4}
{"id": 43, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "kube proxy处理哪种类型的流量？", "A": "仅HTTP和HTTPS", "B": "UDP、TCP和SCTP", "C": "仅HTTP和TCP", "D": "仅SSH和FTP", "answer": "B", "score": 4}
{"id": 44, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "apiserver proxy在功能上如何与kube proxy不同？", "A": "它提供更强的加密方法", "B": "它充当堡垒连接用户到集群IP并进行负载均衡", "C": "它只重定向HTTP流量", "D": "它仅供Kubernetes组件内部使用", "answer": "B", "score": 4}
{"id": 45, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "指定哪种Kubernetes服务类型时会自动创建一个云负载均衡器？", "A": "ClusterIP", "B": "NodePort", "C": "ExternalName", "D": "LoadBalancer", "answer": "D", "score": 3}
{"id": 46, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪种命令行工具用作包装器以重定向Kubernetes组件的日志？", "A": "kube-proxy", "B": "kube-scheduler", "C": "kube-log-runner", "D": "kubectl", "answer": "C", "score": 2}
{"id": 47, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "kube-log-runner中的'--log-file'标志指定什么？", "A": "日志文件的最大大小", "B": "日志应写入的文件路径", "C": "保留的日志文件数量", "D": "日志轮转的间隔时间", "answer": "B", "score": 3}
{"id": 48, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "要使用NodeLogQuery功能，需要启用哪个功能门控？", "A": "NodeLogQuery", "B": "DynamicKubeletConfig", "C": "ExpandPersistentVolumes", "D": "NodeLease", "answer": "A", "score": 3}
{"id": 49, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪个端口是IANA指定的OpenTelemetry端口，Kubernetes组件默认使用该端口导出跟踪信息？", "A": "9411", "B": "4317", "C": "6831", "D": "5775", "answer": "B", "score": 4}
{"id": 50, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "要在kube-apiserver上启用跟踪，应该使用哪个命令行标志来指定跟踪配置文件？", "A": "--enable-tracing-config", "B": "--trace-config", "C": "--tracing-config-file", "D": "--tracefile", "answer": "C", "score": 4}
{"id": 51, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪个端口是IANA指定的OpenTelemetry端口，Kubernetes组件默认使用该端口导出跟踪信息？", "A": "9411", "B": "4317", "C": "6831", "D": "5775", "answer": "B", "score": 3}
{"id": 52, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "要在kube-apiserver上启用跟踪，应该使用哪个命令行标志来指定跟踪配置文件？", "A": "--enable-tracing-config", "B": "--trace-config", "C": "--tracing-config-file", "D": "--tracefile", "answer": "C", "score": 4}
{"id": 53, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "存储在 ConfigMap 中的数据大小限制是多少？", "A": "512 KiB", "B": "1 GiB", "C": "1 MiB", "D": "5 MiB", "answer": "C", "score": 3}
{"id": 54, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "ConfigMap 中哪个字段设计用于包含 base64 编码的二进制数据？", "A": "data", "B": "binaryData", "C": "spec", "D": "configData", "answer": "B", "score": 3}
{"id": 55, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "存储机密数据时应该使用什么代替 ConfigMap？", "A": "Persistent Volume", "B": "Secret", "C": "Service", "D": "Deployment", "answer": "B", "score": 4}
{"id": 56, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如果一个容器尝试使用超过其设置限制的内存会发生什么？", "A": "容器会暂停", "B": "容器的优先级会降低", "C": "容器被允许使用内存", "D": "尝试分配的进程将因 OOM 错误而终止", "answer": "D", "score": 5}
{"id": 57, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如果一个 pod 被调度到一个有其他 pods 的节点上，它能使用比请求更多的资源吗？", "A": "与其限制中指定的一样多", "B": "不能，它只能使用请求的数量", "C": "取决于 kubelet 的配置", "D": "在节点上其他 pods 请求之外的可用资源", "answer": "D", "score": 3}
{"id": 58, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "在 pod 的 container 规范中，您指定哪个字段来限制 CPU 使用？", "A": "spec.containers[].resources.limits.cpu", "B": "spec.containers[].resources.requests.cpu", "C": "spec.containers[].cpu.limit", "D": "spec.containers[].cpu.request", "answer": "A", "score": 4}
{"id": 59, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "对于来自不可信来源的 kubeconfig 文件，您应该怎么做？", "A": "未经检查直接使用", "B": "使用前仔细检查", "C": "立即删除", "D": "直接用于集群访问", "answer": "B", "score": 4}
{"id": 60, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 `kubectl` 命令将当前上下文设置为指定的上下文？", "A": "kubectl set-context", "B": "kubectl config use-context", "C": "kubectl apply -f context", "D": "kubectl context set-current", "answer": "B", "score": 4}
{"id": 61, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "`kubectl` 如何处理在 `KUBECONFIG` 环境变量中指定的多个 kubeconfig 文件？", "A": "选择最小的文件", "B": "将文件合并成一个配置", "C": "只使用第一个文件", "D": "每个文件用于不同的集群", "answer": "B", "score": 4}
{"id": 62, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "使用来自不可信来源的 kubeconfig 文件的最安全做法是什么？", "A": "使用前仔细检查", "B": "立即使用", "C": "立即删除", "D": "将它们转换为 JSON", "answer": "A", "score": 4}
{"id": 63, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪一个版本的 Kubernetes YAML 不识别 'yes' 和 'no' 作为布尔值？", "A": "YAML 1.0", "B": "YAML 1.1", "C": "YAML 1.2", "D": "YAML 2.0", "answer": "C", "score": 3}
{"id": 64, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 `kubectl` 命令用于应用指定目录中的所有文件的配置？", "A": "kubectl apply -f <file>", "B": "kubectl set <directory>", "C": "kubectl apply -f <directory>", "D": "kubectl config set-dir <directory>", "answer": "C", "score": 4}
{"id": 65, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "以下哪项是 Kubernetes Secrets 的推荐安全实践？", "A": "在应用代码中以明文存储 Secrets", "B": "启用 Secrets 的静态加密", "C": "允许所有 Pods 不受限制地访问 Secrets", "D": "对所有操作使用默认 ServiceAccount", "answer": "B", "score": 4}
{"id": 66, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 kubectl 命令用于创建一个类型为 'Opaque' 的空 Secret？", "A": "kubectl create secret generic empty-secret", "B": "kubectl create configmap empty-secret", "C": "kubectl create pod empty-secret", "D": "kubectl create deployment empty-secret", "answer": "A", "score": 3}
{"id": 67, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes Secrets 默认存在的固有风险是什么？", "A": "它们默认使用 AES-256 加密", "B": "它们会在 24 小时后自动删除", "C": "它们在 API 服务器的数据存储中未加密存储", "D": "它们不能在命名空间之间共享", "answer": "C", "score": 4}
{"id": 68, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes 的上下文中，Windows 如何处理内存管理与 Linux 不同？", "A": "Windows 使用内存不足进程杀手", "B": "Windows 将所有用户模式内存分配视为虚拟内存", "C": "Windows 对进程内存进行过度承诺", "D": "Windows 使用交换文件而不是页面文件", "answer": "B", "score": 4}
{"id": 69, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 kubelet 命令行标志设置 Windows 节点上的调度优先级？", "A": "--windows-priorityclass", "B": "--windows-scheduler", "C": "--set-windows-priority", "D": "--adjust-priority-level", "answer": "A", "score": 3}
{"id": 70, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在 Kubernetes 中管理 Windows 节点上的资源预留的推荐做法是哪一项？", "A": "避免在容器上设置限制", "B": "为系统进程预留至少 2GiB 的内存", "C": "使用基于 Linux 的资源管理策略", "D": "允许系统过度承诺内存", "answer": "B", "score": 4}
{"id": 71, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 容器如何访问同一命名空间中的服务信息？", "A": "直接访问 Kubernetes API", "B": "通过在容器创建时设置的环境变量", "C": "通过安全的容器间通信协议", "D": "通过查询容器运行时接口", "answer": "B", "score": 3}
{"id": 72, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪种 Kubernetes 资源为容器提供其运行环境的环境变量？", "A": "kubelet", "B": "downward API", "C": "ConfigMaps", "D": "Service Accounts", "answer": "B", "score": 3}
{"id": 73, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "要使 Kubernetes 服务在集群内通过 DNS 可发现，必须启用什么？", "A": "集群 DNS 插件", "B": "直接链接到 Kubernetes API", "C": "服务网格基础设施", "D": "允许 DNS 查找的网络策略", "answer": "A", "score": 4}
{"id": 74, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在容器终止之前调用的 Kubernetes 生命周期钩子是哪个？", "A": "PostStart", "B": "PreStart", "C": "PreStop", "D": "PostStop", "answer": "C", "score": 4}
{"id": 75, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪种类型的钩子处理程序可以在容器的命名空间内执行特定命令？", "A": "Exec", "B": "HTTP", "C": "TCP", "D": "Sleep", "answer": "A", "score": 3}
{"id": 76, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "如果 'PreStop' 钩子执行时间超过容器的终止宽限期会发生什么?", "A": "钩子执行被中断，容器立即停止。", "B": "容器的状态变为 'Stopping'。", "C": "宽限期到期后容器被强制终止。", "D": "终止宽限期自动延长。", "answer": "C", "score": 3}
{"id": 77, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在将容器镜像用于Pod之前必须做什么?", "A": "从源代码编译它", "B": "解密它", "C": "推送到镜像仓库", "D": "验证其校验和", "answer": "C", "score": 3}
{"id": 78, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "通常将容器镜像存储在哪里?", "A": "在Pod中", "B": "在集群中", "C": "在镜像仓库中", "D": "在物理服务器上", "answer": "C", "score": 3}
{"id": 79, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在Kubernetes中，使用容器镜像时标签`latest`意味着什么?", "A": "镜像是最稳定的版本", "B": "镜像推荐用于生产环境", "C": "镜像是最新版本", "D": "镜像保留给集群管理员", "answer": "C", "score": 4}
{"id": 80, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个Kubernetes命令创建RuntimeClass资源?", "A": "kubectl create runtimeclass", "B": "kubectl start runtimeclass", "C": "kubectl deploy runtimeclass", "D": "kubectl execute runtimeclass", "answer": "A", "score": 4}
{"id": 81, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪种Kubernetes功能允许指定超出Pod典型请求和限制设置的资源?", "A": "RuntimeClass overhead", "B": "CRI implementation", "C": "Pod scheduling", "D": "Pod security", "answer": "A", "score": 3}
{"id": 82, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果Pod在指定runtimeClassName时无法启动，应检查哪个Kubernetes资源的错误消息?", "A": "Pod conditions", "B": "Node status", "C": "RuntimeClass events", "D": "Cluster events", "answer": "C", "score": 4}
{"id": 83, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "为了性能优化，建议如何使用RuntimeClass?", "A": "增加节点上的Pod密度", "B": "在特定节点类型上调度Pod", "C": "将Pod分配到具有特定标签的节点", "D": "使用不同的运行时以满足安全和性能需求", "answer": "D", "score": 4}
{"id": 84, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "容器如何帮助在不同的云或操作系统环境中部署应用程序?", "A": "使用Kubernetes本地工具", "B": "将应用程序与底层主机基础设施解耦", "C": "直接集成云API", "D": "使用专用存储系统", "answer": "B", "score": 3}
{"id": 85, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "容器镜像在Kubernetes中的用途是什么?", "A": "作为私有存储解决方案", "B": "自动配置网络设置", "C": "提供包含运行应用程序所需一切的即用型软件包", "D": "管理用户访问和认证", "answer": "C", "score": 4}
{"id": 86, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如果开发人员需要更新正在运行的容器应用程序，推荐的Kubernetes实践是什么?", "A": "直接修改正在运行的容器", "B": "使用新配置重新启动容器", "C": "构建包含更改的新容器镜像", "D": "使用Kubernetes滚动更新功能", "answer": "D", "score": 4}
{"id": 87, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "Kubernetes operator可以自动化哪些常见任务?", "A": "管理网络策略", "B": "执行系统升级", "C": "部署应用程序和管理其状态，包括备份和升级", "D": "实时监控节点健康状况", "answer": "C", "score": 5}
{"id": 88, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "操作员如何帮助维持服务的期望状态？", "A": "通过手动更改配置", "B": "通过自动删除故障Pod", "C": "通过部署新的Kubernetes版本", "D": "通过基于定义的控制循环自动化部署和错误处理", "answer": "D", "score": 5}
{"id": 89, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在响应配置更改时，操作员可能自动执行的操作的一个例子是什么？", "A": "重启Kubernetes API", "B": "自动创建备份Pod", "C": "更新应用程序及其相关配置，例如数据库架构", "D": "更改云提供商设置", "answer": "C", "score": 4}
{"id": 90, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "当内置配置选项不足时，集群操作员推荐的做法是什么？", "A": "使用运行额外程序或服务的扩展", "B": "分叉Kubernetes仓库", "C": "向Kubernetes项目提交补丁", "D": "消除配置的需求", "answer": "A", "score": 3}
{"id": 91, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种类型的Kubernetes扩展用于支持新种类的硬件？", "A": "配置文件", "B": "API扩展", "C": "设备插件", "D": "二进制插件", "answer": "C", "score": 4}
{"id": 92, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪种Kubernetes特性使与外部网络服务的集成成为可能？", "A": "自定义资源定义", "B": "API聚合层", "C": "Webhooks", "D": "命令行接口", "answer": "B", "score": 4}
{"id": 93, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用聚合层注册扩展API需要什么？", "A": "创建一个Kubernetes服务", "B": "添加一个声明URL路径的APIService对象", "C": "直接修改kube-apiserver", "D": "运行一组kubectl命令", "answer": "B", "score": 4}
{"id": 94, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪种组件最常用于在聚合层中实现APIService？", "A": "一个指标服务器", "B": "运行在Pod中的扩展API服务器", "C": "自定义资源定义", "D": "运行在集群外的控制器", "answer": "B", "score": 3}
{"id": 95, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "从kube-apiserver到扩展API服务器的发现请求的延迟要求是什么？", "A": "十秒或更少", "B": "五秒或更少", "C": "十五秒或更少", "D": "二十秒或更少", "answer": "B", "score": 3}
{"id": 96, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "主要用于管理Kubernetes中自定义资源的工具是什么？", "A": "Docker", "B": "Helm", "C": "kubectl", "D": "etcd", "answer": "C", "score": 4}
{"id": 97, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "当与自定义控制器结合时，自定义资源有助于实现哪种类型的API？", "A": "命令式API", "B": "过程式API", "C": "声明式API", "D": "结构化API", "answer": "C", "score": 4}
{"id": 98, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "将自定义资源与自定义控制器结合的结果是什么？", "A": "创建一个新的Kubernetes集群", "B": "增强Kubernetes的安全功能", "C": "实现真正的声明式API模型", "D": "减少Kubernetes API功能", "answer": "C", "score": 4}
{"id": 99, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个组件在Kubernetes中充当主API服务器的代理？", "A": "节点控制器", "B": "复制控制器", "C": "聚合层", "D": "服务端点", "answer": "C", "score": 3}
{"id": 100, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中API聚合（AA）的目的是什么？", "A": "去中心化资源管理", "B": "允许自定义API服务器与主API服务器集成", "C": "替换默认的Kubernetes调度算法", "D": "自动扩展pods", "answer": "B", "score": 4}
{"id": 101, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中的设备插件如何向kubelet注册？", "A": "使用REST API", "B": "通过Registration gRPC服务", "C": "通过直接文件系统访问", "D": "通过修改kubelet的配置文件", "answer": "B", "score": 4}
{"id": 102, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "设备插件使用哪个Kubernetes组件来提供详细的资源管理？", "A": "API server", "B": "Scheduler", "C": "Controller Manager", "D": "Kubelet", "answer": "D", "score": 4}
{"id": 103, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在设备插件的上下文中，kubelet的gRPC服务启用了什么？", "A": "Pod自动扩展", "B": "资源发现和监控", "C": "自动pod重启", "D": "动态资源分配", "answer": "B", "score": 4}
{"id": 104, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在Kubernetes 1.24中，哪个组件负责管理CNI插件？", "A": "kubelet", "B": "API server", "C": "Container runtimes", "D": "Scheduler", "answer": "C", "score": 4}
{"id": 105, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes网络插件必须提供什么功能来支持基本的网络需求？", "A": "流量整形", "B": "回环接口管理", "C": "HostPort转发", "D": "DNS解析", "answer": "D", "score": 4}
{"id": 106, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪个CNI插件功能允许在Kubernetes中指定端口映射？", "A": "portmap", "B": "bandwidth", "C": "flannel", "D": "calico", "answer": "A", "score": 3}
{"id": 107, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "CSI插件提供什么功能？", "A": "网络路由协议", "B": "增强的安全功能", "C": "支持新的卷类型", "D": "CPU和内存优化", "answer": "C", "score": 4}
{"id": 108, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "Kubernetes中Pod网络正常工作需要什么？", "A": "设备插件", "B": "网络插件", "C": "存储插件", "D": "安全插件", "answer": "B", "score": 3}
{"id": 109, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "哪个组件负责创建、更新和删除云提供商负载均衡器？", "A": "kube-proxy", "B": "kube-controller-manager", "C": "cloud-controller-manager", "D": "etcd", "answer": "C", "score": 4}
{"id": 110, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes组件参与检测和响应集群事件？", "A": "kubelet", "B": "kube-apiserver", "C": "kube-controller-manager", "D": "kube-scheduler", "answer": "C", "score": 4}
{"id": 111, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个API机制允许Kubernetes发布详细的API端点规范？", "A": "Discovery API", "B": "Kubernetes OpenAPI Document", "C": "Kubectl命令行工具", "D": "客户端库", "answer": "B", "score": 4}
{"id": 112, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes API 服务器提供哪个功能来优化客户端 API 规格的缓存？", "A": "版本化的 API 路径", "B": "ETag 和 protobuf 编码", "C": "具有适当 HTTP 缓存头的不可变 URL", "D": "API 响应中的资源聚合", "answer": "C", "score": 3}
{"id": 113, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 的哪个功能有助于管理容器故障？", "A": "自动部署", "B": "服务发现", "C": "自愈", "D": "密钥管理", "answer": "C", "score": 4}
{"id": 114, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Kubernetes 不被视为传统的 PaaS，因为它：", "A": "提供内置的应用服务", "B": "仅限于某些类型的应用", "C": "保留用户的选择和灵活性", "D": "仅专注于容器编排", "answer": "C", "score": 4}
{"id": 115, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪种类型的数据适合包含在 Kubernetes 注释中？", "A": "用于选择对象的数据", "B": "仅小型非结构化数据", "C": "非可识别的任意元数据", "D": "仅加密数据", "answer": "C", "score": 3}
{"id": 116, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "自动化系统组件向用户对象添加注释时，注释键中必须包含什么？", "A": "特定前缀以避免名称冲突", "B": "用户的名字以便识别", "C": "加密密钥以确保安全", "D": "用于跟踪更改的时间戳", "answer": "A", "score": 4}
{"id": 117, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Kubernetes 推荐标签中，哪个标签指定管理工具？", "A": "app.kubernetes.io/part-of", "B": "app.kubernetes.io/managed-by", "C": "app.kubernetes.io/instance", "D": "app.kubernetes.io/name", "answer": "B", "score": 3}
{"id": 118, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "app.kubernetes.io/version 标签提供了什么信息？", "A": "安全协议版本", "B": "Kubernetes 版本", "C": "应用的版本", "D": "管理工具的版本", "answer": "C", "score": 3}
{"id": 119, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用不支持的字段选择器运行 kubectl get 命令的结果是什么？", "A": "返回默认的资源列表", "B": "显示错误消息", "C": "命令执行但没有任何输出", "D": "过滤掉所有资源", "answer": "B", "score": 4}
{"id": 120, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令选择不在 'default' 命名空间中的所有 Kubernetes 服务？", "A": "kubectl get services", "B": "kubectl get services --namespace=default", "C": "kubectl get services --all-namespaces --field-selector metadata.namespace!=default", "D": "kubectl delete services --field-selector metadata.namespace=default", "answer": "C", "score": 4}
{"id": 121, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个字段在所有 Kubernetes 资源类型中都不支持作为字段选择器？", "A": "metadata.name", "B": "metadata.namespace", "C": "status.phase", "D": "spec.nodeName", "answer": "D", "score": 3}
{"id": 122, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "当尝试删除带有非空 metadata.finalizers 字段的 Kubernetes 资源时，会发生什么？", "A": "资源立即删除", "B": "资源删除会延迟直到 finalizers 字段为空", "C": "资源会被复制", "D": "忽略 finalizers 字段", "answer": "B", "score": 4}
{"id": 123, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪个 finalizer 防止意外删除 PersistentVolume 对象？", "A": "kubernetes.io/pv-protection", "B": "kubernetes.io/delete-protection", "C": "kubernetes.io/pod-protection", "D": "kubernetes.io/volume-protection", "answer": "A", "score": 4}
{"id": 124, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果一个Kubernetes对象由于终结器而卡在'终止'状态，推荐的步骤是什么？", "A": "立即强制删除该对象", "B": "手动清除`finalizers`字段", "C": "检查终结器和所有者引用", "D": "重启Kubernetes主节点", "answer": "C", "score": 4}
{"id": 125, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "以下哪一个不是Kubernetes中有效的标签键？", "A": "release", "B": "environment/qa", "C": "tier_frontend", "D": "component=redis", "answer": "D", "score": 3}
{"id": 126, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个`kubectl`命令可以用于列出具有标签'environment=production'和'tier=frontend'的pods？", "A": "kubectl get pods -l environment=production,tier=frontend", "B": "kubectl list pods -l environment, tier=frontend", "C": "kubectl describe pods -l environment=production and tier=frontend", "D": "kubectl show pods -l environment=production & tier=frontend", "answer": "A", "score": 4}
{"id": 127, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在Kubernetes中应该使用什么来基于更具表达性的标准（如'in'和'notin'）过滤对象？", "A": "Names", "B": "UIDs", "C": "Label selectors", "D": "Annotations", "answer": "C", "score": 4}
{"id": 128, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的UID在唯一性方面是如何定义的？", "A": "仅在同一命名空间内唯一", "B": "在整个集群中唯一", "C": "在同一个pod内唯一", "D": "每个Kubernetes服务唯一", "answer": "B", "score": 4}
{"id": 129, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "以下哪一个特征不适用于RFC 1035标签名称？", "A": "可以以数字开头", "B": "可以包含小写字母数字字符或'-'", "C": "最多包含63个字符", "D": "必须以字母字符开头", "answer": "A", "score": 3}
{"id": 130, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪种类型的Kubernetes名称可以安全地编码为路径段？", "A": "Path Segment Names", "B": "RFC 1123 Label Names", "C": "DNS Subdomain Names", "D": "RFC 1035 Label Names", "answer": "A", "score": 4}
{"id": 131, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes中哪个命名空间可以被所有客户端读取，包括那些未认证的客户端？", "A": "kube-node-lease", "B": "kube-public", "C": "kube-system", "D": "default", "answer": "B", "score": 3}
{"id": 132, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "创建与公共顶级域名相同名称的命名空间可能会导致什么潜在的安全问题？", "A": "可能导致DNS冲突和意外将流量路由到集群服务", "B": "增加命名空间之间数据泄露的风险", "C": "可能导致Kubernetes API因名称冲突而崩溃", "D": "阻止命名空间被删除", "answer": "A", "score": 4}
{"id": 133, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何永久保存上下文中所有后续kubectl命令的命名空间偏好？", "A": "kubectl save namespace <insert-namespace-name-here>", "B": "kubectl set namespace <insert-namespace-name-here>", "C": "kubectl config set-context --current --namespace=<insert-namespace-name-here>", "D": "kubectl apply namespace <insert-namespace-name-here>", "answer": "C", "score": 4}
{"id": 134, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用命令式命令管理Kubernetes对象推荐在哪种环境中使用？", "A": "生产项目", "B": "开发项目", "C": "数据分析项目", "D": "网络配置项目", "answer": "B", "score": 3}
{"id": 135, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在配置存储在源代码控制系统中的场景中，哪种Kubernetes对象管理技术是最好的？", "A": "命令式命令", "B": "命令式对象配置", "C": "声明式对象配置", "D": "以上全部", "answer": "C", "score": 4}
{"id": 136, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "哪个命令通过覆盖实时配置来更新Kubernetes中的实时对象？", "A": "kubectl create -f nginx.yaml", "B": "kubectl delete -f nginx.yaml", "C": "kubectl replace -f nginx.yaml", "D": "kubectl patch -f nginx.yaml", "answer": "C", "score": 4}
{"id": 137, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "声明式对象配置相比命令式对象配置的主要优点是什么？", "A": "它需要更少的命令", "B": "它更容易理解", "C": "它保留了其他编写者所做的更改", "D": "它在所有版本的Kubernetes中都受支持", "answer": "C", "score": 4}
{"id": 138, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes机制中哪一个可以防止未经授权的用户延迟删除所有者对象？", "A": "Namespace isolation", "B": "Finalizers", "C": "Admission controllers", "D": "Garbage collection policies", "answer": "B", "score": 3}
{"id": 139, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个kubectl命令可以用来识别无效的跨命名空间所有者引用？", "A": "kubectl get all -A", "B": "kubectl describe events", "C": "kubectl get events -A --field-selector=reason=OwnerRefInvalidNamespace", "D": "kubectl logs --namespace", "answer": "C", "score": 4}
{"id": 140, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪种finalizer通常与PersistentVolume相关联，以防止其在仍绑定到Pod时被删除？", "A": "kubernetes.io/pv-protection", "B": "kubernetes.io/preserve-data", "C": "kubernetes.io/retain-volume", "D": "kubernetes.io/storage-protector", "answer": "A", "score": 4}
{"id": 141, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个kubectl命令用于应用清单文件？", "A": "kubectl set", "B": "kubectl create", "C": "kubectl apply", "D": "kubectl execute", "answer": "C", "score": 3}
{"id": 142, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在Kubernetes中，哪种机制有助于确保集群的状态与对象配置中指定的期望状态一致？", "A": "Server side field validation", "B": "The control plane", "C": "Client libraries", "D": "kubectl --validate flag", "answer": "B", "score": 5}
{"id": 143, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes v1.25及以上版本中帮助检测对象中未识别或重复字段的功能是什么？", "A": "API versioning", "B": "Client-side validation", "C": "Server side field validation", "D": "Control plane monitoring", "answer": "C", "score": 3}
{"id": 144, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如果请求违反了LimitRange约束，将返回哪个HTTP状态码？", "A": "200 OK", "B": "401 Unauthorized", "C": "403 Forbidden", "D": "500 Internal Server Error", "answer": "C", "score": 3}
{"id": 145, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如果一个命名空间中所有Pod的总限制超过了LimitRanges设置的总限制，会发生什么？", "A": "命名空间的资源限制会自动增加", "B": "由于资源争用，Pod或容器可能无法创建", "C": "超出的Pod将排队等待创建", "D": "Kubernetes会从其他命名空间重新分配资源", "answer": "B", "score": 4}
{"id": 146, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "当创建一个未指定计算资源的Pod时，LimitRange admission controller会做什么？", "A": "立即删除Pod", "B": "应用默认的限制和请求值", "C": "阻止Pod被调度", "D": "向集群管理员发出警报", "answer": "B", "score": 4}
{"id": 147, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "哪种Kubernetes组件直接参与优化Pod的CPU、设备和内存对齐？", "A": "Scheduler", "B": "Device Manager", "C": "CPU Manager", "D": "Topology Manager", "answer": "D", "score": 4}
{"id": 148, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "您可以在哪里找到管理Kubernetes CPU资源的配置选项？", "A": "/docs/tasks/administer-cluster/cpu-management-policies/", "B": "/docs/tasks/manage-kubernetes-objects/", "C": "/docs/reference/kubectl/cheatsheet/", "D": "/docs/tutorials/kubernetes-basics/", "answer": "A", "score": 3}
{"id": 149, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes的资源管理器的哪个方面直接关系到设备插件的集成？", "A": "调度器增强", "B": "内存管理", "C": "设备管理器", "D": "CPU分配策略", "answer": "C", "score": 4}
{"id": 150, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "哪个Kubernetes组件负责防止可能影响系统守护进程（如kubelet或kube-proxy）的PID耗尽？", "A": "PID管理器", "B": "PID控制器", "C": "LimitRange", "D": "PID准入控制器", "answer": "D", "score": 4}
{"id": 151, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果在Kubernetes集群中不控制单个Pod的PID使用，会发生什么？", "A": "它可能垄断所有可用的PID，导致节点不稳定", "B": "它会不可控地增加内存使用", "C": "它会导致Pod无限扩展", "D": "它会触发自动节点修复机制", "answer": "A", "score": 3}
{"id": 152, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令行参数允许您设置节点上Pod可以使用的最大PID数？", "A": "--max-pods", "B": "--pod-max-pids", "C": "--max-pid-limit", "D": "--set-pid-cap", "answer": "B", "score": 3}
{"id": 153, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如果资源创建请求超过了命名空间中设置的资源配额，会发生什么？", "A": "资源被排队", "B": "请求会被自动调整", "C": "请求失败并返回HTTP 403 Forbidden", "D": "配额暂时增加", "answer": "C", "score": 3}
{"id": 154, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个准入控制器有助于在命名空间中强制执行默认计算资源需求？", "A": "NamespaceLifecycle", "B": "ResourceQuota", "C": "LimitRanger", "D": "ServiceAccount", "answer": "C", "score": 4}
{"id": 155, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "通过在ResourceQuota中指定'requests.storage'可以限制哪种资源类型？", "A": "CPU周期", "B": "Pod执行", "C": "持久卷声明", "D": "网络带宽", "answer": "C", "score": 4}
{"id": 156, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "LimitRanges在Kubernetes中起什么作用？", "A": "执行命名约定", "B": "管理资源分配约束", "C": "监控资源使用情况", "D": "自动化部署过程", "answer": "B", "score": 4}
{"id": 157, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "启用Kubernetes API服务器中的准入插件需要使用哪个命令？", "A": "--enable-admission-plugins flag", "B": "--admission-control", "C": "--enable-plugins", "D": "--set-plugins", "answer": "A", "score": 3}
{"id": 158, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个准入控制器会修改新Pod以强制执行'image pull policy'为'Always'？", "A": "AlwaysPullImages", "B": "PullAlways", "C": "AlwaysImagePull", "D": "ImagePullAlways", "answer": "A", "score": 4}
{"id": 159, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中的`ValidatingAdmissionPolicy`的功能是什么？", "A": "自动设置资源限制", "B": "验证API请求", "C": "更改API响应", "D": "监控API效率", "answer": "B", "score": 3}
{"id": 160, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪个HTTP状态码表示驱逐暂时被PodDisruptionBudgets阻止？", "A": "200 OK", "B": "400 Bad Request", "C": "429 Too Many Requests", "D": "500 Internal Server Error", "answer": "C", "score": 3}
{"id": 161, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "创建哪个Kubernetes资源以通过API请求驱逐？", "A": "Eviction object", "B": "Deployment object", "C": "Pod object", "D": "Service object", "answer": "A", "score": 4}
{"id": 162, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "如何访问Kubernetes API以创建用于驱逐pod的`Eviction`对象？", "A": "使用`kubectl apply`命令", "B": "使用Kubernetes语言客户端", "C": "直接从Kubernetes仪表板", "D": "通过使用Kubernetes Operators", "answer": "B", "score": 4}
{"id": 163, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如果在Pod规范中同时指定`nodeSelector`和`nodeAffinity`，Pod要被调度到节点上需要什么条件？", "A": "只需满足其中一个", "B": "必须同时满足", "C": "只需满足`nodeSelector`", "D": "只需满足`nodeAffinity`", "answer": "B", "score": 3}
{"id": 164, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Pod规范中的哪个字段可以直接将Pod分配给指定节点，绕过调度程序？", "A": "`nodeSelector`", "B": "`affinity`", "C": "`nodeName`", "D": "`labels`", "answer": "C", "score": 4}
{"id": 165, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes如何确保Pod只能调度到同时满足`nodeSelector`和`nodeAffinity`的节点上？", "A": "首先评估`nodeSelector`", "B": "通过使用admission controller", "C": "通过使用调度策略", "D": "确保满足两个条件", "answer": "D", "score": 4}
{"id": 166, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的哪个功能提供了在pod之间请求和共享资源的通用方法？", "A": "动态资源分配", "B": "持久卷", "C": "节点亲和性", "D": "Pod调度上下文", "answer": "A", "score": 3}
{"id": 167, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在动态资源分配中，调度程序在使用结构化参数时使用什么来做出分配决策？", "A": "ResourceSlice对象", "B": "资源驱动程序", "C": "PodSchedulingContexts", "D": "自定义参数", "answer": "A", "score": 3}
{"id": 168, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个API组与Kubernetes中的动态资源分配相关？", "A": "`core/v1`", "B": "`resource.k8s.io/v1alpha2`", "C": "`apps/v1`", "D": "`batch/v1`", "answer": "B", "score": 4}
{"id": 169, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如果pod未能被调度，基于kube-scheduler的过程可能的原因是什么？", "A": "当前没有可用节点", "B": "pod不符合节点策略", "C": "在过滤过程中未找到可行节点", "D": "所有节点当前都超载", "answer": "C", "score": 4}
{"id": 170, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令行工具提供关于Kubernetes默认调度程序的详细信息？", "A": "`kubectl`", "B": "`kube-scheduler`", "C": "`kubelet`", "D": "`kubeadm`", "answer": "B", "score": 3}
{"id": 171, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "kube-scheduler如何确保pod被调度到最合适的节点？", "A": "通过在潜在节点上保留资源", "B": "通过随机选择节点", "C": "使用过滤和评分过程", "D": "通过实时检查节点可用性", "answer": "C", "score": 4}
{"id": 172, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在节点压力驱逐期间，kubelet不尊重什么？", "A": "Pod的安全上下文", "B": "PodDisruptionBudgets", "C": "Pod的服务账户", "D": "Pod的资源限制", "answer": "B", "score": 4}
{"id": 173, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪种kubelet配置允许在硬驱逐阈值上立即终止pod？", "A": "`terminationGracePeriodSeconds`设置为`0s`", "B": "`eviction-max-pod-grace-period`设置为`0s`", "C": "`eviction-hard`设置为`0s`宽限期", "D": "`hardEvictionThresholds`设置为`0s`", "answer": "C", "score": 4}
{"id": 174, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个资源不是由kubelet直接监控以进行节点压力驱逐的？", "A": "CPU使用率", "B": "磁盘空间", "C": "内存使用情况", "D": "文件系统inode", "answer": "A", "score": 3}
{"id": 175, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "Kubernetes如何确保在调度过程中包含Pod的开销？", "A": "为所有pod设置默认开销", "B": "计算容器限制", "C": "在kube-scheduler的决策中包括Pod的开销", "D": "限制每个节点的pod数量", "answer": "C", "score": 4}
{"id": 176, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个命令来查看特定Pod的更新Pod开销值？", "A": "kubectl describe pod", "B": "kubectl get pod -o jsonpath='{.spec.overhead}'", "C": "kubectl apply -f pod.yaml", "D": "kubectl config view", "answer": "B", "score": 4}
{"id": 177, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "Kubernetes组件中哪个负责在接纳时更新工作负载的PodSpec以包含`overhead`？", "A": "kube-scheduler", "B": "kube-proxy", "C": "RuntimeClass接纳控制器", "D": "API server", "answer": "C", "score": 5}
{"id": 178, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如果Pod具有未满足的`schedulingGates`，它可能处于什么状态？", "A": "运行中", "B": "待定", "C": "SchedulingGated", "D": "CrashLoopBackOff", "answer": "B", "score": 3}
{"id": 179, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪个Kubernetes指标标签表示Pod已被明确标记为不适合调度？", "A": "scheduler_unschedulable_pods", "B": "scheduler_ready_pods", "C": "scheduler_pending_pods", "D": "scheduler_gated_pods", "answer": "D", "score": 3}
{"id": 180, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于检查Pod的`schedulingGates`字段？", "A": "kubectl describe pod", "B": "kubectl get nodes", "C": "kubectl get pod -o jsonpath='{.spec.schedulingGates}'", "D": "kubectl apply -f pod.yaml", "answer": "C", "score": 4}
{"id": 181, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在`NodeResourcesFit`插件中，哪种评分策略允许基于请求与容量比率进行装箱？", "A": "LeastAllocated", "B": "MostAllocated", "C": "RequestedToCapacityRatio", "D": "BalancedResourceAllocation", "answer": "C", "score": 4}
{"id": 182, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在`RequestedToCapacityRatio`评分策略中，哪个参数允许调整装箱评分函数？", "A": "shape", "B": "scale", "C": "form", "D": "pattern", "answer": "A", "score": 4}
{"id": 183, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个配置文件用于设置Kubernetes中的`RequestedToCapacityRatio`评分策略？", "A": "KubeProxyConfiguration", "B": "KubeletConfiguration", "C": "KubeSchedulerConfiguration", "D": "KubeControllerManagerConfiguration", "answer": "C", "score": 4}
{"id": 184, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "kube-scheduler中的`percentageOfNodesToScore`设置配置了什么？", "A": "节点可以运行的Pod数量", "B": "分配给每个Pod的CPU百分比", "C": "调度节点的评分阈值", "D": "每个节点的内存使用限制", "answer": "C", "score": 4}
{"id": 185, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "将`percentageOfNodesToScore`设置得太低会有什么影响？", "A": "增加主节点的内存使用", "B": "降低调度延迟", "C": "可能导致不良的Pod放置决策", "D": "阻止Pod的调度", "answer": "C", "score": 4}
{"id": 186, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在更改配置后如何验证kube-scheduler的健康状态？", "A": "kubectl get pods -n kube-system | grep kube-scheduler", "B": "kubectl describe node", "C": "kubectl config view", "D": "kubectl get services -n kube-system", "answer": "A", "score": 3}
{"id": 187, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在Kubernetes调度框架中，使大多数调度功能可作为插件实现的主要优势是什么？", "A": "简化了网络策略的管理", "B": "保持调度核心轻量且可维护", "C": "增强集群的安全性", "D": "自动备份Pod数据", "answer": "B", "score": 4}
{"id": 188, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "更改配置后使用哪个命令验证kube-scheduler的健康状态？", "A": "kubectl get nodes", "B": "kubectl get services", "C": "kubectl get pods -n kube-system | grep kube-scheduler", "D": "kubectl describe pod", "answer": "C", "score": 4}
{"id": 189, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在Kubernetes调度框架中，PreBind插件接口的作用是什么？", "A": "过滤出不能运行Pod的节点", "B": "对节点进行排名以找到最适合Pod的节点", "C": "在Pod绑定到节点之前执行必要的操作", "D": "在Pod调度之前保留节点上的资源", "answer": "C", "score": 4}
{"id": 190, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Pod规格中的哪个字段用于定义拓扑分布约束？", "A": "nodeSelector", "B": "affinity", "C": "topologySpreadConstraints", "D": "tolerations", "answer": "C", "score": 5}
{"id": 191, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个kubectl命令可以获取有关Pod规格中拓扑分布约束字段的更多详细信息？", "A": "kubectl describe Pod.spec.topologySpreadConstraints", "B": "kubectl get Pod.spec.topologySpreadConstraints", "C": "kubectl explain Pod.spec.topologySpreadConstraints", "D": "kubectl logs Pod.spec.topologySpreadConstraints", "answer": "C", "score": 4}
{"id": 192, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在Kubernetes中，在拓扑分布约束中设置'不调度'策略如何影响Pod调度？", "A": "优先调度Pod", "B": "如果不能满足约束条件，则阻止Pod调度", "C": "无视约束条件强制将Pod调度到节点", "D": "删除不满足约束条件的Pod", "answer": "B", "score": 3}
{"id": 193, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在Kubernetes中，'抢占'是什么意思？", "A": "一种分配动态资源的方法", "B": "一种增强性能的调度框架", "C": "为高优先级Pod终止低优先级Pod的过程", "D": "向节点添加污点的过程", "answer": "C", "score": 4}
{"id": 194, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "哪种功能允许Kubernetes终止资源不足节点上的Pod？", "A": "污点和容忍度", "B": "调度器性能调优", "C": "节点压力驱逐", "D": "Pod优先级和抢占", "answer": "C", "score": 4}
{"id": 195, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "Kubernetes中的'驱逐'过程是什么？", "A": "将Pod分配到节点", "B": "主动终止资源紧张节点上的Pod", "C": "将Pod与kubelet匹配", "D": "根据节点可用性优先部署Pod", "answer": "B", "score": 3}
{"id": 196, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种API提供对节点的直接访问，可能绕过Kubernetes入站控制？", "A": "API server", "B": "Kubelet API", "C": "etcd API", "D": "Cloud provider API", "answer": "B", "score": 4}
{"id": 197, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "哪个组件的API允许披露或修改Kubernetes集群中的任何数据？", "A": "Kubernetes API", "B": "Docker API", "C": "etcd API", "D": "kube-proxy API", "answer": "C", "score": 5}
{"id": 198, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "应采取什么措施来限制对kubelet端口的访问？", "A": "启用RBAC", "B": "只允许受信任的IP范围", "C": "启用匿名访问", "D": "禁用网络策略", "answer": "B", "score": 4}
{"id": 199, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个阶段重点关注为容器镜像供应链提供安全保障？", "A": "开发生命周期阶段", "B": "分发生命周期阶段", "C": "部署生命周期阶段", "D": "运行时生命周期阶段", "answer": "B", "score": 3}
{"id": 200, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在分发生命周期阶段哪种加密至关重要？", "A": "静态加密", "B": "使用中加密", "C": "传输中加密", "D": "备份加密", "answer": "C", "score": 4}
{"id": 201, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "哪个Kubernetes特性在运行时保护API流量？", "A": "Pod安全标准", "B": "网络策略", "C": "TLS加密", "D": "RBAC策略", "answer": "C", "score": 4}
{"id": 202, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes用什么来验证访问API的用户或服务的身份？", "A": "授权策略", "B": "认证机制", "C": "入站控制器", "D": "API网关", "answer": "B", "score": 5}
{"id": 203, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes中，授权的作用是什么？", "A": "它对静态数据进行加密。", "B": "它确保安全通信。", "C": "它确定用户是否可以执行某个操作。", "D": "它修改或拒绝请求。", "answer": "C", "score": 4}
{"id": 204, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes中，经过身份验证后哪些模块可以修改或拒绝请求？", "A": "认证模块", "B": "入站控制模块", "C": "TLS模块", "D": "API网关", "answer": "B", "score": 4}
{"id": 205, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个命令可以检查特定命名空间的Pod安全入站的执行模式？", "A": "kubectl describe namespace [name]", "B": "kubectl get namespace [name]", "C": "kubectl apply -f namespace.yaml", "D": "kubectl config set-context --current --namespace=[name]", "answer": "A", "score": 3}
{"id": 206, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个Kubernetes特性记录与Pod安全标准相关的策略违规？", "A": "Pod安全入站的审计日志", "B": "事件记录器", "C": "Kubernetes仪表盘", "D": "资源监控器", "answer": "A", "score": 4}
{"id": 207, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "当一个pod在“执行”模式下违反安全策略时，Pod安全入站会采取什么行动？", "A": "记录违规行为", "B": "发送警告", "C": "拒绝pod", "D": "重试pod创建", "answer": "C", "score": 4}
{"id": 208, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何配置Kubernetes命名空间以应用不同的Pod安全标准？", "A": "通过设置特定的环境变量", "B": "通过配置相应的节点", "C": "通过使用标签定义安全级别", "D": "通过分配不同的集群角色", "answer": "C", "score": 3}
{"id": 209, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "推荐作为PodSecurityPolicy替代的功能是什么？", "A": "节点安全组", "B": "Pod安全准入", "C": "网络安全配置", "D": "服务网格安全", "answer": "B", "score": 4}
{"id": 210, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Pod安全标准中的Baseline策略旨在防止什么？", "A": "所有的安全漏洞", "B": "已知的权限升级", "C": "Pod驱逐", "D": "资源限制", "answer": "B", "score": 3}
{"id": 211, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个Pod安全标准政策被描述为严格限制，遵循当前的加固最佳实践？", "A": "Privileged", "B": "Baseline", "C": "Restricted", "D": "以上都不是", "answer": "C", "score": 5}
{"id": 212, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Restricted策略下，哪种类型的容器需要以非root用户运行？", "A": "只有初始化容器", "B": "只有应用容器", "C": "所有容器", "D": "没有容器", "answer": "C", "score": 4}
{"id": 213, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "应该使用哪种类型的绑定来限制用户对特定命名空间的权限？", "A": "RoleBinding", "B": "ClusterRoleBinding", "C": "UserBinding", "D": "GroupBinding", "answer": "A", "score": 4}
{"id": 214, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "推荐哪种RBAC实践以避免意外修改集群资源？", "A": "在日常操作中使用'cluster-admin'账户", "B": "授予低权限账户模拟权限", "C": "分配通配符权限以简化管理", "D": "允许所有用户访问'system:masters'组", "answer": "B", "score": 4}
{"id": 215, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "当用户具有Kubernetes secrets的'list'或'watch'权限时，潜在的风险是什么？", "A": "他们可以修改secrets", "B": "他们可以删除secrets", "C": "他们可以将secrets导出到外部数据库", "D": "他们可以泄露secrets的内容", "answer": "D", "score": 4}
{"id": 216, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪个Kubernetes功能允许将Secret访问限制到Pod内的特定容器？", "A": "Pod affinity", "B": "节点选择器", "C": "卷挂载", "D": "服务账户", "answer": "C", "score": 4}
{"id": 217, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "应用程序开发人员在处理Kubernetes Secrets时，以下哪种做法不是推荐的？", "A": "将secrets存储在源码库中", "B": "将secret访问限制到特定容器", "C": "读取环境变量后的保护secret数据", "D": "避免记录secret数据", "answer": "A", "score": 4}
{"id": 218, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "可以用什么来提醒可能的secret泄漏，例如多个secrets的并发读取？", "A": "RBAC政策", "B": "审计规则", "C": "网络策略", "D": "Pod安全政策", "answer": "B", "score": 4}
{"id": 219, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "可以用什么来限制ServiceAccount在命名空间内对Secrets的访问？", "A": "RBAC政策", "B": "命名空间选择器", "C": "kubernetes.io/enforce-mountable-secrets注解", "D": "ServiceAccount准入控制", "answer": "A", "score": 3}
{"id": 220, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes 中 ServiceAccounts 提供哪种类型的身份?", "A": "用户身份", "B": "匿名身份", "C": "非人类身份", "D": "外部系统身份", "answer": "C", "score": 3}
{"id": 221, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Kubernetes 中使用哪个命令创建 ServiceAccount 对象?", "A": "kubectl create serviceaccount", "B": "kubectl create sa", "C": "kubectl apply serviceaccount", "D": "kubectl set serviceaccount", "answer": "A", "score": 4}
{"id": 222, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "可以使用哪个 API 验证 Kubernetes 服务帐户凭据?", "A": "ServiceAccount API", "B": "TokenReview API", "C": "ServiceReview API", "D": "CredentialValidation API", "answer": "B", "score": 4}
{"id": 223, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes API 中提供了对需要保密的配置值进行基本保护的是什么?", "A": "ConfigMap", "B": "Secret", "C": "Volume", "D": "ServiceAccount", "answer": "B", "score": 5}
{"id": 224, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "Kubernetes 审计日志记录什么内容?", "A": "资源使用统计", "B": "性能指标", "C": "集群中的操作序列", "D": "配置更改", "answer": "C", "score": 4}
{"id": 225, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Kubernetes 控制平面内启用传输中的数据加密需要哪个命令?", "A": "kubectl encrypt", "B": "kubectl tls", "C": "kubectl config set", "D": "kubectl apply", "answer": "D", "score": 3}
{"id": 226, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "应强制执行哪种安全控制以适当隔离 Pods 及其容器?", "A": "NetworkPolicy", "B": "PodSecurityPolicy", "C": "ResourceQuota", "D": "Pod security standards", "answer": "D", "score": 4}
{"id": 227, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种策略类型允许你声明性地限制使用 Kubernetes API 进行的更改?", "A": "ResourceQuota", "B": "LimitRange", "C": "NetworkPolicy", "D": "ValidatingAdmissionPolicy", "answer": "D", "score": 4}
{"id": 228, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes 中使用 X.509 客户端证书进行用户身份验证的一个重要限制是什么?", "A": "证书不能单独吊销", "B": "证书无限期有效", "C": "证书可以设置密码保护", "D": "证书不需要 CA", "answer": "A", "score": 3}
{"id": 229, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "由于与明文凭证存储相关的安全风险，哪种身份验证方法不推荐用于生产服务器?", "A": "OIDC token authentication", "B": "Webhook token authentication", "C": "X.509 client certificate authentication", "D": "Static token file", "answer": "D", "score": 3}
{"id": 230, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes 中使用静态令牌文件的主要缺点是什么?", "A": "它们允许轻松进行令牌轮换", "B": "它们需要频繁重启 API 服务器", "C": "它们对暴力攻击高度安全", "D": "它们支持自动凭证轮换", "answer": "B", "score": 4}
{"id": 231, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes 中，为服务身份验证生成短期凭证推荐使用哪种方法?", "A": "Bootstrap tokens", "B": "TokenRequest API tokens", "C": "Static token files", "D": "Webhook tokens", "answer": "B", "score": 4}
{"id": 232, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 中，尝试创建已分配 ClusterIP 的服务会导致：", "A": "警告信息", "B": "自动重新分配", "C": "配置错误", "D": "错误且服务创建失败", "answer": "D", "score": 3}
{"id": 233, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 主要如何防止服务的 ClusterIP 冲突？", "A": "通过提前保留所有潜在 IP", "B": "首先从动态范围分配 IP", "C": "仅通过手动 IP 分配", "D": "使用复杂的 IP 掩码技术", "answer": "B", "score": 3}
{"id": 234, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "静态 IP 分配对 Kubernetes 服务有什么好处？", "A": "防止 IP 冲突", "B": "使知名服务的连接更容易", "C": "使用更少的 IP 地址", "D": "支持自动 IP 轮换", "answer": "B", "score": 2}
{"id": 235, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "非无头 Kubernetes 服务通过 DNS 如何解析？", "A": "解析为服务选择的所有 Pod 的 IP 集合", "B": "解析为集群的外部 IP 地址", "C": "解析为服务的 ClusterIP", "D": "解析为主节点的 IP 地址", "answer": "C", "score": 3}
{"id": 236, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 中普通和无头服务的命名端口使用哪种 DNS 记录类型？", "A": "CNAME 记录", "B": "MX 记录", "C": "SRV 记录", "D": "TXT 记录", "answer": "C", "score": 4}
{"id": 237, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在 Kubernetes 的 DNS 上下文中，什么可能导致一个命名空间中的 Pod 无法解析另一个命名空间中的服务的 DNS 名称？", "A": "该服务不允许跨命名空间访问", "B": "DNS 查询未指定服务的命名空间", "C": "Pod 没有正确的角色和权限", "D": "Kubernetes 不支持跨命名空间的 DNS 查询", "answer": "B", "score": 3}
{"id": 238, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "要在 Kubernetes 中使用 IPv4/IPv6 双栈，网络插件必须支持什么？", "A": "动态路由", "B": "双栈网络", "C": "负载均衡", "D": "网络策略", "answer": "B", "score": 4}
{"id": 239, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "EndpointSlice 的默认最大端点数是多少？", "A": "50", "B": "100", "C": "500", "D": "1000", "answer": "B", "score": 4}
{"id": 240, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes 版本 v1.21 中，EndpointSlice API 的功能状态是？", "A": "Alpha", "B": "Beta", "C": "稳定", "D": "已弃用", "answer": "C", "score": 3}
{"id": 241, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "EndpointSlices 可以作为哪个 Kubernetes 组件的内部流量路由的真实来源？", "A": "kube-scheduler", "B": "kube-proxy", "C": "kubelet", "D": "kube-controller-manager", "answer": "B", "score": 4}
{"id": 242, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个 Kubernetes 角色通常负责管理允许多个隔离集群为多个租户服务的基础设施？", "A": "应用开发人员", "B": "集群操作员", "C": "基础设施提供者", "D": "网络管理员", "answer": "C", "score": 4}
{"id": 243, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Gateway API 使用哪种资源类型来定义其规范？", "A": "DaemonSets", "B": "ConfigMaps", "C": "自定义资源", "D": "StatefulSets", "answer": "C", "score": 4}
{"id": 244, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪种 Gateway API 类型定义了从 Gateway 监听器到后端网络端点映射流量的特定于 HTTP 的规则？", "A": "GatewayClass", "B": "Gateway", "C": "HTTPRoute", "D": "ServiceRoute", "answer": "C", "score": 3}
{"id": 245, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "从 Ingress 迁移到 Gateway API 应该怎么做？", "A": "使用 Kubernetes 工具自动转换", "B": "手动将现有的 Ingress 资源转换为 Gateway API 资源", "C": "禁用 Ingress 并启用 Gateway API", "D": "无需迁移，因为两者可以共存而没有问题", "answer": "B", "score": 4}
{"id": 246, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Ingress 资源要运行在集群中，必须运行什么？", "A": "Ingress 提供者", "B": "Ingress 控制器", "C": "Ingress 管理器", "D": "Ingress 链接器", "answer": "B", "score": 3}
{"id": 247, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "当使用多个控制器时，Ingress 对象上的哪个字段指定 Ingress 类？", "A": "ingressClassName", "B": "ingressType", "C": "ingressSelector", "D": "classSelector", "answer": "A", "score": 3}
{"id": 248, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何在 Kubernetes 中将 IngressClass 标记为默认？", "A": "在类中设置 'default' 标志", "B": "使用 'kubectl set default' 命令", "C": "使用 'ingressclass.kubernetes.io/is-default-class=true' 标签", "D": "在 kube-apiserver 中配置", "answer": "C", "score": 4}
{"id": 249, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "要查看名为 'ingress-resource-backend' 的 Ingress 资源的详细信息，使用哪个命令？", "A": "kubectl get ingress ingress-resource-backend", "B": "kubectl describe ingress ingress-resource-backend", "C": "kubectl logs ingress-resource-backend", "D": "kubectl inspect ingress-resource-backend", "answer": "B", "score": 3}
{"id": 250, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "为解决 Ingress 未按预期路由流量的问题，首先应该检查哪个资源的配置？", "A": "Service", "B": "Pod", "C": "Ingress 控制器", "D": "Node", "answer": "C", "score": 3}
{"id": 251, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Ingress 要正常运行，必须具备哪个 Kubernetes 资源，如果尚未存在则必须创建？", "A": "Service", "B": "IngressClass", "C": "Ingress 控制器", "D": "ConfigMap", "answer": "C", "score": 4}
{"id": 252, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果 Kubernetes pod 的流量未按预期流动，首先应该检查哪个 Kubernetes 功能？", "A": "Ingress 规则", "B": "Service 配置", "C": "NetworkPolicies", "D": "Pod 亲和性规则", "answer": "C", "score": 3}
{"id": 253, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 Kubernetes 命令用于应用 NetworkPolicy？", "A": "kubectl apply -f", "B": "kubectl set policy", "C": "kubectl enable np", "D": "kubectl config set", "answer": "A", "score": 3}
{"id": 254, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于显示影响集群的 NetworkPolicies？", "A": "kubectl get networkpolicies", "B": "kubectl describe networkpolicies", "C": "kubectl list policies", "D": "kubectl show policies", "answer": "B", "score": 4}
{"id": 255, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes 中使用 'Local' 设置的 Service Internal Traffic Policy 的主要好处是什么？", "A": "通过限制访问增加应用程序的安全性", "B": "通过避免不必要的路由减少网络延迟并提高性能", "C": "根据流量自动扩展应用程序", "D": "启用应用程序的自动更新", "answer": "B", "score": 4}
{"id": 256, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在 Kubernetes 中，如果由于服务内部流量策略设置为“Local”导致 pod 无法访问同一节点上的服务端点，可能的原因是什么？", "A": "节点负载过高并丢包", "B": "该节点上没有该服务的端点", "C": "网络策略阻止了对该服务的流量", "D": "服务配置错误，无法识别本地流量", "answer": "B", "score": 3}
{"id": 257, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 服务定义中的哪个字段决定流量是仅路由到本地端点还是所有集群端点？", "A": ".spec.internalTrafficPolicy", "B": ".spec.trafficScope", "C": ".spec.endpointSelection", "D": ".spec.routingPolicy", "answer": "A", "score": 3}
{"id": 258, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 服务的主要功能是什么？", "A": "编排容器部署", "B": "管理存储卷", "C": "通过网络暴露 Pods", "D": "监控 Pod 健康", "answer": "C", "score": 2}
{"id": 259, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如果要使用 DNS 名称将服务暴露到外部互联网而不使用选择器，应该使用哪种类型的 Kubernetes 服务？", "A": "ClusterIP", "B": "NodePort", "C": "LoadBalancer", "D": "ExternalName", "answer": "D", "score": 4}
{"id": 260, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 服务如何帮助集群内的前端 Pods 发现后端 Pods？", "A": "通过提供持久存储", "B": "通过自动 IP 分配和 DNS 命名", "C": "通过手动配置 Pod IP", "D": "通过隔离网络流量", "answer": "B", "score": 4}
{"id": 261, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 Kubernetes 命令可以用来从 YAML 文件应用新的服务配置？", "A": "kubectl apply -f", "B": "kubectl set", "C": "kubectl attach", "D": "kubectl config", "answer": "A", "score": 3}
{"id": 262, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "哪种 Kubernetes 功能调整路由以偏向同一区域内的流量？", "A": "Ingress Controllers", "B": "Horizontal Pod Autoscaler", "C": "Topology Aware Routing", "D": "Cluster Autoscaler", "answer": "C", "score": 4}
{"id": 263, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "要利用 Topology Aware Routing，应该在服务上启用什么？", "A": "`AutoScaling`", "B": "`service.kubernetes.io/topology-mode` 设置为 `Auto`", "C": "`HorizontalPodAutoscaler`", "D": "`NetworkPolicies`", "answer": "B", "score": 4}
{"id": 264, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如果 EndpointSlice 控制器无法确保端点在区域之间的均衡分配，会发生什么？", "A": "默认到集群范围的路由", "B": "在平衡恢复之前停止所有流量", "C": "禁用服务直到添加更多端点", "D": "删除不均衡的端点", "answer": "A", "score": 3}
{"id": 265, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Windows 的 Kubernetes 网络中，CNI 插件的功能是什么？", "A": "自动化负载均衡", "B": "管理虚拟网络适配器和交换机", "C": "配置 DNS 设置", "D": "实施网络策略", "answer": "B", "score": 3}
{"id": 266, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Windows Kubernetes 环境中，主机网络服务（HNS）的主要角色是什么？", "A": "管理容器存储", "B": "配置节点设置", "C": "管理网络资源，如虚拟网络和端点", "D": "调度容器启动", "answer": "C", "score": 4}
{"id": 267, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Windows 的 Kubernetes 中，许多网络配置如 DNS 和路由存储在哪里？", "A": "在 HCS 中", "B": "在 /etc 目录中", "C": "在 Windows 注册表中", "D": "在环境变量中", "answer": "C", "score": 3}
{"id": 268, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在Kubernetes中，无论网络实现如何，必须满足的基本网络要求是什么？", "A": "Pods必须使用NAT进行通信", "B": "Pods可以在不使用NAT的情况下跨节点与所有其他pods通信", "C": "Pods必须附加到主机网络", "D": "节点上的代理必须通过NAT与pods通信", "answer": "B", "score": 4}
{"id": 269, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种Kubernetes资源用于将运行在pods中的应用程序暴露给集群外部？", "A": "Ingress", "B": "ClusterIP", "C": "Service", "D": "Gateway", "answer": "C", "score": 3}
{"id": 270, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes API主要用于在集群内暴露HTTP应用程序和API的是什么？", "A": "Service API", "B": "Ingress API", "C": "Endpoint API", "D": "Networking API", "answer": "B", "score": 3}
{"id": 271, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在Kubernetes中，什么允许同一个pod内的容器使用localhost进行通信？", "A": "每个容器都有一个唯一的IP地址", "B": "容器共享一个IP地址", "C": "容器使用外部IP地址", "D": "容器通过唯一的MAC地址链接", "answer": "B", "score": 3}
{"id": 272, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在Kubernetes中，动态卷配置的主要好处是什么？", "A": "它自动创建存储卷。", "B": "它降低了存储成本。", "C": "它加密数据存储。", "D": "它自动增加存储卷大小。", "answer": "A", "score": 4}
{"id": 273, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在PersistentVolumeClaim中，哪个字段必须匹配StorageClass的名称以请求特定类型的动态配置存储？", "A": "volumeType", "B": "storageClassName", "C": "volumeName", "D": "className", "answer": "B", "score": 3}
{"id": 274, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "通过'fast'存储类清单配置的持久性磁盘是哪种类型？", "A": "标准磁盘", "B": "高容量SSD", "C": "低延迟NVMe", "D": "类似SSD的持久性磁盘", "answer": "D", "score": 3}
{"id": 275, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪种Kubernetes准入控制器用于在没有指定storageClassName时自动分配默认的StorageClass给PersistentVolumeClaims？", "A": "NodeRestriction", "B": "DefaultTolerationSeconds", "C": "DefaultStorageClass", "D": "AlwaysPullImages", "answer": "C", "score": 4}
{"id": 276, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪种卷类型不支持第三方CSI驱动程序的临时卷？", "A": "configMap", "B": "downwardAPI", "C": "secret", "D": "generic ephemeral volumes", "answer": "D", "score": 3}
{"id": 277, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "管理员在使用通用临时卷时应考虑的潜在安全问题是什么？", "A": "它们可能会被用户意外删除。", "B": "它们允许用户间接创建PVC，从而可能绕过直接创建PVC的权限。", "C": "它们默认加密数据，这可能违反合规要求。", "D": "它们不支持使用StorageClasses。", "answer": "B", "score": 4}
{"id": 278, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在通用临时卷中，'volumeClaimTemplate'的功能是什么？", "A": "它指定了卷的CPU和内存资源。", "B": "它概述了卷使用的持久存储。", "C": "它描述了临时卷的配置和声明参数。", "D": "它列出了适用于卷的网络策略。", "answer": "C", "score": 4}
{"id": 279, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "为了允许基于StorageClasses的PersistentVolumes的动态配置，集群管理员必须启用什么？", "A": "DefaultStorageClass准入控制器", "B": "DynamicProvisioning插件", "C": "PersistentVolumeClaim Protection", "D": "Storage Object in Use Protection功能", "answer": "A", "score": 3}
{"id": 280, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "“Retain” 回收策略对持久卷（PersistentVolume）意味着什么？", "A": "当持久卷声明（PersistentVolumeClaim）被删除时，卷会自动删除", "B": "卷可以被其他声明使用", "C": "数据保留在卷上，需要手动干预来回收", "D": "卷被立即回收再利用", "answer": "C", "score": 3}
{"id": 281, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "要检查名为 'hostpath' 的持久卷声明（PersistentVolumeClaim）的状态，使用什么命令？", "A": "kubectl get pv hostpath", "B": "kubectl describe pvc hostpath", "C": "kubectl delete pvc hostpath", "D": "kubectl apply -f pvc hostpath", "answer": "B", "score": 3}
{"id": 282, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪些类型的卷源可以包含在投射卷（projected volume）中？", "A": "PersistentVolumeClaim 和 EphemeralVolume", "B": "secret, downwardAPI, configMap, serviceAccountToken, clusterTrustBundle", "C": "ConfigMap 和 PersistentVolume 仅", "D": "Kubernetes 支持的任何卷类型", "answer": "B", "score": 4}
{"id": 283, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Kubernetes v1.29 中使用投射卷中的 clusterTrustBundle 必须启用什么？", "A": "具有 ClusterTrustBundle 功能门的 ClusterTrustBundle 对象", "B": "临时容器（Ephemeral containers）功能门", "C": "集群的安全上下文约束（SecurityContext constraints）", "D": "API 服务器授权模式设置为 RBAC", "answer": "A", "score": 4}
{"id": 284, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "通过投射卷注入到 Pod 中的服务帐户令牌的默认过期时间是多少？", "A": "30 分钟", "B": "1 小时", "C": "2 小时", "D": "24 小时", "answer": "B", "score": 3}
{"id": 285, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "投射卷源中服务帐户令牌的哪个字段指定令牌的预期受众？", "A": "audience", "B": "apiGroup", "C": "kind", "D": "name", "answer": "A", "score": 4}
{"id": 286, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 中 CSIStorageCapacity 对象的主要作用是什么？", "A": "管理节点级别的存储限制", "B": "跟踪集群级别的存储容量", "C": "创建存储卷", "D": "删除存储卷", "answer": "B", "score": 4}
{"id": 287, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 Kubernetes 中，要让调度器考虑存储容量，必须在 CSIDriverSpec 中将什么设置为 'true'？", "A": "StorageVolume", "B": "StorageClass", "C": "StorageCapacity", "D": "VolumeProvision", "answer": "C", "score": 4}
{"id": 288, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "在 Kubernetes 中使用多个卷时，可能导致永久性调度失败的原因是什么？", "A": "网络带宽不足", "B": "CPU 资源不足", "C": "卷创建在没有足够剩余容量的分段中", "D": "错误的 Pod 标签", "answer": "C", "score": 3}
{"id": 289, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 StorageClass 中进行持久卷（PersistentVolumes）动态配置需要什么？", "A": "特定的回收策略", "B": "provisioner、parameters 和 reclaimPolicy 字段", "C": "一组有效的挂载选项", "D": "管理员的手动批准", "answer": "B", "score": 4}
{"id": 290, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 StorageClass 中使用哪种卷绑定模式（volume binding mode）可以延迟卷绑定直到使用 PVC 的 Pod 被创建？", "A": "Immediate", "B": "Deferred", "C": "WaitForFirstConsumer", "D": "AsNeeded", "answer": "C", "score": 4}
{"id": 291, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "如何在 Kubernetes 环境中自定义卷附件限制？", "A": "通过修改 KUBE_MAX_PD_VOLS 环境变量", "B": "通过增加节点 CPU 容量", "C": "通过使用更高效的存储类", "D": "通过升级 Kubernetes 版本", "answer": "A", "score": 3}
{"id": 292, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "Kubernetes默认允许每个节点最多使用16个卷的是哪种云服务？", "A": "Amazon Elastic Block Store (EBS)", "B": "Google Persistent Disk", "C": "Microsoft Azure Disk Storage", "D": "以上所有", "answer": "D", "score": 2}
{"id": 293, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "如何在Kubernetes中启用VolumeAttributesClass功能？", "A": "通过在Kubernetes配置中设置'Enabled'标志", "B": "通过修改Kubernetes API", "C": "通过使用'--feature-gates'命令行参数", "D": "通过升级到新版本的Kubernetes", "answer": "C", "score": 4}
{"id": 294, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在每个VolumeAttributesClass中必须指定什么来确定PVs的配置？", "A": "provisioned-iops", "B": "provisioned-throughput", "C": "driverName", "D": "resizerName", "answer": "C", "score": 3}
{"id": 295, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "VolumeAttributesClass最多可以定义多少个参数？", "A": "128", "B": "256", "C": "512", "D": "1024", "answer": "C", "score": 2}
{"id": 296, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes中的'VolumeSnapshot'代表什么？", "A": "在某个时间点备份一个PersistentVolume", "B": "一个卷的实时镜像", "C": "一个存储的动态配置工具", "D": "从现有的PVC创建一个新卷", "answer": "A", "score": 5}
{"id": 297, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在Kubernetes中'VolumeSnapshot'要正常运行必须启用什么？", "A": "VolumeSnapshot功能门", "B": "具有快照功能的CSI驱动程序", "C": "在PVC中添加特殊注释", "D": "额外的外部快照控制器", "answer": "B", "score": 4}
{"id": 298, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如果'VolumeSnapshotClass'的'DeletionPolicy'设置为'Delete'，当'VolumeSnapshot'被删除时会发生什么？", "A": "快照及其内容被保留", "B": "只有VolumeSnapshot被删除", "C": "底层存储快照和VolumeSnapshotContent被删除", "D": "PVC也被删除", "answer": "C", "score": 5}
{"id": 299, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在'VolumeSnapshot'规范中必须设置哪个字段以动态配置来自PVC的快照？", "A": "sourceVolumeClaimName", "B": "dataSource", "C": "snapshotClassName", "D": "persistentVolumeClaimName", "answer": "D", "score": 4}
{"id": 300, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'csi-snapshotter'副车容器的主要功能是什么？", "A": "创建新的PersistentVolumeClaims", "B": "管理VolumeSnapshots和VolumeSnapshotContents的生命周期", "C": "触发CSI驱动程序的CreateSnapshot和DeleteSnapshot操作", "D": "动态配置新的StorageClasses", "answer": "C", "score": 4}
{"id": 301, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Windows用来挂载容器层的文件系统类型是什么？", "A": "EXT4", "B": "NTFS", "C": "XFS", "D": "Btrfs", "answer": "B", "score": 3}
{"id": 302, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪种Kubernetes卷功能在Windows节点上不受支持？", "A": "只读根文件系统", "B": "Secrets的子路径卷挂载", "C": "块设备映射", "D": "以上所有", "answer": "D", "score": 4}
{"id": 303, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "为什么在Kubernetes中的Windows节点上无法使用卷的用户掩码和权限？", "A": "因为Windows使用不同的文件系统", "B": "由于主机和容器之间缺乏UID/GID映射", "C": "Windows不支持用户掩码", "D": "权限仅在容器内解析", "answer": "B", "score": 4}
{"id": 304, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 Kubernetes 中为 Pod 提供临时存储的目的是什么？", "A": "永久存储数据", "B": "仅在 Pod 运行时维护数据", "C": "定期备份 Pod 数据", "D": "加速数据检索和处理", "answer": "B", "score": 3}
{"id": 305, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 中 Windows 容器不支持哪些功能？", "A": "HugePages", "B": "特权容器", "C": "TerminationGracePeriod", "D": "以上全部", "answer": "D", "score": 4}
{"id": 306, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "Kubernetes 支持哪种类型的 Windows 容器隔离？", "A": "进程隔离", "B": "Hyper-V 隔离", "C": "同时支持进程和 Hyper-V 隔离", "D": "以上都不支持", "answer": "C", "score": 4}
{"id": 307, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪种 Kubernetes 功能允许在单个调度器下管理 Windows 和 Linux 容器？", "A": "在 Linux 集群中包含 Windows 节点", "B": "跨平台 Pod", "C": "混合应用部署", "D": "容器运行时接口", "answer": "A", "score": 3}
{"id": 308, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "kubelet 的哪个命令行选项用于在 Windows 上设置调度优先级？", "A": "--windows-priorityclass", "B": "--system-reserved", "C": "--node-allocatable", "D": "--kube-reserved", "answer": "A", "score": 3}
{"id": 309, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用 Windows 容器的 Pod 的 `.spec.os.name` 字段应该设置为什么？", "A": "Linux", "B": "Windows", "C": "Unix", "D": "Microsoft", "answer": "B", "score": 2}
{"id": 310, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "提高可观察性和故障排除的主要方法是什么，从 Windows 容器捕获日志？", "A": "使用 Windows 事件查看器", "B": "配置 Syslog 服务器", "C": "使用 LogMonitor 工具", "D": "使用 Fluentd 日志收集器", "answer": "C", "score": 4}
{"id": 311, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "哪个 Kubernetes 功能用于确保 Windows 容器在适当的主机上调度？", "A": "节点亲和性", "B": "污点和容忍", "C": "Pod 优先级", "D": "命名空间选择器", "answer": "B", "score": 4}
{"id": 312, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Kubernetes 中从 YAML 清单部署 Windows Web 服务器的命令是什么？", "A": "kubectl create -f win-webserver.yaml", "B": "kubectl apply -f win-webserver.yaml", "C": "kubectl set up -f win-webserver.yaml", "D": "kubectl run -f win-webserver.yaml", "answer": "B", "score": 4}
{"id": 313, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪个 Kubernetes 命令用于验证跨 Windows 节点的 Pod 到 Pod 通信？", "A": "kubectl get communication", "B": "kubectl check pods", "C": "kubectl exec", "D": "kubectl connect", "answer": "C", "score": 3}
{"id": 314, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪本 Kubernetes 指南可用于设置 Windows 容器的组管理服务帐户的信息？", "A": "为 Windows Pod 和容器配置 RunAsUserName", "B": "为 Windows Pod 和容器配置组管理服务帐户", "C": "创建 Windows HostProcess Pod", "D": "在 Kubernetes 中调度 Windows 容器指南", "answer": "B", "score": 4}
{"id": 315, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个是官方 Kubernetes 页面，用于获取在 Windows 操作系统上安装和设置 kubectl 的说明？", "A": "/docs/tasks/tools/install-kubectl-windows/", "B": "/docs/concepts/services-networking/windows-networking/", "C": "/docs/concepts/storage/windows-storage/", "D": "/docs/concepts/configuration/windows-resource-management/", "answer": "A", "score": 3}
{"id": 316, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "应咨询哪个资源以了解Kubernetes中Windows节点的安全实践？", "A": "Windows Storage In Kubernetes", "B": "Security For Windows Nodes", "C": "Windows Debugging Tips", "D": "Networking On Windows", "answer": "B", "score": 4}
{"id": 317, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于Kubernetes中手动水平扩展工作负载？", "A": "kubectl scale", "B": "kubectl set replicas", "C": "kubectl horizontal-pod-autoscale", "D": "kubectl resize", "answer": "A", "score": 4}
{"id": 318, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Kubernetes API资源中主要用于自动水平扩展的是哪个？", "A": "Deployment", "B": "VerticalPodAutoscaler", "C": "HorizontalPodAutoscaler", "D": "StatefulSet", "answer": "C", "score": 5}
{"id": 319, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "为了让HorizontalPodAutoscaler有效运行，必须在集群中安装什么？", "A": "InPlacePodVerticalScaling", "B": "Metrics Server", "C": "Cluster Autoscaler", "D": "Kubernetes Dashboard", "answer": "B", "score": 4}
{"id": 320, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "哪种自动扩展组件允许您根据集群中的节点数量和/或核心数来扩展资源？", "A": "HorizontalPodAutoscaler", "B": "Cluster Proportional Autoscaler", "C": "VerticalPodAutoscaler", "D": "Cluster Proportional Vertical Autoscaler", "answer": "B", "score": 4}
{"id": 321, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于从单个文件应用多个Kubernetes资源？", "A": "kubectl create -f", "B": "kubectl apply -f", "C": "kubectl set -f", "D": "kubectl config -f", "answer": "B", "score": 3}
{"id": 322, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "哪个命令序列允许您链式操作以从过滤列表中获取和创建资源？", "A": "kubectl get | kubectl create", "B": "kubectl create -f | kubectl get", "C": "kubectl get $(kubectl create -f <file> -o name) | grep service/", "D": "kubectl create $(kubectl get -f <file> -o name)", "answer": "C", "score": 4}
{"id": 323, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "kubectl命令中哪个用于检查部署的rollout状态？", "A": "kubectl rollout observe", "B": "kubectl deployment watch", "C": "kubectl rollout status", "D": "kubectl check deployment", "answer": "C", "score": 3}
{"id": 324, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "推荐使用哪种工具来管理预配置的Kubernetes资源包？", "A": "Docker", "B": "Helm", "C": "Kustomize", "D": "Gradle", "answer": "B", "score": 4}
{"id": 325, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "管理有状态应用程序的持久存储需求需要哪个Kubernetes对象？", "A": "DaemonSet", "B": "PersistentVolume", "C": "ReplicaSet", "D": "ConfigMap", "answer": "B", "score": 4}
{"id": 326, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "当Kubernetes节点发生关键故障时，该节点上运行的pods会发生什么情况？", "A": "它们继续运行不受干扰。", "B": "它们自动移动到另一个节点。", "C": "它们失败并需要手动重新启动。", "D": "它们失败并需要由新的pods替换。", "answer": "D", "score": 4}
{"id": 327, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "哪个Kubernetes控制器用于运行需要按计划执行的任务？", "A": "ReplicaSet", "B": "DaemonSet", "C": "Job", "D": "CronJob", "answer": "D", "score": 5}
{"id": 328, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如果一个CronJob错过了它的计划且没有设置`startingDeadlineSeconds`，会发生什么？", "A": "在故障纠正后立即运行", "B": "无限期等待人工干预", "C": "跳过错过的计划", "D": "不断重试错过的任务", "answer": "C", "score": 3}
{"id": 329, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "CronJob规范中的哪个字段决定保留多少个已完成的任务？", "A": "`.spec.jobRetention`", "B": "`.spec.successfulJobsHistoryLimit`", "C": "`.spec.jobsHistory`", "D": "`.spec.retainCompletedJobs`", "answer": "B", "score": 4}
{"id": 330, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "Kubernetes如何处理CronJob中'Forbid'的`concurrencyPolicy`？", "A": "允许并发任务运行", "B": "如果当前有任务在运行，则跳过新任务", "C": "取消正在运行的任务并启动新任务", "D": "将所有任务排队直到第一个任务完成", "answer": "B", "score": 3}
{"id": 331, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中DaemonSet的主要作用是什么？", "A": "管理无状态应用程序", "B": "在每个节点上运行集群存储守护进程", "C": "按计划执行批处理任务", "D": "处理pod的自动扩展", "answer": "B", "score": 4}
{"id": 332, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种类型的Kubernetes资源通常用于运行网络插件？", "A": "DaemonSet", "B": "Deployment", "C": "ReplicaSet", "D": "StatefulSet", "answer": "A", "score": 4}
{"id": 333, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "如果节点标签发生变化，会对DaemonSet产生什么影响？", "A": "触发DaemonSet的自动更新", "B": "对现有DaemonSet配置没有影响", "C": "将Pod添加到新匹配的节点，并从不匹配的节点移除Pod", "D": "暂停DaemonSet直到标签恢复", "answer": "C", "score": 5}
{"id": 334, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "为了让DaemonSet Pod在具有`NoExecute`污点的节点上运行，会自动添加什么？", "A": "节点亲和性", "B": "Pod优先级", "C": "资源限制", "D": "容忍度", "answer": "D", "score": 4}
{"id": 335, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中Deployment的作用是什么？", "A": "为Pod和ReplicaSet提供更新和回滚功能", "B": "管理有状态应用程序", "C": "配置网络策略", "D": "处理数据存储解决方案", "answer": "A", "score": 4}
{"id": 336, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在Kubernetes中使用哪个命令来创建Deployment？", "A": "kubectl create deployment", "B": "kubectl start deployment", "C": "kubectl launch deployment", "D": "kubectl initiate deployment", "answer": "A", "score": 4}
{"id": 337, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "Kubernetes的哪个功能允许在部署失败时自动回滚？", "A": "滚动更新", "B": "Pod自动替换", "C": "自动扩展", "D": "进展条件检查", "answer": "A", "score": 4}
{"id": 338, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "要将部署的nginx镜像从'nginx:1.14.2'更新到'nginx:1.16.1'，应该使用哪个命令？", "A": "kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1", "B": "kubectl change image deployment/nginx-deployment nginx=nginx:1.16.1", "C": "kubectl update image deployment/nginx-deployment nginx=nginx:1.16.1", "D": "kubectl replace image deployment/nginx-deployment nginx=nginx:1.16.1", "answer": "A", "score": 4}
{"id": 339, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果一个Kubernetes任务未能完成，可能的原因是什么？", "A": "任务被暂停了。", "B": "所有pods都成功完成。", "C": "没有足够的任务。", "D": "这些任务不需要pods。", "answer": "A", "score": 3}
{"id": 340, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个 Kubernetes 资源负责创建一个或多个 Pod 并确保它们成功终止？", "A": "ReplicaSet", "B": "Service", "C": "Job", "D": "Pod", "answer": "C", "score": 4}
{"id": 341, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令允许您检查 Kubernetes Job 的状态？", "A": "kubectl status job", "B": "kubectl get job", "C": "kubectl describe job", "D": "kubectl list job", "answer": "C", "score": 3}
{"id": 342, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如果由 ReplicaSet 管理的 Pod 失败会发生什么？", "A": "它会由 ReplicaSet 自动重新创建", "B": "必须手动重启", "C": "在手动干预之前会被忽略", "D": "它会永久自动删除自己", "answer": "A", "score": 4}
{"id": 343, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 中的 ReplicaSet 如何识别要管理的 Pod？", "A": "通过匹配集群 IP", "B": "通过匹配 Pod 的名称", "C": "通过使用标签选择器", "D": "通过检查 Pod 的创建时间戳", "answer": "C", "score": 5}
{"id": 344, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 kubectl 命令用于查看当前部署的 ReplicaSet？", "A": "kubectl view rs", "B": "kubectl get rs", "C": "kubectl list rs", "D": "kubectl show rs", "answer": "B", "score": 3}
{"id": 345, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "ReplicationController 对其管理的 Pod 有何保证？", "A": "确保 Pod 是有状态的", "B": "确保任何时候都有指定数量的 Pod 运行", "C": "确保所有 Pod 都在同一个节点上运行", "D": "确保 Pod 按顺序部署", "answer": "B", "score": 4}
{"id": 346, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于应用 ReplicationController 配置？", "A": "kubectl set rc", "B": "kubectl create rc", "C": "kubectl apply -f", "D": "kubectl update rc", "answer": "C", "score": 4}
{"id": 347, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "如果运行的 Pod 数量少于 ReplicationController 中的期望数量会怎样？", "A": "ReplicationController 发送警报", "B": "ReplicationController 进一步缩减规模", "C": "ReplicationController 什么也不做", "D": "ReplicationController 启动更多的 Pod", "answer": "D", "score": 3}
{"id": 348, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "ReplicationController 中的哪个字段指定它管理的 Pod？", "A": "spec.selector", "B": "spec.manage", "C": "spec.template", "D": "spec.pods", "answer": "A", "score": 3}
{"id": 349, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 Kubernetes 中管理有状态应用程序使用什么 API 对象？", "A": "Deployment", "B": "StatefulSet", "C": "ReplicaSet", "D": "Service", "answer": "B", "score": 4}
{"id": 350, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 StatefulSet 中管理 Pod 的网络身份需要什么类型的服务？", "A": "NodePort", "B": "ClusterIP", "C": "LoadBalancer", "D": "Headless Service", "answer": "D", "score": 4}
{"id": 351, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "StatefulSet 中用什么提供稳定存储？", "A": "PersistentVolumes", "B": "ConfigMaps", "C": "EphemeralVolumes", "D": "Secrets", "answer": "A", "score": 4}
{"id": 352, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在删除StatefulSet之前应该使用哪个命令将其缩减为零副本以实现优雅的pod终止？", "A": "kubectl scale", "B": "kubectl set", "C": "kubectl delete", "D": "kubectl roll", "answer": "A", "score": 4}
{"id": 353, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "StatefulSet规范中的哪个字段可以脚本化以在更改时自动滚动更新pod？", "A": "rollingUpdate", "B": "updateStrategy", "C": "strategy", "D": "managementPolicy", "answer": "B", "score": 4}
{"id": 354, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在缩减或删除StatefulSet之后，必须手动删除什么以确保数据安全？", "A": "PersistentVolumeClaims", "B": "ConfigMaps", "C": "Pods", "D": "Services", "answer": "A", "score": 3}
{"id": 355, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "哪个可选字段指定了新创建的pod应该运行并准备好被认为可用的最短秒数？", "A": "minReadySeconds", "B": "readinessGates", "C": "activeDeadlineSeconds", "D": "initialDelaySeconds", "answer": "A", "score": 3}
{"id": 356, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes的哪个功能允许你将流量目标定位到特定的StatefulSet pod索引？", "A": "Ingress", "B": "NetworkPolicies", "C": "PodIndexLabel", "D": "DNS", "answer": "C", "score": 4}
{"id": 357, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "对于StatefulSet的成功滚动更新，在更新失败的情况下可能需要什么手动干预？", "A": "更新Pod模板", "B": "删除失败的Pods", "C": "重启StatefulSet", "D": "修改服务", "answer": "B", "score": 4}
{"id": 358, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在Kubernetes中，如何限制已经完成执行的Job对象的生命周期？", "A": "通过使用CronJob", "B": "通过水平Pod自动扩展器", "C": "通过设置.spec.ttlSecondsAfterFinished字段", "D": "通过Replication Controller", "answer": "C", "score": 5}
{"id": 359, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "使用TTL自动清理Kubernetes Jobs时可能的风险是什么？", "A": "网络故障", "B": "时间偏差", "C": "资源限制", "D": "API速率限制", "answer": "B", "score": 3}
{"id": 360, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "Kubernetes中的哪个准入控制器可以在创建时动态设置Job的TTL？", "A": "ValidatingAdmissionWebhook", "B": "NodeRestriction", "C": "MutatingAdmissionWebhook", "D": "AlwaysPullImages", "answer": "C", "score": 4}
{"id": 361, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "通常用于管理需要持久存储的Pods的Kubernetes控制器是哪个？", "A": "DaemonSet", "B": "Deployment", "C": "StatefulSet", "D": "ReplicaSet", "answer": "C", "score": 5}
{"id": 362, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "哪种类型的Kubernetes工作负载对象用于在所有节点上运行系统级服务？", "A": "Deployment", "B": "StatefulSet", "C": "CronJob", "D": "DaemonSet", "answer": "D", "score": 4}
{"id": 363, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪种Kubernetes对象适合定义运行到完成的一次性任务？", "A": "CronJob", "B": "Job", "C": "DaemonSet", "D": "StatefulSet", "answer": "B", "score": 3}
{"id": 364, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个 Kubernetes 特性允许您在自愿中断时限制同时下降的 Pod 数量？", "A": "Pod Security Policies", "B": "Resource Quotas", "C": "Pod Disruption Budgets", "D": "Horizontal Pod Autoscalers", "answer": "C", "score": 4}
{"id": 365, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 kubectl 命令用于通过安全驱逐 pod 来准备节点进行维护？", "A": "kubectl delete node", "B": "kubectl drain", "C": "kubectl evict", "D": "kubectl remove", "answer": "B", "score": 4}
{"id": 366, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种 Kubernetes 机制将自愿和非自愿中断都计入其限制？", "A": "Pod Security Policies", "B": "Pod Disruption Budgets", "C": "Network Policies", "D": "Service Mesh", "answer": "B", "score": 3}
{"id": 367, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在 Kubernetes 环境中，可能导致非自愿 pod 中断的常见风险因素是什么？", "A": "不正确的 Pod Security Policy 设置", "B": "缺乏 Pod Anti-Affinity 规则", "C": "支持节点的物理机硬件故障", "D": "不充分的角色基础访问控制 (RBAC) 规则", "answer": "C", "score": 3}
{"id": 368, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 中 Downward API 的主要目的是什麽？", "A": "管理存储卷", "B": "向运行中的容器暴露 Pod 和容器字段", "C": "在节点上调度 Pod", "D": "监控节点性能", "answer": "B", "score": 4}
{"id": 369, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "Kubernetes 对象的名称可以使用 Downward API 暴露给容器吗？", "A": "Service", "B": "Node", "C": "Pod", "D": "Namespace", "answer": "C", "score": 3}
{"id": 370, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪个字段不可作为 DownwardAPI volume fieldRef 获取但可以通过环境变量获取？", "A": "spec.serviceAccountName", "B": "metadata.name", "C": "metadata.labels", "D": "status.podIPs", "answer": "A", "score": 4}
{"id": 371, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Downward API 中的 'status.hostIPs' 是指什么？", "A": "Pod 的主要 IP 地址", "B": "节点的双栈 IP 地址", "C": "Pod 的次要 IP 地址", "D": "Kubernetes 服务 IP", "answer": "B", "score": 4}
{"id": 372, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "为什么您可能会在 Kubernetes 中使用临时容器？", "A": "增强 pod 的安全性", "B": "排查 pod 内的错误", "C": "永久增加 pod 的计算资源", "D": "升级 pod 内的主应用程序", "answer": "B", "score": 3}
{"id": 373, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 Kubernetes API 处理程序用于创建临时容器？", "A": "pod.spec", "B": "kubectl create", "C": "kubectl edit", "D": "ephemeralcontainers", "answer": "D", "score": 4}
{"id": 374, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "以下哪项是临时容器的限制？", "A": "它们不能有端口，不支持 livenessProbes 或 readinessProbes", "B": "可以使用 kubectl edit 添加它们", "C": "它们旨在永久托管应用程序", "D": "它们在故障后自动重启", "answer": "A", "score": 3}
{"id": 375, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "为什么 Kubernetes 可能会自行重启 init 容器？", "A": "如果主应用程序容器请求它", "B": "如果 init 容器成功完成", "C": "如果 init 容器在 pod 初始化期间失败", "D": "如果 init 容器的执行速度太慢", "answer": "C", "score": 4}
{"id": 376, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何在 Kubernetes pod 规范中指定初始化容器？", "A": "使用 'appContainers' 字段", "B": "使用 'initContainers' 字段", "C": "使用特殊注释", "D": "通过直接命令到 Kubernetes API", "answer": "B", "score": 5}
{"id": 377, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "以下哪个字段不支持初始化容器？", "A": "livenessProbe", "B": "volumeMounts", "C": "imagePullPolicy", "D": "env", "answer": "A", "score": 4}
{"id": 378, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪个状态表明 Pod 的容器因故障已终止？", "A": "Succeeded", "B": "Running", "C": "Failed", "D": "Pending", "answer": "C", "score": 3}
{"id": 379, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "当 Pod 的容器进入崩溃循环时，Kubernetes 会采取什么措施？", "A": "在重新启动前应用固定延迟", "B": "停止节点上的所有操作", "C": "应用指数回退延迟", "D": "立即将 Pod 从集群中删除", "answer": "C", "score": 4}
{"id": 380, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用 kubectl 强制终止一个 Pod 并且不设宽限期？", "A": "kubectl delete pod --grace-period=0 --force", "B": "kubectl stop pod --now", "C": "kubectl terminate pod --immediate", "D": "kubectl kill pod --no-wait", "answer": "A", "score": 3}
{"id": 381, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "当就绪探针失败时，Service 端点中的 Pod IP 地址会发生什么？", "A": "它会被复制到其他服务", "B": "它会从 Kubernetes 中永久删除", "C": "它会保持不变", "D": "它会从所有匹配的服务中删除", "answer": "D", "score": 4}
{"id": 382, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如果 Pod 中的每个容器的内存和 CPU 限制都设置为与其请求相同，那么该 Pod 被分配到哪个 Kubernetes 服务质量 (QoS) 类别？", "A": "Guaranteed", "B": "Burstable", "C": "BestEffort", "D": "以上都不是", "answer": "A", "score": 4}
{"id": 383, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在资源压力下，Kubernetes 从节点中驱逐 Pod 的顺序是什么？", "A": "BestEffort, Burstable, Guaranteed", "B": "Guaranteed, BestEffort, Burstable", "C": "Burstable, Guaranteed, BestEffort", "D": "Guaranteed, Burstable, BestEffort", "answer": "A", "score": 4}
{"id": 384, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在 Kubernetes 中，哪个 QoS 类别允许 Pod 使用任何可用的节点资源？", "A": "Guaranteed", "B": "Burstable", "C": "BestEffort", "D": "以上都不是", "answer": "B", "score": 4}
{"id": 385, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "以下关于 Kubernetes 中的 sidecar 容器，哪项是正确的？", "A": "它们不能与主应用容器同时运行", "B": "它们可以独立于主应用容器重新启动", "C": "它们不共享与主应用容器相同的网络命名空间", "D": "它们仅在 Pod 启动阶段使用", "answer": "B", "score": 3}
{"id": 386, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "哪个 Kubernetes 功能允许在 Pod 的 `initContainers` 部分中指定具有重启策略的 sidecar 容器？", "A": "PodLifecyclePolicy", "B": "SidecarContainers feature gate", "C": "ContainerRuntimeInterface", "D": "PodSecurityPolicy", "answer": "B", "score": 4}
{"id": 387, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "支持 Kubernetes 用户命名空间的 idmap 挂载所需的 Linux 内核版本是哪个？", "A": "Linux 4.0", "B": "Linux 5.0", "C": "Linux 6.3", "D": "Linux 3.10", "answer": "C", "score": 3}
{"id": 388, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如果启用用户命名空间的 pod 尝试使用范围为 0-65535 之外的 UID/GID，会发生什么？", "A": "pod 会立即终止。", "B": "UID/GID 会自动调整以适应范围。", "C": "使用该 UID/GID 的文件被视为属于溢出 ID，通常为 65534。", "D": "pod 的 CPU 分配增加。", "answer": "C", "score": 4}
{"id": 389, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "为了支持用户命名空间，Kubernetes v1.25 及更高版本必须使用哪种容器运行时？", "A": "Docker v20.10", "B": "containerd v1.7", "C": "CRI-O v1.25", "D": "runc v1.0", "answer": "C", "score": 4}
{"id": 390, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes Pod 可能包含以下哪些组件？", "A": "仅 init 容器", "B": "仅应用容器", "C": "init 容器、应用容器和短暂容器", "D": "仅短暂容器", "answer": "C", "score": 4}
{"id": 391, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "单个 Kubernetes Pod 内的所有容器共享什么？", "A": "每个容器都有自己的存储。", "B": "每个容器都有自己的网络资源。", "C": "共享存储和网络资源", "D": "单独的 cgroups", "answer": "C", "score": 5}
{"id": 392, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "用于从提供的 simple-pod.yaml 示例中创建 Pod 的命令是什么？", "A": "kubectl create -f simple-pod.yaml", "B": "kubectl apply -f simple-pod.yaml", "C": "kubectl set up -f simple-pod.yaml", "D": "kubectl start -f simple-pod.yaml", "answer": "B", "score": 3}
{"id": 393, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "通常用于自动管理多个 Pod 的 Kubernetes 资源是什么？", "A": "Pod", "B": "Deployment", "C": "Controller", "D": "DaemonSet", "answer": "B", "score": 4}
{"id": 394, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "对 Kubernetes 文档提出改进建议的第一步是什么？", "A": "提交包含建议更改的拉取请求", "B": "在 SIG Docs 会议或邮件列表中讨论提议", "C": "直接在 GitHub 仓库中进行更改", "D": "查阅 Kubernetes 文档风格指南", "answer": "B", "score": 4}
{"id": 395, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "SIG Docs 评审人在协调 Kubernetes 发布文档中扮演什么角色？", "A": "审核和合并发布的拉取请求", "B": "编写所有新功能的文档", "C": "为发布编程新功能", "D": "测试新功能是否有错误", "answer": "A", "score": 4}
{"id": 396, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "根据高级贡献指南，贡献 Kubernetes 文档所需的重要工具是什么？", "A": "Kubernetes 命令行界面", "B": "Git 命令行客户端", "C": "集成开发环境 (IDE)", "D": "Kubernetes 仪表板", "answer": "B", "score": 2}
{"id": 397, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "SIG Docs 社区中的新贡献者大使负责什么？", "A": "合并所有新的拉取请求", "B": "欢迎新贡献者并指导他们", "C": "修复所有文档错误", "D": "部署 Kubernetes 更新", "answer": "B", "score": 3}
{"id": 398, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "自何时起，Google Analytics 4 开始收集并展示在 kubernetes.io 分析仪表板上的数据？", "A": "自 2020 年 8 月起", "B": "自 2021 年 8 月起", "C": "自 2022 年 8 月起", "D": "自 2019 年 8 月起", "answer": "C", "score": 2}
{"id": 399, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "kubernetes.io 分析仪表板上显示的数据默认时间范围是多少？", "A": "过去 7 天", "B": "过去 30 天", "C": "过去 60 天", "D": "过去 90 天", "answer": "B", "score": 2}
{"id": 400, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "kubernetes.io 分析仪表板的哪个功能允许您查看特定时期的数据？", "A": "位置筛选器", "B": "设备筛选器", "C": "翻译筛选器", "D": "日期选择器", "answer": "D", "score": 3}
{"id": 401, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "Kubernetes 文档贡献者需要熟悉什么工具才能有效地贡献？", "A": "JIRA", "B": "Slack", "C": "GitHub", "D": "Trello", "answer": "C", "score": 3}
{"id": 402, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个 SIG 负责维护和发布 Kubernetes 文档？", "A": "SIG Networking", "B": "SIG Docs", "C": "SIG Security", "D": "SIG Storage", "answer": "B", "score": 3}
{"id": 403, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在对 Kubernetes 文档做出贡献之前需要采取什么行动？", "A": "提交一个 GitHub 问题", "B": "签署 CNCF 贡献者许可协议", "C": "加入 Kubernetes Slack", "D": "订阅 Kubernetes 博客", "answer": "B", "score": 4}
{"id": 404, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在哪里可以找到每个 Kubernetes 本地化项目的 Slack 频道？", "A": "Kubernetes GitHub", "B": "Kubernetes 网站", "C": "Kubernetes Slack", "D": "Kubernetes 官方博客", "answer": "C", "score": 2}
{"id": 405, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "在对 Kubernetes 文档的英文源代码做出上游贡献之前必须做什么？", "A": "查看现有的本地化内容", "B": "直接创建一个 pull request", "C": "修复上游文档中的任何技术错误", "D": "将更改翻译成所有可用的本地化语言", "answer": "C", "score": 3}
{"id": 406, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 Kubernetes 网站存储库中应为新的本地化内容创建什么样的文件结构？", "A": "为每个本地化创建一个新的分支", "B": "在 'content/<两字母代码>' 下为每种语言创建一个子目录", "C": "为所有语言创建一个文件", "D": "为每种语言创建单独的存储库", "answer": "B", "score": 3}
{"id": 407, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "当您想建议改进 Kubernetes 文档时首先要采取的步骤是什么？", "A": "创建一个 pull request", "B": "打开一个问题", "C": "发送电子邮件", "D": "在论坛发帖", "answer": "B", "score": 3}
{"id": 408, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在建议改进 Kubernetes 文档时问题的范围应该是什么？", "A": "尽可能广泛", "B": "一个合理的工作单元", "C": "仅限于安全相关", "D": "只要详细，范围不限", "answer": "B", "score": 3}
{"id": 409, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "下列哪一种不是为 Kubernetes 做出贡献的方式？", "A": "设计新功能", "B": "创建社区活动", "C": "编写代码文档", "D": "为博客撰写文章", "answer": "B", "score": 2}
{"id": 410, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "修改 Kubernetes 源代码文件后，需要运行哪些脚本命令来更新 OpenAPI 规范和相关文件？", "A": "./hack/update-codegen.sh, ./hack/update-openapi-spec.sh", "B": "./hack/generate-docs.sh, ./hack/update-api.sh", "C": "./hack/make-docs.sh, ./hack/regenerate-api.sh", "D": "./hack/build-docs.sh, ./hack/create-api.sh", "answer": "A", "score": 4}
{"id": 411, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 源代码存储库中运行 `./hack/update-openapi-spec.sh` 的目的是是什么？", "A": "生成用户友好的指南", "B": "更新用户界面设计", "C": "生成 OpenAPI 规范和相关文件", "D": "更新 Kubernetes 安装脚本", "answer": "C", "score": 3}
{"id": 412, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "为生成 kubectl 参考文档，必须从 kubernetes/kubernetes 仓库中移除什么？", "A": "spf13 包", "B": "cobra 库", "C": "yaml.v2 包", "D": "reference-docs 仓库", "answer": "A", "score": 2}
{"id": 413, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "在生成 kubectl 命令参考文档的过程中，哪个环境变量设置了 Kubernetes 的根目录？", "A": "K8S_ROOT", "B": "K8S_WEBROOT", "C": "GOPATH", "D": "K8S_RELEASE", "answer": "A", "score": 3}
{"id": 414, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "如果需要编辑 kubectl 源代码以更改参考文档，第一步是什么？", "A": "克隆 kubernetes/website 仓库", "B": "更新 kubectl 源代码注释", "C": "设置 K8S_RELEASE 环境变量", "D": "向 github.com/kubernetes/kubernetes 提交拉取请求", "answer": "B", "score": 4}
{"id": 415, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在生成 kubectl 命令参考文档后，HTML 页面和资产被复制到哪里？", "A": "<web-base>", "B": "<k8s-base>", "C": "<rdocs-base>", "D": "kubernetes/website", "answer": "A", "score": 2}
{"id": 416, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "生成 Kubernetes API 参考文档的主要来源是什么？", "A": "Kubernetes 用户手册", "B": "Kubernetes OpenAPI 规范", "C": "Kubernetes 安装指南", "D": "Kubernetes 社区博客", "answer": "B", "score": 5}
{"id": 417, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "生成 Kubernetes API 参考文档必须克隆哪个仓库？", "A": "kubernetes/client-go", "B": "kubernetes/website", "C": "kubernetes/sigs", "D": "kubernetes/kubernetes", "answer": "D", "score": 4}
{"id": 418, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "使用哪个构建目标来获取 Open API 规范并创建 Kubernetes API 参考文档的版本化构建目录？", "A": "updateapispec", "B": "fetchapispec", "C": "buildapidocs", "D": "generateapidocs", "answer": "A", "score": 3}
{"id": 419, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在运行 `copyapi` 构建目标后，生成的 API 参考文档被复制到哪里？", "A": "Kubernetes API 服务器", "B": "本地 Kubernetes 设置", "C": "<web-base> 目录", "D": "在线 Kubernetes 仓库", "answer": "C", "score": 3}
{"id": 420, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如果需要在没有任何上游更改的情况下重新生成 Kubernetes API 参考文档，应该参考哪个文档？", "A": "生成 Kubernetes 组件和工具参考文档", "B": "快速入门生成参考文档", "C": "当前文档页面", "D": "修复上游文档中的错误", "answer": "A", "score": 4}
{"id": 421, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "生成 Kubernetes 组件和工具参考页面的初始步骤是什么？", "A": "查看 Kubernetes API", "B": "从快速入门指南的先决条件部分开始", "C": "生成 kubectl 命令文档", "D": "为上游 Kubernetes 文档做贡献", "answer": "B", "score": 4}
{"id": 422, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "以下哪个资源不直接涉及生成 Kubernetes 组件和工具参考文档？", "A": "生成参考文档快速入门", "B": "生成 kubectl 命令参考文档", "C": "生成 Kubernetes API 参考文档", "D": "立即排除组件故障", "answer": "D", "score": 3}
{"id": 423, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在哪里可以找到为上游Kubernetes项目文档做贡献的指南？", "A": "在参考文档快速入门指南中", "B": "在文档资源中的'whatsnext'标题下", "C": "在Kubernetes API文档中", "D": "在kubectl命令文档中", "answer": "B", "score": 4}
{"id": 424, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "在Kubernetes存储库中执行哪个脚本生成最新的指标文档？", "A": "./run-metrics.sh", "B": "./test/instrumentation/update-documentation.sh", "C": "./generate-docs.sh", "D": "./update-kubernetes.sh", "answer": "B", "score": 4}
{"id": 425, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如果由于权限问题在复制生成的指标文档到Kubernetes网站存储库时出现错误，应该考虑使用哪个命令？", "A": "sudo cp documentation.md", "B": "chmod +x documentation.md", "C": "chown $(whoami) documentation.md", "D": "ls -l documentation.md", "answer": "C", "score": 4}
{"id": 426, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "哪个工具是`kubectl`命令参考的必需工具并涉及容器化？", "A": "Python", "B": "GCC", "C": "Docker", "D": "Make", "answer": "C", "score": 3}
{"id": 427, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "安装生成Kubernetes文档所需的PyYAML依赖项需要什么命令工具？", "A": "npm", "B": "pip", "C": "yarn", "D": "gem", "answer": "B", "score": 3}
{"id": 428, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "`update-imported-docs.py`脚本在Kubernetes文档生成过程中自动化了什么？", "A": "克隆Kubernetes API存储库", "B": "设置构建环境并生成参考文档", "C": "安装必要的软件如Docker和Python", "D": "为文档更新创建pull request", "answer": "B", "score": 4}
{"id": 429, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果在运行`update-imported-docs.py`脚本时遇到构建问题，应该联系谁？", "A": "Kubernetes用户支持", "B": "Kubernetes Slack频道上的SIG-Docs团队", "C": "您的本地系统管理员", "D": "GitHub上的项目维护者", "answer": "B", "score": 3}
{"id": 430, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "由`update-imported-docs.py`脚本生成的HTML和Markdown文件应复制到哪里？", "A": "您的本地Kubernetes源代码存储库", "B": "kubernetes/kubernetes GitHub存储库", "C": "在指定位置下的kubernetes/website本地克隆存储库", "D": "直接到Kubernetes主网站", "answer": "C", "score": 4}
{"id": 431, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "提交到Kubernetes博客的博文应采用什么格式？", "A": "HTML", "B": "Markdown", "C": "纯文本", "D": "PDF", "answer": "B", "score": 2}
{"id": 432, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "什么类型的内容被认为不适合Kubernetes博客？", "A": "供应商产品推销", "B": "社区更新", "C": "SIG更新", "D": "新的Kubernetes功能", "answer": "A", "score": 2}
{"id": 433, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "Kubernetes文档贡献者应咨询哪个资源以了解即将发布的功能？", "A": "Kubernetes主网站", "B": "Kubernetes增强提案存储库", "C": "kubernetes/sig-release存储库中的特定版本文档", "D": "社区论坛和讨论", "answer": "C", "score": 3}
{"id": 434, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在为 Kubernetes 功能文档打开占位 PR 时，拉取请求描述中需要包含什么？", "A": "相关的 Kubernetes 博客链接", "B": "kubernetes/kubernetes 和 kubernetes/enhancements PR 或问题的链接", "C": "功能文档的最终草稿", "D": "SIG Docs 负责人的批准", "answer": "B", "score": 3}
{"id": 435, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "为 Kubernetes 文档贡献本地预览更改时，建议使用哪个工具？", "A": "Docker", "B": "Jekyll", "C": "Hugo", "D": "GitBook", "answer": "C", "score": 2}
{"id": 436, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "对 Kubernetes 文档进行较大更改时，fork 仓库后的第一步是什么？", "A": "创建一个新分支", "B": "将更改推送到 main", "C": "创建拉取请求", "D": "将更改合并到上游", "answer": "A", "score": 2}
{"id": 437, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 文档拉取请求期间如果遇到合并冲突，应怎么办？", "A": "联系 Kubernetes 支持", "B": "解决冲突并重新基准", "C": "删除仓库并重新 fork", "D": "忽略冲突并提交", "answer": "B", "score": 4}
{"id": 438, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "构建 Kubernetes 网站使用的标记语言和工具是什么？", "A": "Markdown 和 Jekyll", "B": "HTML 和 Hugo", "C": "Markdown 和 Hugo", "D": "AsciiDoc 和 Hugo", "answer": "C", "score": 3}
{"id": 439, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "所有 Kubernetes 贡献者在提交内容之前必须做什么？", "A": "完成培训课程", "B": "签署 CNCF CLA", "C": "参加 Kubernetes 会议", "D": "获得 SIG-Docs 的批准", "answer": "B", "score": 3}
{"id": 440, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "为当前 Kubernetes 版本的新英文内容打开拉取请求应该在哪个分支？", "A": "`main` 分支", "B": "`dev` 分支", "C": "`release` 分支", "D": "`stable` 分支", "answer": "A", "score": 3}
{"id": 441, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Issue Wranglers 关注哪一个 GitHub 仓库进行他们的任务？", "A": "kubernetes/kubernetes", "B": "kubernetes/community", "C": "kubernetes/website", "D": "kubernetes/docs", "answer": "C", "score": 3}
{"id": 442, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "Issue Wranglers 使用哪个 Prow 命令重新打开问题？", "A": "/reopen", "B": "/open", "C": "/start", "D": "/undo close", "answer": "A", "score": 2}
{"id": 443, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "PR Wranglers 使用哪个 Prow 命令批准拉取请求合并？", "A": "/merge", "B": "/approve", "C": "/accept", "D": "/confirm", "answer": "B", "score": 4}
{"id": 444, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在什么情况下 PR Wrangler 应该关闭拉取请求？", "A": "如果 PR 不符合样式指南", "B": "如果 PR 作者在两周内没有签署 CLA", "C": "如果 PR 已经超过一年", "D": "如果 PR 包含太多提交", "answer": "B", "score": 3}
{"id": 445, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "成员使用哪个命令为拉取请求添加 LGTM 标签？", "A": "/approve", "B": "/assign", "C": "/lgtm", "D": "/merge", "answer": "C", "score": 3}
{"id": 446, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes项目中，Reviewers相比Members有何额外责任？", "A": "他们可以合并pull requests", "B": "他们可以对pull requests提供有约束力的反馈", "C": "他们可以打开pull requests", "D": "他们可以签署CLA", "answer": "B", "score": 3}
{"id": 447, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "成为SIG Docs Kubernetes团队中的Approver需要什么条件？", "A": "批准pull requests", "B": "打开至少五个pull requests", "C": "提供实质性贡献并获得现有批准者的支持", "D": "自动从Reviewer晋升", "answer": "C", "score": 4}
{"id": 448, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "SIG Docs中的哪个角色可以合并pull requests？", "A": "Member", "B": "Reviewer", "C": "Approver", "D": "Contributor", "answer": "C", "score": 3}
{"id": 449, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "SIG Docs中的哪个GitHub团队类别可以批准pull requests？", "A": "@sig-docs-{language}-owners", "B": "@sig-docs-{language}-reviews", "C": "@kubernetes/sig-docs", "D": "@kubernetes/contributors", "answer": "A", "score": 3}
{"id": 450, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个自动化工具使用OWNERS文件来管理SIG Docs中的贡献审查？", "A": "Jenkins", "B": "Travis CI", "C": "Prow", "D": "CircleCI", "answer": "C", "score": 3}
{"id": 451, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如果一个PR不符合内容和样式指南，SIG Docs批准者应该怎么做？", "A": "批准PR", "B": "使用'请求更改'选项", "C": "忽略指南", "D": "关闭PR", "answer": "B", "score": 4}
{"id": 452, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "SIG Docs使用哪个自动系统根据OWNERS文件分配审查者和批准者？", "A": "Jenkins", "B": "Travis CI", "C": "Prow", "D": "CircleCI", "answer": "C", "score": 3}
{"id": 453, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在开始审查Kubernetes文档PR之前，审查者首先应该做什么？", "A": "将PR分配给自己", "B": "检查PR的语言准确性", "C": "阅读内容和样式指南", "D": "合并PR", "answer": "C", "score": 3}
{"id": 454, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "新的审查者在选择要审查的Kubernetes文档PR时应该过滤哪个GitHub标签？", "A": "cncf-cla: no", "B": "cncf-cla: yes", "C": "language/en", "D": "size/XXL", "answer": "B", "score": 2}
{"id": 455, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes文档网站上与当前版本同时提供多少个以前的版本？", "A": "三个", "B": "四个", "C": "五个", "D": "两个", "answer": "B", "score": 2}
{"id": 456, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "要了解如何设置Kubernetes集群，可以访问Kubernetes文档的哪个部分？", "A": "Tutorials", "B": "Concepts", "C": "Setup", "D": "Tasks", "answer": "C", "score": 3}
{"id": 457, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个文档部分提供详细的Kubernetes命令行语法？", "A": "Tasks", "B": "Tutorials", "C": "Setup", "D": "Reference", "answer": "D", "score": 4}
{"id": 458, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "你在哪里可以找到教你如何在Kubernetes中部署应用程序的教程？", "A": "参考", "B": "教程", "C": "设置", "D": "任务", "answer": "B", "score": 2}
{"id": 459, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "管理 Kubernetes 集群的主要 CLI 工具是什么？", "A": "kubelet", "B": "kubeadm", "C": "kubectl", "D": "kube-proxy", "answer": "C", "score": 4}
{"id": 460, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个工具用于配置一个安全的 Kubernetes 集群？", "A": "kubelet", "B": "kubeadm", "C": "kubectl", "D": "kube-scheduler", "answer": "B", "score": 3}
{"id": 461, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在哪里可以找到使用 kubectl 的 JSONPath 表达式的文档？", "A": "kubectl", "B": "CLI", "C": "JSONPath", "D": "API Reference", "answer": "C", "score": 3}
{"id": 462, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个部分提供有关 Kubernetes 官方支持的客户端库的信息？", "A": "CLI", "B": "Officially supported client libraries", "C": "Components", "D": "Config APIs", "answer": "B", "score": 2}
{"id": 463, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "你会参考哪个文档来设置 kubeadm 配置？", "A": "Config API for kubeadm", "B": "CLI", "C": "API Reference", "D": "Config APIs", "answer": "A", "score": 4}
{"id": 464, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes ABAC 中，策略对象中的 'user' 属性必须匹配什么？", "A": "用户的电子邮件地址", "B": "API 请求中的令牌", "C": "经过身份验证的用户名", "D": "用户的服务账户名称", "answer": "C", "score": 4}
{"id": 465, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "启动 Kubernetes API 服务器时，使用哪个标志来指定 ABAC 授权策略文件？", "A": "--auth-policy-file", "B": "--authorization-policy-file", "C": "--abac-policy-file", "D": "--access-policy-file", "answer": "B", "score": 4}
{"id": 466, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种 Kubernetes 对象用于定义 ABAC 策略？", "A": "Deployment", "B": "Service", "C": "Policy", "D": "Pod", "answer": "C", "score": 4}
{"id": 467, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 ABAC 策略中，允许任何经过身份验证的用户执行操作应使用什么？", "A": "'system:authenticated' 在用户字段中", "B": "'system:authenticated' 在组字段中", "C": "'*'", "D": "没有特定设置", "answer": "B", "score": 4}
{"id": 468, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种方法不是管理 Kubernetes 普通用户的方法？", "A": "通过 API 调用添加用户", "B": "外部身份提供者", "C": "具有凭据的静态文件", "D": "由集群 CA 签名的证书", "answer": "A", "score": 4}
{"id": 469, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "客户端使用 OpenID Connect 令牌进行身份验证必须启用哪一功能？", "A": "ServiceAccount tokens", "B": "Bootstrap tokens", "C": "Static token file", "D": "Authenticating proxy", "answer": "D", "score": 4}
{"id": 470, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用 kubectl 创建服务账户的命令是什么？", "A": "kubectl create serviceaccount", "B": "kubectl apply serviceaccount", "C": "kubectl start serviceaccount", "D": "kubectl run serviceaccount", "answer": "A", "score": 3}
{"id": 471, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种授权模式由于安全风险应该谨慎使用？", "A": "ABAC", "B": "RBAC", "C": "Webhook", "D": "AlwaysAllow", "answer": "D", "score": 4}
{"id": 472, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "当 Kubernetes API 请求不匹配任何授权策略时的默认行为是什么？", "A": "请求被允许", "B": "请求被拒绝", "C": "请求被记录以供审查", "D": "请求被转发到 webhook", "answer": "B", "score": 4}
{"id": 473, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在许多客户端使用引导令牌时的安全风险是什么？", "A": "令牌过期时间太长", "B": "API 服务器的负载增加", "C": "潜在的中间人攻击", "D": "令牌使用记录不足", "answer": "C", "score": 4}
{"id": 474, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "哪个控制器用于自动删除过期的引导令牌？", "A": "tokenmanager", "B": "tokencleaner", "C": "tokenauth", "D": "authmanager", "answer": "B", "score": 3}
{"id": 475, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "被提到管理引导令牌的 Kubernetes 工具是什么？", "A": "kubelet", "B": "kubectl", "C": "kubeadm", "D": "kube-api", "answer": "C", "score": 3}
{"id": 476, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 中的两种 admission webhook 是什么？", "A": "Validating and Authorizing", "B": "Mutating and Validating", "C": "Authorizing and Mutating", "D": "Configuring and Mutating", "answer": "B", "score": 4}
{"id": 477, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "用于启用 admission webhook 配置的 Kubernetes API 版本是什么？", "A": "admissionregistration.k8s.io/v1beta1", "B": "admission.k8s.io/v1alpha1", "C": "admissionregistration.k8s.io/v1", "D": "apiextensions.k8s.io/v1", "answer": "C", "score": 3}
{"id": 478, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "启动 API 服务器以支持 webhook 时推荐的 admission control 配置文件标志是什么？", "A": "--admission-control-config", "B": "--admission-config", "C": "--admission-control", "D": "--admission-control-config-file", "answer": "D", "score": 4}
{"id": 479, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 API 服务器将 webhook 调用视为失败之前的默认超时时间（秒）是多少？", "A": "5", "B": "10", "C": "30", "D": "15", "answer": "B", "score": 3}
{"id": 480, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "应该如何配置 webhook 以避免影响 Kubernetes 控制平面？", "A": "通过设置排除 'kube-system' 的 'namespaceSelector'", "B": "使用 'webhookSelector' 过滤请求", "C": "将 'matchPolicy' 设置为 'Equivalent'", "D": "通过规则中的 'apiGroups' 限制", "answer": "A", "score": 4}
{"id": 481, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "kube-apiserver 上用于识别签署客户端证书的 CA 的标志是什么？", "A": "--authorize-ca-file", "B": "--client-ca-file", "C": "--ssl-ca-file", "D": "--accept-ca-file", "answer": "B", "score": 4}
{"id": 482, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 TLS 引导过程中负责颁发签名证书的 Kubernetes 组件是哪个？", "A": "kube-apiserver", "B": "kube-scheduler", "C": "kube-proxy", "D": "kube-controller-manager", "answer": "D", "score": 4}
{"id": 483, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 TLS 引导中，bootstrap-kubeconfig 文件的作用是什么？", "A": "它存储服务器的 HTTPS 证书。", "B": "它为 kubelet 提供 API 服务器 URL 和凭证。", "C": "它在工作节点上配置 kube-proxy。", "D": "它作为 kubeconfig 文件的备份。", "answer": "B", "score": 3}
{"id": 484, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如果在kubelet TLS引导过程中创建的CSR未被批准，会发生什么情况？", "A": "kubelet重复使用引导令牌。", "B": "kubelet无限次重试请求。", "C": "kubelet在没有TLS保护的情况下运行。", "D": "kubelet无法正常启动。", "answer": "D", "score": 3}
{"id": 485, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在apiserver上启用节点授权模式必须设置哪个标志？", "A": "--enable-admission-plugins=Node", "B": "--authorization-mode=Node", "C": "--enable-node-authorization", "D": "--use-node-auth", "answer": "B", "score": 4}
{"id": 486, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "为了使kubelet通过节点授权器授权，所需的组和用户名格式是什么？", "A": "`system:nodes` 和 `system:node:<nodeName>`", "B": "`system:kubelets` 和 `system:kubelet:<nodeName>`", "C": "`system:users` 和 `system:user:<nodeName>`", "D": "`system:clients` 和 `system:client:<nodeName>`", "answer": "A", "score": 4}
{"id": 487, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如果kubelet的用户名在节点授权模式下不符合`system:node:<nodeName>`格式，会发生什么情况？", "A": "如果kubelet在`system:nodes`组中，仍然会被授权。", "B": "kubelet的请求将根据现有的授权机制处理。", "C": "kubelet会自动分配一个新的、符合要求的用户名。", "D": "kubelet被拒绝访问所有API操作。", "answer": "B", "score": 3}
{"id": 488, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在PodSecurityPolicy的基线配置文件中，不包括哪个能力？", "A": "NET_BIND_SERVICE", "B": "SYS_CHROOT", "C": "CHOWN", "D": "SYS_TIME", "answer": "D", "score": 4}
{"id": 489, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "根据PodSecurityPolicy，在受限配置文件下，必须丢弃哪些能力？", "A": "ALL", "B": "NONE", "C": "NET_RAW", "D": "MKNOD", "answer": "A", "score": 3}
{"id": 490, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "根据PodSecurityPolicy卷设置，在基线配置文件下不允许哪种类型的卷？", "A": "configMap", "B": "csi", "C": "hostPath", "D": "emptyDir", "answer": "C", "score": 4}
{"id": 491, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "为了符合基线和受限配置文件，在PodSecurityPolicy中'hostIPC'设置应是什么？", "A": "true", "B": "false", "C": "undefined", "D": "true 或 undefined", "answer": "B", "score": 3}
{"id": 492, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes中，RBAC代表什么？", "A": "Role-Based Access Control", "B": "Resource-Based Access Command", "C": "Role-Bound Access Command", "D": "Resource-Bound Access Control", "answer": "A", "score": 3}
{"id": 493, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪条命令启动启用了RBAC授权模式的API服务器？", "A": "kube-apiserver --authorization-mode=RBAC", "B": "kubectl start --authorization=RBAC", "C": "kube-apiserver --enable-rbac", "D": "kubectl run --authorization-mode=RBAC", "answer": "A", "score": 4}
{"id": 494, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes中，ClusterRole是什么？", "A": "一个授予跨所有命名空间访问权限的角色", "B": "一个仅授予单个命名空间访问权限的角色", "C": "一个限制所有命名空间中用户权限的角色", "D": "一个用于管理Kubernetes集群的命令", "answer": "A", "score": 5}
{"id": 495, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种类型的Kubernetes对象可以授予用户跨所有命名空间的权限？", "A": "RoleBinding", "B": "ClusterRoleBinding", "C": "ServiceAccount", "D": "Namespace", "answer": "B", "score": 4}
{"id": 496, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如何防止用户在 Kubernetes 中升级权限？", "A": "通过使用网络策略", "B": "通过使用 Pod 安全策略", "C": "通过确保 RBAC 角色不授予过多权限", "D": "通过禁用 RBAC 功能", "answer": "C", "score": 4}
{"id": 497, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "如何通过 Kubernetes API 动态配置 RBAC 策略？", "A": "使用 kubectl 和 YAML 文件", "B": "通过直接操作数据库", "C": "通过直接编辑 RBAC API 对象", "D": "以上都不是", "answer": "A", "score": 3}
{"id": 498, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "哪个 Kubernetes 对象可以绑定到 ServiceAccount 令牌，以便通过删除对象来撤销令牌？", "A": "Pod", "B": "Node", "C": "Secret", "D": "Service", "answer": "C", "score": 4}
{"id": 499, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Kubernetes 中使用哪个命令创建一个新的命名空间？", "A": "kubectl create namespace", "B": "kubectl new namespace", "C": "kubectl build namespace", "D": "kubectl set namespace", "answer": "A", "score": 2}
{"id": 500, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "使用 TokenReview API 验证和检查来自 ServiceAccount 令牌的私有声明需要使用哪些命令序列？", "A": "kubectl create token，将其复制到文件，kubectl create -f", "B": "kubectl token review，kubectl apply -f", "C": "kubectl describe token，kubectl get -f", "D": "kubectl token generate，kubectl verify -f", "answer": "A", "score": 4}
{"id": 501, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在 Kubernetes 中，您可以在 ValidatingAdmissionPolicyBinding 中指定什么？", "A": "只有策略名称", "B": "只有策略范围", "C": "策略范围及其适用的资源", "D": "只有参数资源", "answer": "C", "score": 3}
{"id": 502, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何在 Kubernetes 集群中应用 ValidatingAdmissionPolicy？", "A": "通过一组复杂的配置", "B": "通过一个简单的 CLI 命令", "C": "在创建后自动应用", "D": "通过配置相应的 ValidatingAdmissionPolicyBinding", "answer": "D", "score": 3}
{"id": 503, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "激活涉及参数资源的 ValidatingAdmissionPolicy 需要哪些操作？", "A": "创建 ValidatingAdmissionPolicy、ValidatingAdmissionPolicyBinding 和参数资源", "B": "仅创建 ValidatingAdmissionPolicy", "C": "仅创建 ValidatingAdmissionPolicyBinding", "D": "仅创建参数资源", "answer": "A", "score": 4}
{"id": 504, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在 Kubernetes 中设置 Webhook 模式时使用哪种配置文件格式？", "A": "JSON", "B": "XML", "C": "YAML", "D": "HTML", "answer": "C", "score": 3}
{"id": 505, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Kubernetes 中设置 Webhook 授权模式时使用哪个标志指定配置文件？", "A": "--authorization-config", "B": "--webhook-config-file", "C": "--authorization-webhook-config-file", "D": "--api-config-file", "answer": "C", "score": 3}
{"id": 506, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在使用 Webhook 模式确定用户权限时，POST 到远程服务的 Kubernetes 对象是什么类型？", "A": "ServiceReview", "B": "SubjectAccessReview", "C": "UserAccessReview", "D": "WebhookReview", "answer": "B", "score": 4}
{"id": 507, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes 中，主要用于节点级授权的控制类型是什么？", "A": "RBAC", "B": "ABAC", "C": "节点授权", "D": "Webhook 授权", "answer": "C", "score": 3}
{"id": 508, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "用于处理证书操作（如签名）的 Kubernetes 资源是什么？", "A": "ConfigMaps", "B": "CertificateSigningRequests", "C": "Secrets", "D": "Roles", "answer": "B", "score": 4}
{"id": 509, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种准入控制方法允许动态加载扩展而无需重新编译 Kubernetes？", "A": "Static Admission Control", "B": "Dynamic Admission Control", "C": "Direct Admission Control", "D": "Manual Admission Control", "answer": "B", "score": 4}
{"id": 510, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "在 Kubernetes 中如何配置基于角色的访问控制 (RBAC)？", "A": "通过直接的 Kubernetes API 调用", "B": "使用外部配置文件", "C": "部署特定的 RBAC Pods", "D": "使用 kubectl 应用 RBAC 规则", "answer": "D", "score": 3}
{"id": 511, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 中 'Accelerators' 特性门的用途是什么？", "A": "启用额外的存储设备", "B": "管理网络策略", "C": "启用 Nvidia GPU 与 Docker Engine 的支持", "D": "自动化 pod 扩展", "answer": "C", "score": 4}
{"id": 512, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes 特性门 'AllowExtTrafficLocalEndpoints' 的用途是什么？", "A": "将外部请求路由到任何可用的端点", "B": "启用水平 pod 自动扩展", "C": "将外部请求仅限于节点本地端点", "D": "动态管理存储配置", "answer": "C", "score": 3}
{"id": 513, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'AnyVolumeDataSource' 特性门在 Kubernetes 中从 alpha 阶段过渡到 beta 阶段是什么时候？", "A": "1.22", "B": "1.23", "C": "1.24", "D": "1.25", "answer": "C", "score": 2}
{"id": 514, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'AnyVolumeDataSource' 特性在 Kubernetes 中的用途是什么？", "A": "限制 PVCs 的数据源类型", "B": "使用任何自定义资源作为 PVCs 的数据源", "C": "禁用使用自定义资源作为数据源", "D": "监控 Kubernetes 中的数据源使用情况", "answer": "B", "score": 3}
{"id": 515, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "'APIResponseCompression' 首次作为 beta 特性引入，并默认启用压缩的 Kubernetes 版本是哪个？", "A": "1.7", "B": "1.15", "C": "1.16", "D": "1.17", "answer": "C", "score": 4}
{"id": 516, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 1.17 到 1.21 版本中稳定后被移除的特性门是哪一个？", "A": "AttachVolumeLimit", "B": "EnableMetrics", "C": "NodeAllocation", "D": "DynamicProvisioning", "answer": "A", "score": 4}
{"id": 517, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'AttachVolumeLimit' 特性门最初发布时处于哪个阶段？", "A": "Alpha", "B": "Beta", "C": "Stable", "D": "Experimental", "answer": "A", "score": 4}
{"id": 518, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "'BalanceAttachedNodeVolumes' 特性门从引入到弃用支持的 Kubernetes 版本是哪些？", "A": "1.11 到 1.21", "B": "1.10 到 1.20", "C": "1.12 到 1.22", "D": "1.11 到 1.22", "answer": "A", "score": 4}
{"id": 519, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "'BalanceAttachedNodeVolumes' 特性在被从 Kubernetes 中移除之前处于哪个阶段？", "A": "Beta", "B": "Stable", "C": "Alpha", "D": "Deprecated", "answer": "D", "score": 3}
{"id": 520, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在哪个 Kubernetes 版本中，'BlockVolume' 功能首次变得稳定？", "A": "1.9", "B": "1.12", "C": "1.18", "D": "1.21", "answer": "C", "score": 4}
{"id": 521, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在被移除之前，'BlockVolume' 功能未达到以下哪个阶段？", "A": "Alpha", "B": "Beta", "C": "Stable", "D": "Deprecated", "answer": "D", "score": 4}
{"id": 522, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "集群管理员可以使用哪个指标来监控在 'BoundServiceAccountTokenVolume' 中对扩展令牌的依赖？", "A": "serviceaccount_requests_total", "B": "serviceaccount_stale_tokens_total", "C": "serviceaccount_token_failures", "D": "serviceaccount_token_uses", "answer": "B", "score": 4}
{"id": 523, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个标志可以禁用 'BoundServiceAccountTokenVolume' 功能中的扩展令牌过期？", "A": "--disable-token-expiration", "B": "--token-expiration-false", "C": "--service-account-extend-token-expiration=false", "D": "--extend-token-lifetime=false", "answer": "C", "score": 3}
{"id": 524, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "'CloudControllerManagerWebhook' 功能在哪个 Kubernetes 版本中可用？", "A": "1.26", "B": "1.27", "C": "1.28", "D": "1.29", "answer": "B", "score": 3}
{"id": 525, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "'CloudControllerManagerWebhook' 功能在首次引入时的默认设置是什么？", "A": "Enabled", "B": "Disabled", "C": "Not specified", "D": "Configurable", "answer": "B", "score": 3}
{"id": 526, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "CronJobControllerV2 功能门控在 Kubernetes 的 alpha 阶段首次达到时的默认值是什么？", "A": "true", "B": "false", "C": "not set", "D": "variable", "answer": "B", "score": 4}
{"id": 527, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "CronJobControllerV2 功能门控在哪个 Kubernetes 版本中达到稳定阶段？", "A": "1.22", "B": "1.20", "C": "1.23", "D": "1.21", "answer": "A", "score": 4}
{"id": 528, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'CronJobTimeZone' 功能门控在哪个 Kubernetes 版本中转为稳定？", "A": "1.26", "B": "1.27", "C": "1.24", "D": "1.25", "answer": "B", "score": 4}
{"id": 529, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'CronJobsScheduledAnnotation' 功能门控在 Kubernetes 的哪个阶段引入？", "A": "alpha", "B": "beta", "C": "stable", "D": "development", "answer": "B", "score": 3}
{"id": 530, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'CrossNamespaceVolumeDataSource' 功能门控在哪个 Kubernetes 版本中首次引入？", "A": "1.24", "B": "1.25", "C": "1.26", "D": "1.27", "answer": "C", "score": 4}
{"id": 531, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'CrossNamespaceVolumeDataSource' 功能门控启用什么功能？", "A": "允许为 PersistentVolumeClaims 设置时区", "B": "允许在 PersistentVolumeClaim 的 dataSourceRef 字段中指定源命名空间", "C": "启用跨命名空间的 PersistentVolumeClaims 自动扩展", "D": "限制数据源到同一命名空间", "answer": "B", "score": 5}
{"id": 532, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 中 'CSIBlockVolume' 特性门的目的是什么?", "A": "支持动态卷配置", "B": "使外部 CSI 卷驱动程序支持块存储", "C": "增强 Pod 安全策略", "D": "启用 Pod 的自动扩展", "answer": "B", "score": 4}
{"id": 533, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 Kubernetes 中, 哪个特性门取代了 'CSIMigrationAWSComplete' 来管理 AWS EBS 存储?", "A": "CSIMigration", "B": "EBSRegistration", "C": "InTreePluginAWSUnregister", "D": "AWSPluginManagement", "answer": "C", "score": 4}
{"id": 534, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 的哪个版本首次将 CSIMigrationAWS 特性门作为 alpha 特性引入?", "A": "1.14", "B": "1.15", "C": "1.16", "D": "1.17", "answer": "A", "score": 3}
{"id": 535, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在哪个 Kubernetes 版本中, CSIMigrationAWS 特性门在其 beta 阶段首次默认设置为 true?", "A": "1.22", "B": "1.23", "C": "1.24", "D": "1.25", "answer": "B", "score": 3}
{"id": 536, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "当 CSIMigrationAWS 特性门被禁用时, 哪个操作不支持回退到 in-tree EBS 插件?", "A": "挂载", "B": "配置", "C": "快照", "D": "卸载", "answer": "B", "score": 4}
{"id": 537, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪个特性门取代了 CSIMigrationAzureDiskComplete 来处理 Kubernetes 中的 AzureDisk?", "A": "AzureDiskMigrationComplete", "B": "AzureDiskDirectCSI", "C": "InTreePluginAzureDiskUnregister", "D": "AzureDiskCSITransition", "answer": "C", "score": 4}
{"id": 538, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "为了使 CSIMigrationAzureDiskComplete 特性门有效运行, 需要启用哪些额外的特性标志?", "A": "CSIMigration 和 CSIMigrationAzureDisk", "B": "AzureDiskCSI 和 KubernetesCSI", "C": "CSIMigrationGeneric 和 AzureDiskMigration", "D": "AzureCSI 和 AzureDiskDirect", "answer": "A", "score": 3}
{"id": 539, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "对于挂载操作, 当 AzureDisk CSI 插件未安装时, CSIMigrationAzureDisk 特性门回退到什么?", "A": "AzureDisk direct CSI", "B": "AzureDisk in-tree 插件", "C": "通用 CSI 迁移", "D": "以上都不是", "answer": "B", "score": 4}
{"id": 540, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "当 AzureDisk CSI 插件未配置时, CSIMigrationAzureDisk 特性门不支持以下哪一项?", "A": "挂载操作", "B": "配置操作", "C": "快照操作", "D": "附加操作", "answer": "B", "score": 3}
{"id": 541, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "CSIMigrationAzureFileComplete 特性门在被移除之前经历了哪些阶段?", "A": "Alpha, Beta, Stable", "B": "Alpha, Beta, Deprecated", "C": "Alpha, Deprecated, Removed", "D": "Alpha, Stable, Deprecated", "answer": "C", "score": 3}
{"id": 542, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "为了使 CSIMigrationAzureFileComplete 特性在 Kubernetes 节点上正常运行, 需要哪些先决条件?", "A": "安装 AzureFile CSI 插件并启用 CSIMigration 特性", "B": "安装 AzureFile CSI 插件并升级 Kubernetes", "C": "AzureFile Direct CSI 和 CSIMigration 特性已启用", "D": "启用 InTreePluginAzureFileUnregister 特性", "answer": "A", "score": 4}
{"id": 543, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "您将使用哪个命令来验证 AzureFile CSI 插件是否在集群上处于活动状态?", "A": "kubectl get csicheck", "B": "kubectl describe csistatus", "C": "kubectl get csi", "D": "kubectl describe storageclass", "answer": "C", "score": 3}
{"id": 544, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在Kubernetes中，'CSIMigrationGCEComplete'功能门控完成了什么？", "A": "它自动部署GCE实例", "B": "它将来自GCE-PD内置插件的卷操作路由到PD CSI插件", "C": "它自动增加存储容量", "D": "它管理用户对GCE卷的访问", "answer": "B", "score": 4}
{"id": 545, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "必须启用哪些功能标志才能使'CSIMigrationGCEComplete'功能门正常工作？", "A": "CSIMigration 和 CSIMigrationGCE", "B": "GCEAutoscaler 和 GCEPersistentDisk", "C": "AutoScalerGCE 和 GoogleKubernetesEngine", "D": "以上都不是", "answer": "A", "score": 4}
{"id": 546, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "必须启用哪个功能标志才能使“CSIMigrationGCE”功能门控生效？", "A": "CSIMigrationGCE", "B": "GCEAutoscaler", "C": "CSIMigration", "D": "GCEPDManager", "answer": "C", "score": 3}
{"id": 547, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "要使'CSIMigrationOpenStackComplete'功能门起作用，需要启用哪些功能标志？", "A": "OpenStackAuth 和 CSIMigration", "B": "CSIMigration 和 CSIMigrationOpenStack", "C": "OpenStackRegistration 和 CinderIntegration", "D": "CSICinder 和 OpenStackMonitor", "answer": "B", "score": 4}
{"id": 548, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个功能标志取代了'CSIMigrationOpenStackComplete'以防止注册内置的OpenStack Cinder插件？", "A": "InTreePluginOpenStackUnregister", "B": "OpenStackCinderStop", "C": "UnregisterCinderCSI", "D": "DisableOpenStackInTree", "answer": "A", "score": 4}
{"id": 549, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中的CSIMigrationvSphereComplete功能门的目的是什么？", "A": "启用Pod的自动缩放", "B": "将卷操作从vSphere内置插件路由到vSphere CSI插件", "C": "增加节点通信的安全协议", "D": "管理用户访问和身份", "answer": "B", "score": 4}
{"id": 550, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在CSIMigrationvSphere功能的上下文中，系统在执行供应操作时不支持回退到什么？", "A": "vSphere CSI插件", "B": "内置vSphere插件", "C": "CSIMigration功能标志", "D": "Alpha阶段设置", "answer": "B", "score": 3}
{"id": 551, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "CSINodeInfo功能门在Kubernetes中首次达到稳定阶段，并默认值为'true'是在什么时候？", "A": "1.12", "B": "1.14", "C": "1.16", "D": "1.17", "answer": "D", "score": 3}
{"id": 552, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在生命周期的哪个阶段，CustomResourceValidation功能首先默认设置为'true'？", "A": "alpha", "B": "beta", "C": "stable", "D": "以上都不是", "answer": "B", "score": 3}
{"id": 553, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes功能门在版本1.16到1.18中稳定后被移除？", "A": "CustomResourceWebhookConversion", "B": "HorizontalPodAutoscaler", "C": "PodSecurityPolicy", "D": "ServiceMesh", "answer": "A", "score": 3}
{"id": 554, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "DaemonSetUpdateSurge功能首次在哪个版本中实现稳定发布？", "A": "1.21", "B": "1.22", "C": "1.25", "D": "1.28", "answer": "C", "score": 4}
{"id": 555, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个功能门使DaemonSet工作负载在每个节点更新期间保持可用性？", "A": "DaemonSetScaling", "B": "DaemonSetUpdateStrategy", "C": "DaemonSetUpdateSurge", "D": "NodeAffinityPolicy", "answer": "C", "score": 5}
{"id": 556, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes DevicePlugins功能在默认启用设置下首次引入的是哪个阶段？", "A": "Alpha", "B": "Beta", "C": "Stable", "D": "以上都不是", "answer": "B", "score": 3}
{"id": 557, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes版本首次引入了默认启用的DisableKubeletCloudCredentialProviders功能？", "A": "1.23", "B": "1.28", "C": "1.29", "D": "1.30", "answer": "C", "score": 3}
{"id": 558, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes版本首次引入了'DynamicKubeletConfig'功能门？", "A": "1.4", "B": "1.10", "C": "1.11", "D": "1.22", "answer": "A", "score": 3}
{"id": 559, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'EfficientWatchResumption'功能在Kubernetes中的目的是什么？", "A": "优化Pod调度效率", "B": "向用户传递存储源书签事件", "C": "增强Kubernetes节点的安全性", "D": "自动化备份操作", "answer": "B", "score": 4}
{"id": 560, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "'EfficientWatchResumption'在哪个Kubernetes版本中首次达到稳定阶段并默认启用？", "A": "1.20", "B": "1.21", "C": "1.23", "D": "1.24", "answer": "D", "score": 3}
{"id": 561, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在Kubernetes的上下文中，通过'ElasticIndexedJob'功能确保'spec.completions'等于'spec.parallelism'主要有利于作业处理的哪个方面？", "A": "安全性", "B": "灵活性和资源优化", "C": "日志效率", "D": "网络流量减少", "answer": "B", "score": 4}
{"id": 562, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'EnableAggregatedDiscoveryTimeout'功能在Kubernetes中设置的超时时间是多少？", "A": "三秒", "B": "五秒", "C": "十秒", "D": "一分钟", "answer": "B", "score": 2}
{"id": 563, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在哪些Kubernetes版本中，'EnableEquivalenceClassCache'功能处于alpha阶段？", "A": "1.8到1.12", "B": "1.13到1.17", "C": "1.18到1.23", "D": "1.24到1.28", "answer": "A", "score": 3}
{"id": 564, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "'EnableEquivalenceClassCache'功能在Kubernetes中正式弃用是什么时候？", "A": "版本1.8", "B": "版本1.12", "C": "版本1.13", "D": "版本1.23", "answer": "C", "score": 2}
{"id": 565, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "启用哪个Kubernetes功能门可以让kube-proxy使用EndpointSlices作为主要数据源，以提升可扩展性和性能？", "A": "EndpointSliceProxying", "B": "HorizontalPodAutoscaler", "C": "ClusterDNS", "D": "PodSecurityPolicy", "answer": "A", "score": 4}
{"id": 566, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "EndpointSliceProxying功能在Kubernetes的哪个阶段首次达到稳定状态，默认值为true？", "A": "1.18", "B": "1.19", "C": "1.22", "D": "1.24", "answer": "C", "score": 4}
{"id": 567, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "'EndpointSliceTerminatingCondition'功能在哪个Kubernetes版本中首次达到稳定阶段，默认设置为true？", "A": "1.20", "B": "1.22", "C": "1.26", "D": "1.27", "answer": "C", "score": 4}
{"id": 568, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "'EndpointSlice'功能在哪个Kubernetes版本中首次进入稳定阶段，默认设置为true？", "A": "1.16", "B": "1.18", "C": "1.20", "D": "1.21", "answer": "D", "score": 4}
{"id": 569, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "'EphemeralContainers'功能在哪个Kubernetes版本中首次达到beta阶段，默认设置为true？", "A": "1.16", "B": "1.22", "C": "1.23", "D": "1.25", "answer": "C", "score": 3}
{"id": 570, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "'EphemeralContainers'功能在其稳定发布的哪个阶段默认设置为true？", "A": "Alpha", "B": "Beta", "C": "Stable", "D": "以上都不是", "answer": "C", "score": 2}
{"id": 571, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中'ExecProbeTimeout'功能门的主要目的是什么？", "A": "允许exec探针具有无限超时", "B": "确保kubelet尊重exec探针的超时", "C": "禁用所有exec探针", "D": "启用失败探针的自动修复", "answer": "B", "score": 3}
{"id": 572, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'ExpandCSIVolumes'功能门在生命周期的哪个阶段设置为稳定，默认值为true？", "A": "1.14到1.15", "B": "1.16到1.23", "C": "1.24到1.26", "D": "1.26之后", "answer": "C", "score": 4}
{"id": 573, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'ExpandPersistentVolumes'功能在Kubernetes 1.8版本中首次引入时的默认设置是什么？", "A": "启用", "B": "禁用", "C": "不适用", "D": "可变的", "answer": "B", "score": 3}
{"id": 574, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "'ExpandPersistentVolumes'在哪个Kubernetes版本中从beta过渡到稳定？", "A": "版本1.23", "B": "版本1.10", "C": "版本1.24", "D": "版本1.11", "answer": "C", "score": 4}
{"id": 575, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "'ExpandedDNSConfig'功能门在哪个Kubernetes版本中达到稳定阶段？", "A": "版本1.27", "B": "版本1.28", "C": "版本1.26", "D": "版本1.25", "answer": "B", "score": 3}
{"id": 576, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "功能'ExperimentalCriticalPodAnnotation'在哪个Kubernetes版本中首次引入？", "A": "版本1.4", "B": "版本1.5", "C": "版本1.6", "D": "版本1.7", "answer": "B", "score": 3}
{"id": 577, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "截至哪个Kubernetes版本，'ExperimentalCriticalPodAnnotation'功能被弃用？", "A": "版本1.12", "B": "版本1.13", "C": "版本1.14", "D": "版本1.15", "answer": "B", "score": 3}
{"id": 578, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes中'GenericEphemeralVolume'功能的目的是什么?", "A": "管理用户访问", "B": "启用具有完整功能的临时内联卷", "C": "自动化Pod扩展", "D": "调度任务", "answer": "B", "score": 4}
{"id": 579, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "'GenericEphemeralVolume'功能在哪个Kubernetes版本达到稳定阶段?", "A": "1.20", "B": "1.21", "C": "1.22", "D": "1.23", "answer": "D", "score": 3}
{"id": 580, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "以下哪个功能不支持'GenericEphemeralVolume'功能?", "A": "从快照恢复", "B": "用户身份验证管理", "C": "存储容量跟踪", "D": "第三方存储支持", "answer": "B", "score": 4}
{"id": 581, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes版本首次以alpha阶段引入'GracefulNodeShutdownBasedOnPodPriority'功能?", "A": "1.22", "B": "1.23", "C": "1.24", "D": "1.25", "answer": "B", "score": 4}
{"id": 582, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "什么时候'GracefulNodeShutdownBasedOnPodPriority'功能在beta阶段默认设置为true?", "A": "1.23", "B": "1.24", "C": "1.25", "D": "1.26", "answer": "B", "score": 4}
{"id": 583, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中IdentifyPodOS功能的主要目的是?", "A": "扩展Pod部署", "B": "在API服务器接纳时识别Pod的操作系统", "C": "增加Pod安全性", "D": "监控Pod性能", "answer": "B", "score": 4}
{"id": 584, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "IdentifyPodOS功能在哪个Kubernetes版本达到稳定阶段?", "A": "1.22", "B": "1.23", "C": "1.24", "D": "1.25", "answer": "D", "score": 3}
{"id": 585, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个Kubernetes版本中`ImageMaximumGCAge`功能在beta阶段可用且默认值设置为true?", "A": "1.28", "B": "1.29", "C": "1.30", "D": "1.31", "answer": "C", "score": 3}
{"id": 586, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "将Secrets和ConfigMaps标记为不可变如何增强Kubernetes环境?", "A": "提高部署速度", "B": "通过防止修改提高安全性和性能", "C": "降低存储成本", "D": "更容易回滚到以前的状态", "answer": "B", "score": 4}
{"id": 587, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "InPlacePodVerticalScaling功能在哪个Kubernetes版本中以alpha阶段引入?", "A": "1.26", "B": "1.27", "C": "1.28", "D": "1.29", "answer": "B", "score": 4}
{"id": 588, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令行标志用于启用或禁用Kubernetes组件中的功能?", "A": "--feature-gates", "B": "--enable-gates", "C": "--set-gates", "D": "--config-gates", "answer": "A", "score": 3}
{"id": 589, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes中Alpha功能的默认状态是什么?", "A": "默认启用", "B": "默认禁用", "C": "仅在GA中启用", "D": "在运行时可配置", "answer": "B", "score": 3}
{"id": 590, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "Kubernetes功能阶段中描述为“可能有bug”和“随时可能停止支持而不另行通知”的是哪个阶段?", "A": "Alpha", "B": "Beta", "C": "GA", "D": "Deprecated", "answer": "A", "score": 3}
{"id": 591, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在Kubernetes的哪个功能阶段通常默认启用该功能?", "A": "Alpha", "B": "Beta", "C": "GA", "D": "Deprecated", "answer": "B", "score": 3}
{"id": 592, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "要在Kubernetes中启用Beta API组功能，应怎么做?", "A": "使用--feature-gates标志", "B": "在配置文件中设置为启用", "C": "为特定API设置--runtime-config", "D": "Beta API组不能手动启用", "answer": "C", "score": 4}
{"id": 593, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "IndexedJob 功能在 Kubernetes 的哪个版本首次作为稳定版本出现？", "A": "1.22", "B": "1.23", "C": "1.24", "D": "1.25", "answer": "C", "score": 4}
{"id": 594, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "Kubernetes 的哪个功能允许 Job 控制器管理每个完成索引的 Pod 完成情况？", "A": "BatchJob", "B": "IndexedJob", "C": "SequentialJob", "D": "ParallelJob", "answer": "B", "score": 5}
{"id": 595, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "添加到 `IngressClass.spec.parameters` 的哪些字段支持命名空间范围的参数？", "A": "Type and Scope", "B": "Scope and Namespace", "C": "Namespace and Type", "D": "Class and Type", "answer": "B", "score": 4}
{"id": 596, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用单个 kubectl 命令检索 Kubernetes 集群中所有 pod 的当前 CPU 和内存使用情况？", "A": "kubectl top node", "B": "kubectl top pod", "C": "kubectl get pod --all-namespaces", "D": "kubectl describe pods", "answer": "B", "score": 3}
{"id": 597, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes Operator 的核心组件是什么？它们如何增强应用程序管理？", "A": "CRDs and the Operator SDK", "B": "Pods and Nodes", "C": "Services and Ingress", "D": "Deployment and ReplicaSets", "answer": "A", "score": 4}
{"id": 598, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "添加到 `IngressClass.spec.parameters` 的哪些字段支持命名空间范围的参数？", "A": "Type and Scope", "B": "Scope and Namespace", "C": "Namespace and Type", "D": "Class and Type", "answer": "B", "score": 4}
{"id": 599, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "启动适合部署 Istio 的 minikube 实例的命令是什么？", "A": "minikube start --memory=4096 --kubernetes-version=v1.11.1", "B": "minikube start --memory=2048 --kubernetes-version=v1.9.0", "C": "minikube start --memory=4096 --kubernetes-version=v1.10.0 --vm-driver=hyperkit", "D": "minikube start --memory=4096 --kubernetes-version=v1.11.1 --vm-driver=hyperkit", "answer": "D", "score": 3}
{"id": 600, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在初始化 Helm Tiller 后，如何使用 Helm 部署 Istio？", "A": "kubectl apply -f install/kubernetes/helm/istio/templates/crds.yaml, then helm install", "B": "helm install install/kubernetes/helm/istio --name istio --namespace istio-system", "C": "kubectl create -f install/kubernetes/helm/helm-service-account.yaml, then helm install", "D": "helm init --service-account tiller, then helm install install/kubernetes/helm/istio --name istio --namespace istio-system", "answer": "D", "score": 4}
{"id": 601, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "部署 Istio 后，使用哪个命令检查 istio-system 命名空间中服务的状态？", "A": "kubectl -n istio-system get service", "B": "kubectl get pods --namespace=istio-system", "C": "kubectl -n istio-system describe services", "D": "istioctl -n istio-system get services", "answer": "A", "score": 3}
{"id": 602, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在非 Kubernetes 应用程序上部署 Istio 之前，必须满足哪些条件？", "A": "必须能够通过 IP 访问网格中的服务。", "B": "必须能够访问 Kubernetes 分配的集群 IP。", "C": "Istio 控制平面服务必须可以从虚拟机访问。", "D": "A 和 C 都是", "answer": "D", "score": 4}
{"id": 603, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何在 Istio 中配置一个新的自定义指标，使其每个请求计数加倍？", "A": "修改 prometheus 处理器使每个请求计数加倍", "B": "创建一个将计数加倍的指标实例", "C": "使用规则复制请求计数", "D": "以上都不是", "answer": "B", "score": 4}
{"id": 604, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "将 Istio 中的 Prometheus 服务转发到本地机器以访问其 UI 的命令是什么？", "A": "kubectl -n istio-system port-forward service/prometheus 9090:9090 &", "B": "kubectl -n istio-system expose service/prometheus --port=9090", "C": "kubectl port-forward prometheus 9090:9090 -n istio-system", "D": "helm install prometheus istio-system/prometheus", "answer": "A", "score": 3}
{"id": 605, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在 Istio 部署中如何访问 Jaeger UI？", "A": "在浏览器中使用提供的 URL 打开 Jaeger UI", "B": "使用 VPN 连接到 Istio 网络", "C": "为 Jaeger 配置一个 Istio Gateway", "D": "使用端口转发在本地访问 Jaeger", "answer": "D", "score": 3}
{"id": 606, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "使用哪个命令将 Istio 中的 Grafana 服务端口转发到本地机器以访问其仪表板？", "A": "kubectl -n istio-system port-forward service/grafana 3000:3000 &", "B": "kubectl -n istio-system expose service/grafana --port=3000", "C": "kubectl port-forward grafana 3000:3000 -n istio-system", "D": "helm install grafana istio-system/grafana", "answer": "A", "score": 3}
{"id": 607, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "以下哪项不是 Istio RBAC 系统的功能？", "A": "简单的基于角色的语义", "B": "提供服务到服务和最终用户身份验证", "C": "启用直接 pod 到 pod 的通信", "D": "自定义属性的角色和角色绑定的灵活性", "answer": "C", "score": 4}
{"id": 608, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "在部署应用程序到启用Istio的集群时，使用哪个命令将Envoy sidecar注入到Kubernetes pod中？", "A": "kubectl create -f deployment.yaml", "B": "kubectl apply -f <(istioctl kube-inject -f app.yaml)", "C": "istioctl create -f envoy-config.yaml", "D": "helm install my-app --set envoy.enabled=true", "answer": "B", "score": 4}
{"id": 609, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Istio资源用于设置流量路由和负载均衡到不同版本的服务的规则是什么？", "A": "ServiceEntry", "B": "Gateway", "C": "VirtualService", "D": "DestinationRule", "answer": "C", "score": 5}
{"id": 610, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "哪个Istio组件允许您为服务指定详细的流量路由和故障注入规则？", "A": "Ingress Controller", "B": "VirtualService", "C": "Service Mesh Interface", "D": "Cluster Balancer", "answer": "B", "score": 4}
{"id": 611, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何诊断和解决在Istio管理的Kubernetes集群中流量未到达特定服务的问题？", "A": "检查相应的VirtualService和DestinationRule配置", "B": "重新启动集群中的所有pods", "C": "修改集群的核心DNS设置", "D": "检查物理网络交换机", "answer": "A", "score": 4}
{"id": 612, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在Kubernetes环境中使用Istio的主要目的是？", "A": "简化应用程序的部署", "B": "管理服务间的通信和安全", "C": "增加集群的存储容量", "D": "监控pods的CPU使用情况", "answer": "B", "score": 4}
{"id": 613, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Istio如何增强Kubernetes中微服务的安全性？", "A": "提供内置的服务发现", "B": "管理服务间的用户认证和授权", "C": "自动化pod的扩展", "D": "增加可用节点的数量", "answer": "B", "score": 4}
{"id": 614, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Istio的哪个组件允许动态路由和管理微服务的流量？", "A": "Envoy", "B": "Mixer", "C": "Pilot", "D": "Citadel", "answer": "C", "score": 4}
{"id": 615, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在运行Ubuntu的Kubernetes节点上，您将使用以下哪个命令来安装Docker？", "A": "apt-get install docker.io", "B": "yum install docker", "C": "apt-get install docker-engine", "D": "snap install docker", "answer": "C", "score": 3}
{"id": 616, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在Kubernetes开发中，运行'hack/local-up-cluster.sh'脚本的目的是什么？", "A": "部署本地开发集群", "B": "编译Kubernetes源代码", "C": "清理Docker镜像", "D": "运行集成测试", "answer": "A", "score": 4}
{"id": 617, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在设置本地集群后，用于配置Kubernetes命令行工具'kubectl'的命令是什么？", "A": "kubectl config set-cluster", "B": "kubectl set kubeconfig", "C": "export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig", "D": "kubectl apply -f kubeconfig", "answer": "C", "score": 4}
{"id": 618, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes代码库中运行'pkg/kubelet/kuberuntime'的单元测试的命令是什么？", "A": "go test -v k8s.io/kubernetes/pkg/kubelet/kuberuntime", "B": "go test ./pkg/kubelet/kuberuntime", "C": "make test pkg=kubelet/kuberuntime", "D": "docker run kube-test go test kuberuntime", "answer": "A", "score": 4}
{"id": 619, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "要在Kubernetes中运行以'SecurityContext'功能为重点的端到端(e2e)测试，哪个命令是合适的？", "A": "make test-e2e WHAT='SecurityContext'", "B": "go run hack/e2e.go -v -test --test_args='--ginkgo.focus=Feature:SecurityContext'", "C": "kubectl test e2e --focus=SecurityContext", "D": "make ginkgo run SecurityContext", "answer": "B", "score": 5}
{"id": 620, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes资源用于管理集群内的安全策略是什么？", "A": "ServiceAccounts", "B": "NetworkPolicies", "C": "PodSecurityPolicies", "D": "SecurityContexts", "answer": "C", "score": 4}
{"id": 621, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes API的主要设计原则是什么？", "A": "所有API都是声明式和面向对象的", "B": "API是命令式和程序性的", "C": "API不应该是可组合的或补充的", "D": "API操作应依赖于全局状态", "answer": "A", "score": 5}
{"id": 622, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在Kubernetes中，Pod的作用是什么？", "A": "存储静态数据", "B": "提供网络解决方案", "C": "作为可以运行容器的最小部署单元", "D": "充当数据存储卷", "answer": "C", "score": 5}
{"id": 623, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes 网络策略如何有助于集群安全？", "A": "通过隔离 Pod 流量", "B": "通过加密数据存储", "C": "通过高效调度 Pod", "D": "通过监控 Pod 活动", "answer": "A", "score": 4}
{"id": 624, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用哪个命令查看所有受支持的 Kubernetes API 版本和资源？", "A": "kubectl api-versions 和 kubectl api-resources", "B": "kubectl get apis", "C": "kubectl config view", "D": "kubectl resources all", "answer": "A", "score": 3}
{"id": 625, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "kube-apiserver 的认证过程的主要作用是什么？", "A": "管理 Kubernetes 内的用户对象", "B": "确保请求在处理前经过认证", "C": "提供用户界面", "D": "直接管理 etcd", "answer": "B", "score": 4}
{"id": 626, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何通过 HTTP 和 HTTPS 暴露 Kubernetes API？", "A": "启用端口 8080 和 6443", "B": "配置代理服务器", "C": "通过 Kubernetes 客户端库", "D": "仅使用 kubectl", "answer": "A", "score": 4}
{"id": 627, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个命令可用于启动具有高可用性特定配置的 kube-controller-manager？", "A": "kube-controller-manager --leader-elect=true", "B": "kubectl apply -f controller-config.yaml", "C": "kubelet --controller-manager-start", "D": "kubeadm init --control-manager-config", "answer": "A", "score": 4}
{"id": 628, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "kube-controller-manager 如何确保高可用性？", "A": "通过使用多节点领导者选举机制", "B": "通过将容器均匀分布在节点上", "C": "通过自动复制所有 Pod", "D": "通过加密节点之间的所有流量", "answer": "A", "score": 5}
{"id": 629, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "kube-controller-manager 在哪里暴露其监控指标？", "A": "在端口 10252 上的 /metrics 端点", "B": "通过 Kubernetes API 服务器", "C": "在端口 8080 上使用安全连接", "D": "通过集成的 Prometheus 服务器", "answer": "A", "score": 4}
{"id": 630, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "kube-controller-manager 中 Informers 的功能是什么？", "A": "通过使用缓存机制减少 API 调用", "B": "管理云提供商集成", "C": "分配网络流量", "D": "加密数据存储", "answer": "A", "score": 4}
{"id": 631, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "kube-controller-manager 中哪个功能有助于管理云交互的安全性？", "A": "TokenController", "B": "Node Controller", "C": "Service Controller", "D": "CloudNodeController", "answer": "D", "score": 3}
{"id": 632, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "哪些情况可能导致 kube-controller-manager 无法正常启动？", "A": "领导者选举配置错误", "B": "内存分配不足", "C": "网络连接问题", "D": "以上所有", "answer": "D", "score": 4}
{"id": 633, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "RouteController 在 cloud-controller-manager 中起什么作用？", "A": "管理云服务提供商集成的路由", "B": "处理 Kubernetes 内部路由", "C": "配置外部负载均衡器", "D": "辅助集群内的服务发现", "answer": "A", "score": 3}
{"id": 634, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 环境中，从 kube-dns 升级到 CoreDNS 的步骤有哪些？", "A": "克隆 CoreDNS 仓库并应用更改", "B": "直接修改 kube-dns 部署", "C": "在 Kubernetes UI 中更新 DNS 配置", "D": "以上都不是", "answer": "A", "score": 4}
{"id": 635, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 管理员如何使用 CoreDNS 自定义集群服务的 DNS 解析？", "A": "修改 CoreDNS ConfigMap 以指定 stub 域和上游 DNS 服务器", "B": "调整 kubelet 服务参数", "C": "更新主机的 /etc/hosts 文件", "D": "以上都不是", "answer": "A", "score": 5}
{"id": 636, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "CoreDNS 支持哪些 Kubernetes 服务和 Pod 的 DNS 记录类型？", "A": "A 记录用于服务和 Pod IP，SRV 记录用于服务端口", "B": "CNAME 记录用于服务，TXT 记录用于 Pod", "C": "MX 记录用于服务，A 记录用于 Pod", "D": "SRV 记录用于服务，CNAME 记录用于 Pod", "answer": "A", "score": 5}
{"id": 637, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "kube-dns 部署中的 sidecar 容器的主要功能是什么？", "A": "提供 DNS 指标和健康检查", "B": "管理集群服务的 DNS 解析", "C": "作为主要的 DNS 解析器", "D": "与外部 DNS 服务器同步", "answer": "A", "score": 4}
{"id": 638, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "kube-proxy 如何使用 iptables 管理服务流量负载均衡在 Kubernetes 集群中？", "A": "通过创建匹配服务 IP 和端口的 iptables 规则，将流量导向 pod 端点。", "B": "通过在节点级别拦截流量并直接重定向到正确的 pod。", "C": "通过与云提供商协商，在节点之间均匀分配流量。", "D": "通过动态修改 pod IP 地址来分配流量。", "answer": "A", "score": 4}
{"id": 639, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在 Linux 节点上使用 kube-proxy 的 IPVS 模式所需的内核模块是什么？", "A": "nf_conntrack_ipv4, ip_vs, ip_vs_rr, ip_vs_wrr, ip_vs_sh", "B": "kube-proxy, kubernetes, docker-engine", "C": "tcp_ip, udp_ip, http_module", "D": "modprobe, lsmod, grep", "answer": "A", "score": 4}
{"id": 640, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用特定的 kubeconfig、集群 CIDR 和 iptables 代理模式启动 kube-proxy 的命令是什么？", "A": "kube-proxy --kubeconfig=/var/lib/kubelet/kubeconfig --cluster-cidr=10.240.0.0/12 --proxy-mode=iptables", "B": "kube-proxy --config=/etc/kubernetes/kube-proxy.yaml", "C": "kubectl apply -f kube-proxy-config.yaml", "D": "systemctl start kube-proxy", "answer": "A", "score": 5}
{"id": 641, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "kube-proxy 的 IPVS 模式中 KUBE-LOAD-BALANCER-SOURCE-CIDR ipset 的目的是什么？", "A": "接受到负载均衡器的包，`externalTrafficPolicy=local`", "B": "将包伪装到外部 IP", "C": "根据指定的负载均衡器源范围过滤包", "D": "根据负载均衡器入口 IP、端口和源 CIDR 过滤包", "answer": "D", "score": 4}
{"id": 642, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "使用 kubeadm 配置网络插件的命令是什么？", "A": "kubeadm init --pod-network-cidr", "B": "kubectl apply -f network-plugin", "C": "kubeadm config images pull", "D": "kubeadm upgrade apply", "answer": "A", "score": 4}
{"id": 643, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在没有指定网络 CIDR 的情况下使用 'kubeadm init' 设置 Kubernetes master 可能出现的问题是什么？", "A": "API 服务器可能不会启动", "B": "集群节点可能无法通信", "C": "入口规则将失败", "D": "没有问题，这不是必需参数", "answer": "B", "score": 3}
{"id": 644, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用 kubeadm 重置 Kubernetes 集群到默认设置？", "A": "kubectl reset all", "B": "kubeadm reset", "C": "kubeadm delete all", "D": "kubectl clear", "answer": "B", "score": 4}
{"id": 645, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在检索 pod 状态时将输出格式设置为 JSON 的正确命令是什么？", "A": "kubectl get pod <pod-name> --output=json", "B": "kubectl get pod <pod-name> -o json", "C": "kubectl status pod <pod-name> -json", "D": "kubectl show pod <pod-name> --format=json", "answer": "B", "score": 4}
{"id": 646, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何配置 kubectl 使用特定的 Kubernetes 集群和用户凭据？", "A": "kubectl set-cluster config", "B": "kubectl config set-cluster", "C": "kubectl config use-cluster", "D": "kubectl cluster set", "answer": "B", "score": 4}
{"id": 647, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "什么命令允许您验证是否可以在 Kubernetes 中执行特定操作，例如创建 pods？", "A": "kubectl can-i create pods", "B": "kubectl auth can-i create pods", "C": "kubectl permission check pods", "D": "kubectl verify create pods", "answer": "B", "score": 5}
{"id": 648, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何配置 kubelet 不在 API 服务器上注册自己？", "A": "使用 --anonymous-auth=true 标志", "B": "使用 --register-node=false 标志", "C": "禁用 kubelet 服务", "D": "删除 kubelet 配置文件", "answer": "B", "score": 3}
{"id": 649, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "与 kubelet 集成的 cAdvisor 的目的是什么？", "A": "提供网络安全", "B": "管理镜像版本", "C": "监控节点和容器的资源使用情况", "D": "有效地调度 pods", "answer": "C", "score": 4}
{"id": 650, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "kubelet 的 Pod 管理角色的主要功能是什么？", "A": "在 API 服务器上注册节点详细信息", "B": "在集群间调度 pods", "C": "确保 pods 按 PodSpecs 中定义的运行", "D": "在多个节点之间平衡负载", "answer": "C", "score": 4}
{"id": 651, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "kubelet 的驱逐策略有助于防止什么？", "A": "网络拥堵", "B": "资源耗尽", "C": "未经授权的访问", "D": "数据损坏", "answer": "B", "score": 4}
{"id": 652, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 集群中调度器的主要角色是什么？", "A": "为 pods 分配存储", "B": "维护集群状态", "C": "在合适的节点上调度 pods", "D": "管理网络策略", "answer": "C", "score": 3}
{"id": 653, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种 Kubernetes 资源用于管理集群内服务的外部访问？", "A": "Ingress", "B": "Service", "C": "ConfigMap", "D": "Endpoint", "answer": "A", "score": 4}
{"id": 654, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在 Kubernetes 中，nodeSelector 的作用是什么？", "A": "它指定 Pod 运行在具有特定标签的节点上", "B": "它为 Pod 存储分配特定节点", "C": "它基于节点性能调度 Pod", "D": "它自动将 Pod 分配给负载最小的节点", "answer": "A", "score": 3}
{"id": 655, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在 Kubernetes 中，什么是 nodeAffinity？", "A": "确保 Pod 被调度到具有特定标签并匹配某些条件的节点上的规则", "B": "用于节点通信的网络协议", "C": "管理节点特定卷的存储类", "D": "限制节点访问的安全功能", "answer": "A", "score": 4}
{"id": 656, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes 中，什么是 taints 和 tolerations？", "A": "确保 Pod 被调度到适当节点的机制", "B": "加密 Pod 数据的协议", "C": "节点身份验证的方法", "D": "节点的防火墙设置", "answer": "A", "score": 4}
{"id": 657, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "使用哪个命令为具有特定 CPU 利用率阈值的部署创建自动扩展器？", "A": "kubectl create hpa", "B": "kubectl set autoscaler", "C": "kubectl autoscale deployment", "D": "kubectl apply -f autoscaler.yml", "answer": "C", "score": 3}
{"id": 658, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "与 Horizontal Pod Autoscaler 一起使用的工具，可以监控和分析 Pod 性能指标的是哪一个？", "A": "Docker Swarm", "B": "Prometheus", "C": "Apache Mesos", "D": "Nagios", "answer": "B", "score": 3}
{"id": 659, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "“kubectl get hpa” 命令如何帮助管理自动扩展器的性能？", "A": "它配置新的自动扩展器", "B": "它删除现有的自动扩展器", "C": "它显示自动扩展器的当前状态，包括当前和目标指标", "D": "它重新启动自动扩展器服务", "answer": "C", "score": 3}
{"id": 660, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "根据 autoscaling API 版本 v2beta1，支持基于内存和自定义指标的自动扩展所需的最低 Kubernetes 版本是什么？", "A": "v1.5", "B": "v1.6", "C": "v1.7", "D": "v1.8", "answer": "B", "score": 3}
{"id": 661, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "控制管理器使用 HPA 的自定义 REST 客户端进行指标配置需要哪些配置？", "A": "--horizontal-pod-autoscaler-use-rest-clients 和 --master 或 --kubeconfig", "B": "--autoscale 和 --cpu-percent", "C": "--scale 和 --replicas", "D": "--deploy 和 --pod-autoscale", "answer": "A", "score": 4}
{"id": 662, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "用于显示 Kubernetes 中 ConfigMap 内容的命令是什么？", "A": "kubectl describe configmap my-config", "B": "kubectl get configmap my-config -o yaml", "C": "kubectl configmap show my-config", "D": "kubectl show configmap my-config", "answer": "B", "score": 3}
{"id": 663, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "以下哪种方式不是在 Kubernetes 中将 ConfigMap 用于 Pod 的有效方法？", "A": "作为环境变量", "B": "作为命令行参数", "C": "挂载为卷", "D": "作为节点选择器", "answer": "D", "score": 5}
{"id": 664, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 中使 ConfigMap 不可变的主要好处是什么？", "A": "通过减少 kube-apiserver 负载来提高性能", "B": "自动更新所有 Pod 中的 ConfigMap", "C": "启用使用 ConfigMap 的 Pod 的自动扩展", "D": "允许对 ConfigMap 进行动态更改", "answer": "A", "score": 5}
{"id": 665, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "使用不可变 ConfigMap 如何影响集群稳定性？", "A": "通过防止意外更新增加稳定性", "B": "通过限制灵活性降低稳定性", "C": "对稳定性没有影响", "D": "通过增加 kube-apiserver 负载降低稳定性", "answer": "A", "score": 4}
{"id": 666, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何在 Kubernetes 中创建一个 CronJob 以每分钟运行一次执行命令的容器？", "A": "kubectl run hello --schedule=\"*/1 * * * *\" --restart=OnFailure --image=busybox -- /bin/sh -c \"date; echo Hello from the Kubernetes cluster\"", "B": "kubectl create -f cronjob.yaml", "C": "kubectl apply -f cronjob.yaml", "D": "kubectl start cronjob hello", "answer": "A", "score": 4}
{"id": 667, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Kubernetes CRD 中，finalizer 的目的是什么及其功能如何？", "A": "它有助于对 CRD 的请求进行负载均衡。", "B": "它用于记录 CRD 的状态更改。", "C": "它允许控制 CRD 资源的删除。", "D": "它根据负载自动扩展 CRD 实例。", "answer": "C", "score": 4}
{"id": 668, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "验证在 Kubernetes CRD 的安全性中起什么作用？", "A": "它加密存储在 CRD 中的数据。", "B": "它确保 CRD 实例符合指定的模式，防止不良数据。", "C": "它对访问 CRD 的用户进行身份验证。", "D": "它将 CRD 操作隔离到特定命名空间。", "answer": "B", "score": 4}
{"id": 669, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "如何在 Kubernetes 中扩展由 CRD 定义的自定义资源？", "A": "调整 CRD 规范中的 'replicas' 字段。", "B": "在 CRD 上使用水平 Pod 自动缩放器。", "C": "修改 CRD 中嵌入的 Pod 模板。", "D": "增加 Kubernetes 集群中的节点数量。", "answer": "A", "score": 3}
{"id": 670, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪种 DaemonSet 应用程序通常用于 Kubernetes 中的日志收集？", "A": "Prometheus Node Exporter", "B": "fluentd", "C": "kube-proxy", "D": "etcd", "answer": "B", "score": 4}
{"id": 671, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "RollingUpdate 策略如何使 DaemonSet 的更新过程受益？", "A": "减少更新期间的资源使用", "B": "允许手动删除 Pod 以触发更新", "C": "在不影响正常运行时间的情况下自动替换旧的 Pod 为新的 Pod", "D": "仅在系统空闲时更新 Pod", "answer": "C", "score": 4}
{"id": 672, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用 kubectl 回滚 DaemonSet 到先前版本需要什么？", "A": "所有可用 Pod 的列表", "B": "所需回滚版本的修订号", "C": "节点的总数", "D": "当前 CPU 使用率", "answer": "B", "score": 4}
{"id": 673, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 的哪个功能允许 DaemonSet 忽略节点的 'unschedulable' 状态？", "A": "nodeAffinity", "B": "nodeSelector", "C": "Taints and tolerations", "D": "Pod priority and preemption", "answer": "C", "score": 3}
{"id": 674, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在为 DaemonSet 设置 nodeAffinity 时，哪个属性决定了调度期间必须满足的强制条件？", "A": "preferredDuringSchedulingIgnoredDuringExecution", "B": "requiredDuringSchedulingIgnoredDuringExecution", "C": "nodeSelector", "D": "matchExpressions", "answer": "B", "score": 4}
{"id": 675, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "nodeSelector 如何在部署 DaemonSets 时提高安全性？", "A": "通过将部署限制在具有特定安全凭证的节点上", "B": "通过在节点之间加密数据", "C": "通过自动更新安全补丁", "D": "通过监控节点流量", "answer": "A", "score": 3}
{"id": 676, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "Kubernetes 中哪个 Job 模式最适合需要多次尝试才能成功完成的任务？", "A": "非并行 Job", "B": "固定完成次数 Job", "C": "具有工作队列的并行 Job", "D": "固定完成次数的并行 Job", "answer": "D", "score": 5}
{"id": 677, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes Job 中设置 `.spec.parallelism` 如何影响 Job 的执行？", "A": "它指定可以并行运行的 Pod 数量。", "B": "它确定 Job 必须完成的次数。", "C": "它设置 Job 的最长生存时间。", "D": "它限制网络带宽使用。", "answer": "A", "score": 4}
{"id": 678, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes Job 规范中将 `restartPolicy` 设置为 Never 有什么影响？", "A": "该 Job 将无限期重启直到成功。", "B": "在任务失败后不会创建新的 Pod 来重试该任务。", "C": "该 Job 完成后将自动删除其所有 Pod。", "D": "所有 Pod 将无视其他设置并行运行。", "answer": "B", "score": 5}
{"id": 679, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes 的哪个功能允许在 Job 完成或失败后自动清理 Pod？", "A": "TTL Controller", "B": "Horizontal Pod Autoscaler", "C": "Cluster Autoscaler", "D": "Pod Disruption Budget", "answer": "A", "score": 4}
{"id": 680, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "关于 Kubernetes 中本地卷的版本兼容性和功能，以下哪项陈述是正确的？", "A": "本地卷从 Kubernetes v1.7 开始支持，并在 v1.10 升级为 beta。", "B": "在 v1.10 之后的 Kubernetes 版本中，本地卷已被弃用。", "C": "本地卷从 Kubernetes v1.7 开始支持动态卷配置。", "D": "在所有 Kubernetes 版本中，本地卷都需要手动创建持久卷。", "answer": "A", "score": 3}
{"id": 681, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "如何为本地卷配置节点亲和性以确保其调度到特定节点？", "A": "通过在持久卷规范中的 nodeAffinity 下设置 nodeSelectorTerms。", "B": "本地卷的节点亲和性由 Kubernetes 自动管理，无需配置。", "C": "节点亲和性直接在 Pod 规范中配置。", "D": "本地卷不支持节点亲和性。", "answer": "A", "score": 4}
{"id": 682, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "以下哪些资源通常不包含在 Kubernetes 命名空间内？", "A": "Pods", "B": "Services", "C": "Nodes", "D": "Deployments", "answer": "C", "score": 4}
{"id": 683, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何使用 kubectl 在 Kubernetes 中创建一个新的命名空间？", "A": "kubectl create new-namespace", "B": "kubectl start namespace", "C": "kubectl create namespace new-namespace", "D": "kubectl setup namespace", "answer": "C", "score": 3}
{"id": 684, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "当一个命名空间被删除时，该命名空间内的资源会发生什么？", "A": "资源被隔离以供审查", "B": "资源会被自动删除", "C": "资源会被移动到默认命名空间", "D": "资源会保留但变得不活跃", "answer": "B", "score": 3}
{"id": 685, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "`kube-system` 命名空间的意义是什么？", "A": "用于自定义用户部署", "B": "用于存放 Kubernetes 系统服务", "C": "保留供将来使用", "D": "用于测试新功能", "answer": "B", "score": 3}
{"id": 686, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "使用哪个命令向节点添加污点以防止任何新 pod 被调度到该节点？", "A": "kubectl taint nodes node1 key1=value1:NoSchedule", "B": "kubectl label nodes node1 key1=value1", "C": "kubectl annotate nodes node1 key1=value1", "D": "kubectl create pod node1 key1=value1", "answer": "A", "score": 3}
{"id": 687, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "哪个 Kubernetes 组件负责在节点启动时将其注册到集群中？", "A": "kube-scheduler", "B": "kube-apiserver", "C": "kube-proxy", "D": "kubelet", "answer": "D", "score": 4}
{"id": 688, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "Kubernetes 如何在不影响其上运行的 pod 的情况下处理节点维护？", "A": "通过排空节点", "B": "通过隔离节点", "C": "通过应用污点", "D": "通过删除节点", "answer": "B", "score": 4}
{"id": 689, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "如何更改 Kubernetes 集群中的默认 StorageClass？", "A": "删除现有的默认 StorageClass", "B": "重新配置现有的 StorageClass", "C": "使用注释将另一个 StorageClass 标记为默认", "D": "StorageClasses 一旦设置就无法更改", "answer": "C", "score": 3}
{"id": 690, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "PersistentVolumeClaim 在 Kubernetes 中的主要功能是什么？", "A": "创建一个新的 Persistent Volume", "B": "删除一个现有的 Persistent Volume", "C": "请求存储资源，然后绑定到 Persistent Volumes", "D": "监控 Persistent Volumes 的使用情况", "answer": "C", "score": 3}
{"id": 691, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何使用 YAML 文件在 Kubernetes 中应用 Persistent Volume？", "A": "使用 kubectl apply 命令", "B": "使用 kubectl create 命令", "C": "使用 kubectl set 命令", "D": "Persistent Volumes 无法使用 YAML 应用", "answer": "A", "score": 3}
{"id": 692, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何在 Kubernetes 中启用 PodPreset 功能？", "A": "kube-apiserver --runtime-config=settings.k8s.io/v1=true", "B": "kube-apiserver --runtime-config=settings.k8s.io/v1alpha1=true", "C": "kubectl enable PodPreset", "D": "--enable-admission-plugins=PodPreset", "answer": "B", "score": 4}
{"id": 693, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 PodPreset 中配置卷的正确方法是什么？", "A": "直接在 Pod 规范中指定", "B": "在 PodPreset 元数据中指定", "C": "在 PodPreset 规范中的 volumes 下指定", "D": "定义一个 PersistentVolume 并引用它", "answer": "C", "score": 4}
{"id": 694, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "哪个 Kubernetes 组件负责修改 Pod 以包含 PodPreset 配置？", "A": "kubelet", "B": "kube-scheduler", "C": "API server", "D": "Admission controller", "answer": "D", "score": 4}
{"id": 695, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Pod 标签中必须包含什么才能匹配 PodPreset 的选择器？", "A": "PodPreset 规范中的 matchLabels", "B": "Pod 元数据中的 labels", "C": "Pod 元数据中的 annotations", "D": "PodPreset 中存在的所有标签", "answer": "A", "score": 3}
{"id": 696, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何防止 Pod 被任何 PodPreset 修改？", "A": "用 podpreset.admission.kubernetes.io/exclude: \"true\" 注释 Pod", "B": "删除 PodPreset", "C": "禁用 PodPreset 功能", "D": "将 Pod 的标签设置为空", "answer": "A", "score": 3}
{"id": 697, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用 LimitRange 为命名空间指定 CPU 和内存限制的正确方法是什么？", "A": "定义 LimitRange 并在规范下包含资源限制", "B": "直接将 CPU 和内存限制添加到命名空间对象", "C": "为每个 Pod 单独配置所需的限制", "D": "使用注释在命名空间中指定限制", "answer": "A", "score": 4}
{"id": 698, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "为命名空间中的persistentvolumeclaims设置ResourceQuota的影响是什么？", "A": "限制可以创建的PVC数量", "B": "自动分配存储到每个PVC", "C": "降低云中的存储成本", "D": "自动增加存储容量", "answer": "A", "score": 3}
{"id": 699, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "你会使用哪种ResourceQuota设置来高效管理命名空间中所有Pod的CPU和内存资源？", "A": "每个Pod的requests.cpu和requests.memory", "B": "每个容器的limits.cpu和limits.memory", "C": "所有Pod的CPU和内存总限制", "D": "无配额，通过调度策略管理", "answer": "C", "score": 4}
{"id": 700, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种Kubernetes资源用于管理集群内服务的外部访问？", "A": "Service", "B": "Ingress", "C": "NetworkPolicy", "D": "Pod", "answer": "B", "score": 4}
{"id": 701, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes Secret的用途是什么？", "A": "安全地存储敏感信息", "B": "记录应用程序数据", "C": "监控资源使用情况", "D": "自动扩展应用程序", "answer": "A", "score": 4}
{"id": 702, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes中Persistent Volume的作用是什么？", "A": "为Pod提供临时存储", "B": "存储配置数据", "C": "在Pod重启间提供持久存储", "D": "在Pods之间进行负载均衡", "answer": "C", "score": 4}
{"id": 703, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "配置Kubernetes集群时权限不足的常见问题是什么？", "A": "网络流量增加", "B": "存储容量减少", "C": "Pod部署失败", "D": "安全漏洞", "answer": "C", "score": 3}
{"id": 704, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个kubectl命令用于查看Kubernetes集群中的所有Pod？", "A": "kubectl get all", "B": "kubectl get pods", "C": "kubectl view pods", "D": "kubectl list pods", "answer": "B", "score": 3}
{"id": 705, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪种工具通常用于监控Kubernetes环境中的资源使用情况？", "A": "Kibana", "B": "Prometheus", "C": "Docker", "D": "Ansible", "answer": "B", "score": 4}
{"id": 706, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "哪种Kubernetes功能确保即使多个Pods失败，应用程序仍然可用？", "A": "StatefulSet", "B": "Horizontal Pod Autoscaler", "C": "ReplicaSet", "D": "Service Mesh", "answer": "C", "score": 4}
{"id": 707, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "ConfigMap如何有利于Kubernetes中的应用程序部署？", "A": "它在特定节点上调度Pods", "B": "它自动扩展应用程序", "C": "它提供了一种注入配置数据的机制", "D": "它增强了应用程序的安全性", "answer": "C", "score": 4}
{"id": 708, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "管理ReplicaSet推荐使用哪种Kubernetes对象？", "A": "StatefulSet", "B": "DaemonSet", "C": "Deployment", "D": "Pod", "answer": "C", "score": 4}
{"id": 709, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "以下哪个功能由Deployments支持但不由ReplicaSets支持？", "A": "缩放到零", "B": "版本跟踪", "C": "自定义选择器", "D": "自动替换Pod", "answer": "B", "score": 4}
{"id": 710, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "当使用Service Account时，Kubernetes如何处理ImagePullSecrets自动分配给Pods？", "A": "Pods必须在其配置中指定ImagePullSecrets。", "B": "除非被覆盖，否则Kubernetes会自动将Service Account中的ImagePullSecrets添加到Pod中。", "C": "只有在管理员明确定义的情况下才会添加ImagePullSecrets。", "D": "Service Accounts不与ImagePullSecrets交互。", "answer": "B", "score": 4}
{"id": 711, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Token Controller在管理Service Accounts中的作用是什么？", "A": "它创建并分配RBAC角色给Service Accounts。", "B": "它监控Service Account的创建并为其分配Secrets。", "C": "它处理Service Accounts的网络和策略设置。", "D": "它为用户帐户生成和轮换API令牌。", "answer": "B", "score": 4}
{"id": 712, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes v1.24中关于Service Accounts引入了哪些变化？", "A": "Service Accounts现在需要手动创建Secrets。", "B": "除非启用特定的controller-manager功能，否则Service Accounts不能再创建Secrets。", "C": "删除Service Accounts时会自动删除关联的Secrets。", "D": "所有Service Accounts都迁移到新的API版本。", "answer": "B", "score": 5}
{"id": 713, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如何配置授权以使服务帐户访问特定的 Kubernetes 资源？", "A": "定义允许服务帐户特定访问的角色和角色绑定。", "B": "服务帐户根据其命名空间自动拥有访问权限。", "C": "必须使用网络策略来限制服务帐户访问。", "D": "服务帐户不需要额外配置即可访问资源。", "answer": "A", "score": 4}
{"id": 714, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在 Kubernetes 中，StatefulSet 的主要目的是什么？", "A": "为每个 pod 提供唯一标识符。", "B": "保持稳定的网络环境。", "C": "确保每个 pod 在重新调度后访问相同的存储卷。", "D": "提高 pod 的无状态操作。", "answer": "C", "score": 4}
{"id": 715, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "定义 StatefulSet 中 pod 的 DNS 域名需要哪个 Kubernetes 资源？", "A": "Deployment", "B": "Headless Service", "C": "ConfigMap", "D": "Namespace", "answer": "B", "score": 4}
{"id": 716, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "RollingUpdate 策略如何有利于 StatefulSet 的更新过程？", "A": "同时替换所有 pod 以最小化停机时间。", "B": "在创建新 pod 之前先移除旧的 pod。", "C": "按相反顺序更新 pod，在旧 pod 准备好时创建新 pod。", "D": "保持相同数量的 pod 但更新其配置。", "answer": "C", "score": 5}
{"id": 717, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "StatefulSet 规范中的 `serviceName` 字段的作用是什么？", "A": "指定管理负载均衡的服务。", "B": "命名用于 DNS 解析和网络身份的 Headless Service。", "C": "定义入口控制器的外部服务名称。", "D": "配置 pod 的内部通信策略。", "answer": "B", "score": 4}
{"id": 718, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "当 pod 被删除时，emptyDir 卷如何表现？", "A": "数据暂时保存并在 pod 重新创建后恢复。", "B": "emptyDir 中的数据被永久删除。", "C": "数据会持续保存直到手动删除。", "D": "数据会自动备份到另一个节点。", "answer": "B", "score": 3}
{"id": 719, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 中 hostPath 卷类型的主要功能是什么？", "A": "创建 pod 数据的备份。", "B": "独立于 pod 永久存储数据。", "C": "在不同 pod 中的容器之间共享数据。", "D": "将主节点文件系统中的文件或目录挂载到 pod 中。", "answer": "D", "score": 4}
{"id": 720, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "gcePersistentDisk 卷类型为在 GCE 中运行的容器提供了哪些功能？", "A": "仅允许读取操作。", "B": "将现有的 GCE 持久磁盘挂载到 pod 中。", "C": "自动为每个 pod 创建并附加一个新的 GCE 磁盘。", "D": "提供在 pod 终止后被删除的临时存储。", "answer": "B", "score": 4}
{"id": 721, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 如何支持在 pod 中使用 NFS 卷？", "A": "为每个 pod 创建一个新的 NFS 服务器。", "B": "只允许对 NFS 卷进行读取操作。", "C": "将现有的 NFS 共享挂载到 pod 中以实现持久存储。", "D": "NFS 不能与 Kubernetes 一起使用。", "answer": "C", "score": 4}
{"id": 722, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 卷如何将 git 仓库集成到 pod 的文件系统中？", "A": "将仓库克隆到节点的文件系统中。", "B": "定期将更新拉取到 pod 中。", "C": "在 pod 启动时将 git 仓库拉取到卷中。", "D": "Kubernetes 不支持 git 仓库集成。", "answer": "C", "score": 3}
{"id": 723, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes pod 中使用 subPath 挂载卷有什么好处？", "A": "允许在多个容器之间共享卷以实现不同用途。", "B": "增加卷的存储容量。", "C": "自动将数据同步到备份位置。", "D": "通过加密保护数据。", "answer": "A", "score": 4}
{"id": 724, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "使用 Kubernetes 中的 FlexVolume 驱动程序时应考虑什么？", "A": "需要重新启动 Kubernetes 以识别新驱动程序。", "B": "自动处理驱动程序更新。", "C": "FlexVolume 支持存储的动态供应。", "D": "必须手动在主机上安装驱动程序，并且必须支持所需的操作，如附加/分离。", "answer": "D", "score": 4}
{"id": 725, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Projected 卷类型如何增强 Kubernetes pod 的功能？", "A": "允许多个卷投射到 pod 中的同一共享目录。", "B": "提高读写操作的性能。", "C": "根据使用情况自动扩展存储。", "D": "提供 pod 数据的灾难恢复解决方案。", "answer": "A", "score": 4}
{"id": 726, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何使用 frakti 为 Kubernetes 集群配置 CNI 网络？", "A": "使用默认的 CNI 配置，无需修改。", "B": "配置 CNI 桥接网络并设置 IP 伪装。", "C": "使用主机本地 IPAM，不指定子网。", "D": "仅配置 CNI 回环类型。", "answer": "B", "score": 4}
{"id": 727, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "使用哪个命令来安装 frakti 并将其设置为 Kubernetes 的容器运行时？", "A": "wget -O frakti https://github.com/kubernetes/frakti/releases/latest/download/frakti", "B": "apt-get install frakti", "C": "curl -sSL https://github.com/kubernetes/frakti/releases/download/v0.1/frakti -o /usr/bin/frakti && chmod +x /usr/bin/frakti", "D": "npm install frakti", "answer": "C", "score": 4}
{"id": 728, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "如何在 Kubernetes 集群中启用主节点上的 Pod 调度？", "A": "从所有节点中删除 master taint。", "B": "修改 master 的 kubelet 配置以允许调度。", "C": "通过 Kubernetes 仪表板启用 pod 调度。", "D": "使用命令 'kubectl taint nodes --all node-role.kubernetes.io/master:NoSchedule-'", "answer": "D", "score": 4}
{"id": 729, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "使用 kubeadm 设置 Kubernetes 集群时，如果出现版本不匹配错误，应采取什么措施？", "A": "忽略错误并继续设置。", "B": "手动下载并配置正确版本的 Kubernetes 组件。", "C": "使用 --kubernetes-version 标志在 kubeadm init 期间指定正确的版本。", "D": "重新安装整个操作系统并重新开始。", "answer": "C", "score": 3}
{"id": 730, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在运行 Ubuntu 的 Kubernetes 集群上安装和配置 frakti 的正确命令顺序是什么？", "A": "1. 安装 docker, 2. 安装 CNI, 3. 安装 kubelet, 4. 安装 frakti", "B": "1. 安装 frakti, 2. 安装 docker, 3. 安装 CNI, 4. 安装 kubelet", "C": "1. 安装 docker, 2. 安装 frakti, 3. 安装 CNI, 4. 安装 kubelet", "D": "1. 安装 docker, 2. 安装 kubelet, 3. 安装 CNI, 4. 安装 frakti", "answer": "C", "score": 4}
{"id": 731, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "应如何设置 CNI 配置以确保使用 frakti 运行时的 Kubernetes 集群的网络正常运行？", "A": "创建桥接网络并配置 IP 伪装", "B": "仅配置环回网络", "C": "使用 Google Cloud 命令设置主机路由", "D": "使用具有特定子网配置的 host-local IPAM", "answer": "D", "score": 4}
{"id": 732, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "哪条命令可以正确初始化 Kubernetes 集群以使用 frakti 确保高可用性？", "A": "kubeadm init with a specified pod-network-cidr", "B": "在所有工作节点上执行 kubeadm join", "C": "在主节点上启用 pod 调度", "D": "定制 hyperkube 镜像以在集群中使用", "answer": "A", "score": 4}
{"id": 733, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes Pod 的主要功能是什么？", "A": "托管应用程序", "B": "集群管理", "C": "负载均衡", "D": "数据存储", "answer": "A", "score": 2}
{"id": 734, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Kubernetes 环境中主要用于监控资源使用情况的工具是什么？", "A": "Kibana", "B": "Prometheus", "C": "Docker", "D": "Ansible", "answer": "B", "score": 3}
{"id": 735, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "Cluster AutoScaler 如何确保节点扩展操作在不同规模集群的可接受时间内完成？", "A": "通过实时修改节点配置", "B": "预先创建备用节点以备不时之需", "C": "为不同规模的集群使用不同的扩展策略", "D": "在 AutoScaler 配置中设置严格的节点创建时间限制", "answer": "C", "score": 3}
{"id": 736, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "部署 Kubernetes Dashboard 后，如何在 kube-system 命名空间中检查服务状态？", "A": "kubectl -n default get service kubernetes-dashboard", "B": "kubectl -n kube-system get service kubernetes-dashboard", "C": "kubectl get all", "D": "kubectl dashboard status", "answer": "B", "score": 4}
{"id": 737, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 1.7 版之前，使用哪个命令行操作导入证书以通过 HTTPS 访问 Kubernetes Dashboard？", "A": "openssl pkcs12 -export -in apiserver.crt -out kube.p12", "B": "openssl rsa -in apiserver.key -out kube.pem", "C": "openssl pkcs12 -export -in apiserver-kubelet-client.crt -inkey apiserver-kubelet-client.key -out kube.p12", "D": "openssl genrsa -out kube.key 2048", "answer": "C", "score": 5}
{"id": 738, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在导入 kube.p12 证书后，通过浏览器访问 Kubernetes Dashboard 应使用哪个命令？", "A": "curl -sSL -E ./kube.p12:password -k https://nodeIP:6443/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard", "B": "curl -X GET -H \"Authorization: Bearer $(cat kube.p12)\" https://nodeIP:32729", "C": "wget --certificate=kube.p12 https://nodeIP:32729/kubernetes-dashboard", "D": "ssh -i kube.p12 nodeIP 'kubectl proxy'", "answer": "A", "score": 4}
{"id": 739, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "如何在 Kubernetes 中创建一个仅能访问特定命名空间的服务帐户？", "A": "kubectl create sa --namespace=restricted access", "B": "kubectl create rolebinding restricted-access --serviceaccount=restricted:default --namespace=restricted", "C": "cat <<EOF | kubectl apply -f -\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: demo\n  name: default-role\nrules:\n  - apiGroups:\n    - '*'\n    resources:\n    - '*'\n    verbs:\n    - '*'\nEOF\nkubectl create rolebinding default-rolebinding --serviceaccount=demo:default --namespace=demo --role=default-role", "D": "kubectl create serviceaccount restricted --namespace=restricted", "answer": "C", "score": 5}
{"id": 740, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Kubernetes 集群中设置 ELK 堆栈日志记录机制所需的基本组件是什么？", "A": "Elasticsearch, Logstash, Kibana", "B": "Elasticsearch, Fluentd, Kibana", "C": "Elasticsearch, Filebeat, Grafana", "D": "Elasticsearch, Fluentd, Grafana", "answer": "B", "score": 4}
{"id": 741, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "为准备 Fluentd DaemonSet 部署，如何在所有节点上设置标签？", "A": "kubectl set nodes --all fluentd=true", "B": "kubectl label nodes --all beta.kubernetes.io/fluentd-ds-ready=true", "C": "kubectl config nodes --all fluentd=enabled", "D": "kubectl nodes label --all fluentd-ready=true", "answer": "B", "score": 3}
{"id": 742, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何访问部署在 Kubernetes 集群中的 Kibana 服务？", "A": "使用 kubectl cluster-info 命令", "B": "直接通过服务 IP 地址", "C": "使用 kubectl proxy 设置", "D": "以上所有方式", "answer": "D", "score": 4}
{"id": 743, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Kubernetes 系统中查看 Kibana pod 日志的正确过程是什么？", "A": "kubectl -n kube-system view kibana-logs", "B": "kubectl -n kube-system describe pod kibana-logging", "C": "kubectl -n kube-system logs <pod-name> -f", "D": "kubectl get logs kibana-logging -n kube-system", "answer": "C", "score": 3}
{"id": 744, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在部署 metrics-server 之前，哪个命令是启用 kube-apiserver 上 API 聚合的必需命令？", "A": "--requestheader-client-ca-file=/etc/kubernetes/certs/proxy-ca.crt", "B": "--enable-aggregator-routing=true", "C": "--authentication-token-webhook-config-file", "D": "以上全部", "answer": "D", "score": 4}
{"id": 745, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "访问资源使用指标的 Metrics API 需要哪个 Kubernetes 组件？", "A": "metrics-server", "B": "Heapster", "C": "Dashboard", "D": "Kubelet", "answer": "A", "score": 4}
{"id": 746, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "如果 metrics-server Pod 卡在 CrashLoopBackOff 状态，首先应该检查什么以解决问题？", "A": "kube-apiserver 上的 API 聚合设置", "B": "metrics-server 的日志以检查连接问题", "C": "Kubernetes 节点健康状况", "D": "网络策略", "answer": "B", "score": 4}
{"id": 747, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪个 Kubernetes 组件提供集群范围的资源监控并支持持久数据存储到如 InfluxDB 等后端？", "A": "Grafana", "B": "cAdvisor", "C": "Heapster", "D": "Prometheus", "answer": "C", "score": 4}
{"id": 748, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "以下哪个不是 Prometheus 在 Kubernetes 生态系统中的特性？", "A": "内置告警机制", "B": "时间序列数据库功能", "C": "自动水平扩展", "D": "强大的查询语言", "answer": "C", "score": 4}
{"id": 749, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "为了可视化 InfluxDB 的时间序列数据，在 Kubernetes 环境中通常与其配对使用的工具是什么？", "A": "Sysdig", "B": "cAdvisor", "C": "Grafana", "D": "Heapster", "answer": "C", "score": 4}
{"id": 750, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪种工具设计用于监控 Kubernetes 节点本身的硬件、内核或运行时问题，并在出现异常时更新 NodeCondition 或 Node Event？", "A": "Node Problem Detector", "B": "Prometheus", "C": "cAdvisor", "D": "InfluxDB", "answer": "A", "score": 4}
{"id": 751, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "当配置了 Azure 云提供商（`kube-controller-manager --cloud-provider=azure --cloud-config=/etc/kubernetes/azure.json`）时，将自动为 `LoadBalancer` 类型的服务创建 Azure 负载均衡器（ALB）。请注意，目前仅支持 `Basic` SKU ALB，相比 `Standard` ALB 有一些限制。排查 ALB 问题时检查 kube-controller-manager 日志的步骤是什么？", "A": "在 kube-system 命名空间中的 kube-controller-manager pod 上使用 `kubectl logs`", "B": "重启 kube-controller-manager pod", "C": "删除 kube-controller-manager pod 并让其重启", "D": "不使用日志检查 kube-system 命名空间中的 pod 状态", "answer": "A", "score": 4}
{"id": 752, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在 Kubernetes 中，ALB 由 kube-controller-manager 或 cloud-controller-manager 管理。如果 Azure 云提供商出现问题，应首先检查它们的日志。哪个命令用于检查 kube-controller-manager 的最后 100 行日志？", "A": "`kubectl -n kube-system logs $PODNAME --tail 100`", "B": "`kubectl get pods --all-namespaces`", "C": "`kubectl describe pod $PODNAME -n kube-system`", "D": "`kubectl -n kube-system get events`", "answer": "A", "score": 3}
{"id": 753, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "当 LoadBalancer 服务卡在 `<pending>` 状态时，与 Azure 云提供商配置相关的常见原因是什么？", "A": "服务的命名空间不正确", "B": "负载均衡器 SKU 不支持", "C": "Azure 云配置中的权限不足", "D": "服务类型未设置为 LoadBalancer", "answer": "C", "score": 4}
{"id": 754, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果 Kubernetes 服务的外部 IP 无法访问，并且服务配置正确，可能与 Azure 负载均衡器健康探针相关的原因是什么？", "A": "服务类型不正确", "B": "防火墙阻止了 LoadBalancer", "C": "由于容器端口配置错误，健康探针失败", "D": "所有后端都健康", "answer": "C", "score": 4}
{"id": 755, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如何解决 AzureDisk 在将挂载了 azure 磁盘的 pod 从一个节点调度到另一个节点时由于磁盘未及时释放而产生的附加错误？", "A": "增加磁盘分离的超时时间。", "B": "使用具有更快分离时间的不同存储类。", "C": "在 DetachDisk 操作之前实现锁机制。", "D": "减少每个节点上的 pod 数量以避免同时分离。", "answer": "C", "score": 4}
{"id": 756, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "在 Kubernetes 节点上的附加/分离操作后 AzureDisk 不可用时，可以应用哪些缓解策略？", "A": "重启节点并重试操作。", "B": "将 AzureDisk StorageClass 的缓存模式更改为 None。", "C": "增加 AzureDisk IOPS 限制。", "D": "使用不同的存储账户类型的 AzureDisk。", "answer": "B", "score": 5}
{"id": 757, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "AzureDisk 附加速度慢的原因可能是什么，如何在 Kubernetes 中加快这个过程？", "A": "Azure API 效率低下，通过升级 Kubernetes 版本改进。", "B": "网络拥塞，为存储流量使用专用网络。", "C": "磁盘格式问题，预先格式化磁盘。", "D": "节点负载高，减少节点负载。", "answer": "A", "score": 4}
{"id": 758, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在部署在Azure德国云中的Kubernetes中使用AzureDisk有哪些限制？", "A": "仅支持旧版本的Kubernetes。", "B": "支持所有Kubernetes版本。", "C": "从Kubernetes v1.7.9、v1.8.3及更新版本开始支持。", "D": "任何Kubernetes版本都没有限制。", "answer": "C", "score": 5}
{"id": 759, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如何解决在Kubernetes中使用AzureDisk时由于设备路径格式不正确导致的`MountVolume.WaitForAttach`失败？", "A": "在Kubernetes AzureDisk驱动中纠正预期的设备路径格式。", "B": "重试挂载操作直到成功。", "C": "使用指定正确设备路径的不同存储类。", "D": "更新到解决此问题的Kubernetes版本。", "answer": "D", "score": 4}
{"id": 760, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "在重启Windows节点后，为什么使用AzureFile的Pods可能无法启动，以及如何缓解此问题？", "A": "由于丢失了`New-SmbGlobalMapping` cmdlet帐户名/密钥，通过重新创建Pod来缓解", "B": "因为节点配置更改，通过更新节点设置来缓解", "C": "由于网络问题，通过检查网络连接来缓解", "D": "由于不兼容的Windows版本，通过升级操作系统来缓解", "answer": "A", "score": 5}
{"id": 761, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "在Kubernetes v1.7.10或更早版本中使用AzureFile时，什么可能导致`ProvisioningFailed`错误，以及推荐的解决方案是什么？", "A": "AzureFile名称太长，升级集群到v1.7.11或更高版本", "B": "存储容量不足，增加存储限制", "C": "存储帐户凭证不正确，更新凭证", "D": "网络连接问题，检查网络设置", "answer": "A", "score": 4}
{"id": 762, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如果启用了RBAC的集群在使用AzureFile时遇到`ProvisioningFailed`错误，可能的原因是什么以及如何解决？", "A": "创建机密的权限不足，授权`persistent-volume-binder`访问Secret资源", "B": "防火墙阻止了供应请求，调整防火墙设置", "C": "RBAC设置损坏，重置RBAC配置", "D": "服务帐户被删除，重新创建服务帐户", "answer": "A", "score": 5}
{"id": 763, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "为什么AzureFile在Kubernetes v1.7.11之前的版本中不支持Azure德国云，以及哪些版本支持它？", "A": "由于特定区域合规性问题得到解决，支持v1.7.11+和v1.8+版本", "B": "由于德国没有数据中心，不支持，使用其他地区", "C": "所有版本均支持，没有版本限制", "D": "由于API不兼容，不支持，更新API设置", "answer": "A", "score": 4}
{"id": 764, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在使用Azure作为云提供商时，为什么即使Kubelet已启动，节点也可能不会列在Kubernetes中？", "A": "由于配置错误，Kubelet未能初始化节点", "B": "Azure不支持Kubernetes", "C": "Kubernetes版本与Azure不兼容", "D": "节点被手动从Kubernetes中移除", "answer": "A", "score": 4}
{"id": 765, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在Azure上配置的Kubernetes集群中，什么可能导致持久卷无法附加到虚拟机？", "A": "Azure虚拟机不支持挂载持久卷", "B": "网络配置冲突", "C": "持久卷配额已超出", "D": "Kubernetes配置文件不正确", "answer": "C", "score": 4}
{"id": 766, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如果在AWS上托管的Kubernetes集群中操作网络路由时发现AuthorizationFailure，应该如何处理？", "A": "检查AWS IAM角色和策略", "B": "重启Kubernetes集群", "C": "忽略错误，因为它会自行解决", "D": "升级到最新版本的Kubernetes", "answer": "A", "score": 4}
{"id": 767, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "为什么在GCE上的Kubernetes设置中，LoadBalancer服务可能不会分配公共IP？", "A": "LoadBalancer配置不支持公共IP", "B": "GCE的公共IP配额已超出", "C": "GCE不支持公共IP", "D": "网络配置设置为私有", "answer": "B", "score": 4}
{"id": 768, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "哪个命令可以用于排除Kubernetes集群中的DNS解析问题？", "A": "kubectl exec -it", "B": "kubectl get services", "C": "kubectl logs", "D": "kubectl describe pod", "answer": "D", "score": 3}
{"id": 769, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Kubernetes如何有效管理Pod之间的资源分配？", "A": "轮询调度", "B": "手动分配", "C": "CPU亲和力", "D": "资源请求和限制", "answer": "D", "score": 4}
{"id": 770, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在Kubernetes中管理对集群内服务的外部访问使用哪种资源？", "A": "Ingress", "B": "ClusterIP", "C": "NodePort", "D": "Headless service", "answer": "A", "score": 3}
{"id": 771, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪种Kubernetes资源对于定义对一组资源允许的操作至关重要？", "A": "安全组", "B": "角色", "C": "角色绑定", "D": "网络策略", "answer": "B", "score": 3}
{"id": 772, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪种类型的Kubernetes对象对于管理有状态的应用程序至关重要？", "A": "DaemonSet", "B": "StatefulSet", "C": "Deployment", "D": "ReplicaSet", "answer": "B", "score": 4}
{"id": 773, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Kubernetes 中主要用于收集和监控集群日志的工具是哪个？", "A": "Splunk", "B": "Prometheus", "C": "Elasticsearch", "D": "Datadog", "answer": "C", "score": 3}
{"id": 774, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes 的命令行工具叫什么，可以用于管理集群资源？", "A": "docker", "B": "kubectl", "C": "kubelet", "D": "swarm", "answer": "B", "score": 2}
{"id": 775, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在 Kubernetes 中通常使用哪种策略来确保服务的高可用性？", "A": "轮询 DNS", "B": "水平 pod 自动扩展", "C": "多集群设置", "D": "计划备份", "answer": "C", "score": 4}
{"id": 776, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "配置 Kubernetes 集群时导致服务中断的常见问题是什么？", "A": "资源过度配置", "B": "Kubernetes 版本不匹配", "C": "防火墙规则错误", "D": "以上所有", "answer": "D", "score": 4}
{"id": 777, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "当 pod 卡在 ContainerCreating 状态时，如何解决 IP 分配问题？", "A": "检查 IPAM 存储中的 IP 地址分配", "B": "手动释放未使用的 IP 地址", "C": "加快终止 Pods 的垃圾回收速度", "D": "以上所有", "answer": "D", "score": 5}
{"id": 778, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "设置 Flannel Pods 时可能导致它们进入 CrashLoopBackOff 状态的常见问题是什么？", "A": "CNI 配置错误", "B": "安装期间的权限错误", "C": "SELinux 阻止操作", "D": "以上所有", "answer": "D", "score": 4}
{"id": 779, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "什么可能导致 Kubernetes 中的 DNS 服务无法到达上游服务器？", "A": "Iptables FORWARD 策略设置为 DROP", "B": "网络插件配置错误", "C": "kube-dns 配置错误", "D": "A 和 B", "answer": "D", "score": 4}
{"id": 780, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如果 Kubernetes 服务在 pods 内部无法访问，应该采取哪些步骤？", "A": "检查端点创建", "B": "验证标签选择器和容器端口", "C": "确保 kube-proxy 正常运行", "D": "以上所有", "answer": "D", "score": 5}
{"id": 781, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果 pod 无法通过其 Service IP 访问自身，应该检查什么？", "A": "用于 hairpin 流量的网络配置", "B": "kubelet 上的 `hairpin-mode` 设置", "C": "A 和 B", "D": "既不是 A 也不是 B", "answer": "C", "score": 4}
{"id": 782, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "无法从 pod 内部访问 Kubernetes API 的潜在原因是什么？", "A": "Kubernetes 服务或端点问题", "B": "防火墙或 kube-apiserver 配置", "C": "RBAC 配置错误", "D": "以上所有", "answer": "D", "score": 5}
{"id": 783, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "由于 CPU 资源不足导致 Pod 卡在 Pending 状态时，应采取哪些步骤？", "A": "在 Pod 的配置文件中增加 CPU 限制。", "B": "删除并重新创建 Pod。", "C": "向集群添加更多节点或调整 Pod 的资源请求。", "D": "使用不同的调度算法。", "answer": "C", "score": 4}
{"id": 784, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如果由于 'cni0' 桥上的预配置 IP 地址与预期设置冲突，导致 Pod 的网络沙盒无法启动，应该怎么做？", "A": "在节点上重启 kubelet。", "B": "删除 'cni0' 桥，让网络插件在需要时重新创建它。", "C": "重新分配节点的 IP 地址。", "D": "更新网络策略以适应现有 IP 地址。", "answer": "B", "score": 4}
{"id": 785, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如果 Pod 因为 docker secrets 错误而卡在 ImagePullBackOff 状态，推荐的解决方案是什么？", "A": "使用正确的凭证更新 docker secret。", "B": "删除 Pod 并再次尝试拉取镜像。", "C": "重新配置镜像名称以匹配注册表中的名称。", "D": "检查到 docker 注册表的网络连接。", "answer": "A", "score": 4}
{"id": 786, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "当 Pod 因超过内存限制而进入 CrashLoopBackOff 状态时，应该采取什么措施？", "A": "在 Pod 的配置中增加内存限制。", "B": "删除并重新创建具有较低内存请求的 Pod。", "C": "更改 Pod 调度的节点。", "D": "优化应用程序以减少内存使用。", "answer": "A", "score": 3}
{"id": 787, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "'journalctl -u kubelet -l' 命令显示什么？", "A": "当前用户的日志", "B": "安全日志", "C": "内核日志", "D": "kubelet 服务的日志", "answer": "D", "score": 3}
{"id": 788, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Kubernetes 环境中 'iptables -t nat -nL' 的主要用途是什么?", "A": "显示与 kube-proxy 相关的 NAT 规则", "B": "清除所有 iptables 规则", "C": "修改 iptables 规则", "D": "创建新的 iptables 规则", "answer": "A", "score": 4}
{"id": 789, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "'tcpdump -nn host 10.240.0.8' 如何帮助排查 Kubernetes 网络问题?", "A": "显示发送到和从主机 10.240.0.8 发送的流量", "B": "阻止到和从主机 10.240.0.8 的流量", "C": "重新路由到和从主机 10.240.0.8 的流量", "D": "加密到和从主机 10.240.0.8 的流量", "answer": "A", "score": 4}
{"id": 790, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes 环境中可以使用 'perf' 诊断什么问题?", "A": "容器隔离问题", "B": "UI 性能问题", "C": "数据库性能问题", "D": "网络连接问题", "answer": "A", "score": 4}
{"id": 791, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes 环境中 'sysdig' 的功能是什么?", "A": "管理集群状态", "B": "观察和排除操作挑战", "C": "增强集群安全性", "D": "自动化部署过程", "answer": "B", "score": 4}
{"id": 792, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Kubernetes 集群中如何使用 Weave Scope?", "A": "配置网络策略", "B": "监控和可视化集群拓扑", "C": "执行安全策略", "D": "自动化部署和回滚", "answer": "B", "score": 4}
{"id": 793, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "如果 Windows Pod 在 Kubernetes 中由于配置错误的 pause 镜像而卡在 ContainerCreating 状态，首先应该检查什么?", "A": "容器运行时日志", "B": "该特定 Pod 的 Kubernetes Pod 事件", "C": "容器镜像与 Windows 的兼容性", "D": "节点的容器运行时配置", "answer": "B", "score": 4}
{"id": 794, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在节点重启后，如何根据 HNS Policy 清理步骤解决 Windows Pod 中的 DNS 问题?", "A": "重启 kubelet 和 kube-proxy 服务", "B": "删除并重新应用 HNS 策略", "C": "手动配置 Pod 内的 DNS 设置", "D": "以上所有", "answer": "D", "score": 5}
{"id": 795, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用 acs-engine 部署 Kubernetes 集群后，如何更新自定义 VNET 中的路由表?", "A": "使用 Azure CLI 更新 VNET 的正确路由表", "B": "手动重新配置所有网络组件", "C": "重新部署 Kubernetes 集群", "D": "以上都不是", "answer": "A", "score": 4}
{"id": 796, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在 Kubernetes 中负载均衡规则配置期间，如果由于 HNS 错误导致远程端点创建失败，应立即采取什么步骤来解决此问题?", "A": "检查是否有待处理的 Windows 更新", "B": "重启节点并重新安装 kube-proxy", "C": "安装 KB 文章中提到的特定 Windows 更新", "D": "重新配置整个 Kubernetes 网络堆栈", "answer": "C", "score": 4}
{"id": 797, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如何解决 Windows Pod 无法访问 Kubernetes API 的问题?", "A": "在虚拟网络适配器上启用 MAC 欺骗", "B": "将 Windows 更新到最新版本", "C": "重启 Windows 节点", "D": "检查网络隔离策略", "answer": "A", "score": 3}
{"id": 798, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "在处理运行在 Kubernetes Pod 中的旧版 Windows 上的 ServiceAccount Secrets 时，必须考虑什么限制?", "A": "由于 Kubernetes API 问题，秘密可能无法访问", "B": "旧版 Windows 可能有一个错误，导致无法访问秘密", "C": "Kubernetes 上的 Windows 不支持秘密管理", "D": "需要频繁重启 Windows 节点", "answer": "B", "score": 4}
{"id": 799, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在应用 NetworkPolicy 后，'kubectl get pod' 命令的结果是什么?", "A": "列出受 NetworkPolicy 影响的所有 Pod", "B": "显示强制执行 NetworkPolicy 的 Pod 状态", "C": "显示不符合 NetworkPolicy 的 Pod 错误", "D": "没有与 NetworkPolicy 相关的特定结果", "answer": "B", "score": 4}
{"id": 800, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 'kubectl get pod' 的输出中，STATUS 'Error' 表示 no-access-pod 处于什么状态?", "A": "由于配置错误，Pod 崩溃。", "B": "Pod 处于崩溃循环回退状态。", "C": "由于网络限制，Pod 无法启动。", "D": "Pod 正在进行维护。", "answer": "C", "score": 5}
{"id": 801, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在云提供商的背景下，kube-controller-manager 的角色是什么?", "A": "检查 Node 所在的 VM 状态，如果 VM 被删除，则从 API 服务器中删除 Node。", "B": "为 Nodes 配置 SSH 密钥", "C": "自动化应用更新的部署", "D": "限制对集群数据的访问", "answer": "A", "score": 3}
{"id": 802, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "云提供商如何在 Kubernetes 中管理持久卷和动态配置?", "A": "通过 PersistentVolumeLabel 入场控制对 PV 进行标记", "B": "手动将存储设备附加到服务器", "C": "提供用于卷管理的用户界面", "D": "通过需要单独集成的外部第三方服务", "answer": "A", "score": 4}
{"id": 803, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在使用云提供商的Kubernetes集群中，服务控制器的职责是什么？", "A": "它处理内部DNS管理", "B": "它创建负载均衡器并更新服务的外部IP", "C": "它限制Pod之间的网络流量", "D": "它管理内部网络策略的分配", "answer": "B", "score": 4}
{"id": 804, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "以下哪个网络插件支持Kubernetes网络策略？", "A": "Calico", "B": "Cilium", "C": "Romana", "D": "以上全部", "answer": "D", "score": 3}
{"id": 805, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "如何在Kubernetes中部署一个自定义调度器以允许使用该调度器部署Pod，其主要功能是什么？", "A": "通过编辑默认调度器设置来部署自定义调度器，并将其主要功能设置为管理Pod亲和性。", "B": "通过在Kubernetes集群中提供新的调度器配置来部署自定义调度器，并使用自定义调度器强制执行安全策略。", "C": "使用Shell脚本部署自定义调度器，将未调度的Pod绑定到基于自定义策略的节点，并在Pod规范中指定调度器名称。", "D": "通过创建一个具有与默认调度器相同规格的新Pod来部署自定义调度器，其主要功能是均匀分配所有现有Pod到各个节点。", "answer": "C", "score": 4}
{"id": 806, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes CRD的上下文中，终结器是什么，它们如何工作？", "A": "终结器是允许异步删除前钩子的标签。", "B": "终结器是保护CRD免受未授权访问的额外安全措施。", "C": "终结器是增加资源复制因子的方法。", "D": "终结器是Kubernetes原生的日志记录和监控工具。", "answer": "A", "score": 4}
{"id": 807, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Kubernetes v1.8引入的CRD验证机制是什么，它如何改善资源管理？", "A": "验证使用OpenAPI v3模式确保提交的资源符合特定标准，减少错误。", "B": "验证根据使用情况自动扩展资源，提高性能。", "C": "验证为资源数据添加加密，提高安全性。", "D": "验证在多个节点上复制资源以平衡负载。", "answer": "A", "score": 5}
{"id": 808, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "从v1.10版本开始，如何管理Kubernetes CRD中的'/status'和'/scale'子资源？", "A": "在CRD定义中启用它们的'子资源'。", "B": "子资源由Kubernetes自动管理，无需用户干预。", "C": "必须安装单独的插件来管理子资源。", "D": "子资源已被弃用，不再用于Kubernetes。", "answer": "A", "score": 4}
{"id": 809, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Frakti如何影响Kubernetes集群中的网络配置？", "A": "Frakti使用默认的Kubernetes网络插件，无需更改", "B": "Frakti需要自定义网络插件才能运行", "C": "Frakti仅支持桥接插件进行网络配置", "D": "Frakti自动配置所有网络设置", "answer": "C", "score": 4}
{"id": 810, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "配置Kubelet使用Frakti运行时时可能存在什么问题？", "A": "错误地设置了cgroup驱动程序", "B": "使用不兼容的Kubernetes版本", "C": "运行时端点配置错误", "D": "以上全部", "answer": "D", "score": 4}
{"id": 811, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在Frakti的上下文中，您将使用哪个命令在Ubuntu上安装Kubernetes组件，如kubelet、kubeadm和kubectl？", "A": "apt-get install -y kubelet kubeadm kubectl", "B": "yum install -y kubelet kubeadm kubectl", "C": "snap install kubelet kubeadm kubectl", "D": "docker pull kubelet kubeadm kubectl", "answer": "A", "score": 3}
{"id": 812, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在minikube上使用NodePort公开一个deployment的命令是什么？", "A": "kubectl expose deployment <name> --type=NodePort", "B": "kubectl create service nodeport <name>", "C": "minikube expose deployment <name>", "D": "kubectl deploy expose --type=NodePort", "answer": "A", "score": 3}
{"id": 813, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何在Kubernetes中创建Ingress以将'http://mini-echo.io'的流量转发到在minikube中部署的echoserver服务？", "A": "创建一个具有适当规则和服务后端的Ingress资源", "B": "配置minikube设置以自动转发流量", "C": "使用配置为转发到minikube的外部负载均衡器", "D": "修改/etc/hosts文件以重定向到minikube", "answer": "A", "score": 4}
{"id": 814, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Ingress Controller如何促进Kubernetes集群内的外部流量路由？", "A": "仅通过配置DNS设置", "B": "通过监视Ingress和服务资源的变化并更新负载均衡和路由规则", "C": "通过自动增加Pod的数量", "D": "通过直接修改集群的防火墙规则", "answer": "B", "score": 5}
{"id": 815, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何诊断使用Traefik作为Ingress Controller的Kubernetes集群中的服务发现问题？", "A": "检查Traefik日志文件中的错误", "B": "检查Pod资源限制", "C": "检查节点内核参数", "D": "更新集群节点上的Docker版本", "answer": "A", "score": 4}
{"id": 816, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个kubectl命令显示特定命名空间中的所有Ingress资源？", "A": "kubectl get pods -n namespace", "B": "kubectl get ingress -n namespace", "C": "kubectl describe services", "D": "kubectl config view", "answer": "B", "score": 3}
{"id": 817, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Calico在Kubernetes环境中的主要功能是什么？", "A": "充当Web服务器", "B": "提供网络路由和策略", "C": "监控Kubernetes pods", "D": "管理数据存储", "answer": "B", "score": 4}
{"id": 818, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Calico如何增强Kubernetes集群中的网络安全？", "A": "通过实施严格的入口规则", "B": "使用加密数据存储", "C": "通过基于iptables的网络策略", "D": "通过自动扩展资源", "answer": "C", "score": 5}
{"id": 819, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Cilium的哪项功能允许您根据容器身份定义网络策略？", "A": "基于CIDR的策略", "B": "基于标签的策略", "C": "基于端口的策略", "D": "基于身份的安全策略", "answer": "D", "score": 4}
{"id": 820, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个kubectl命令用于在Kubernetes集群中部署Cilium？", "A": "kubectl apply -f cilium.yaml", "B": "kubectl set cilium", "C": "kubectl deploy cilium", "D": "kubectl start cilium", "answer": "A", "score": 3}
{"id": 821, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何使用Cilium监控Kubernetes集群中的网络流量？", "A": "使用内置的Kubernetes仪表板", "B": "使用microscope工具", "C": "使用标准的日志机制", "D": "通过启用Cilium中的跟踪功能", "answer": "B", "score": 4}
{"id": 822, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个CNI插件负责Kubernetes中的IP地址管理？", "A": "Flannel", "B": "Weave Net", "C": "MACVLAN", "D": "IPAM Plugin", "answer": "D", "score": 4}
{"id": 823, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "CNI插件链如何增强Kubernetes中的网络功能？", "A": "它允许多个插件顺序执行以设置网络。", "B": "它限制网络只能使用一个插件以提高安全性。", "C": "插件链已弃用，不再使用。", "D": "链中的每个插件为前一个提供备份。", "answer": "A", "score": 5}
{"id": 824, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "CNI插件处理端口映射需要什么条件？", "A": "插件必须支持'portMappings'功能。", "B": "所有插件都自动支持端口映射。", "C": "必须安装特殊的内核模块。", "D": "端口映射只能由主节点处理。", "answer": "A", "score": 4}
{"id": 825, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果与Contiv集成的Kubernetes集群出现间歇性网络连接问题，应采取哪些初步步骤来诊断问题？", "A": "检查Contiv网络配置和pod状态", "B": "重新启动所有集群节点", "C": "增加pod的内存限制", "D": "将Kubernetes更新到最新版本", "answer": "A", "score": 4}
{"id": 826, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用Contiv在Kubernetes集群中设置全局网络参数的命令是什么？", "A": "netctl global set --fwd-mode routing", "B": "kubectl set globals", "C": "docker network create", "D": "netctl create global", "answer": "A", "score": 4}
{"id": 827, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何通过Ansible在Kubernetes集群中部署Contiv？", "A": "克隆Kubernetes contrib库并运行Contiv Ansible角色", "B": "下载Contiv二进制文件并执行设置脚本", "C": "使用Helm图表部署Contiv", "D": "应用Kubernetes清单文件来部署Contiv", "answer": "A", "score": 4}
{"id": 828, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "在Contiv环境中配置BGP时，哪些常见错误会导致节点之间的路由问题？", "A": "AS号码或邻居配置错误", "B": "未指定正确的VLAN标签", "C": "未设置pod亲和性规则", "D": "使用错误的子网掩码", "answer": "A", "score": 4}
{"id": 829, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kuryr-Kubernetes架构的主要组件是什么？", "A": "Kuryr Controller和Kuryr CNI", "B": "Kuryr Pods和Kuryr Services", "C": "Kuryr API和Kuryr Nodes", "D": "Kuryr Scheduler和Kuryr DaemonSets", "answer": "A", "score": 3}
{"id": 830, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "概述在覆盖模式下配置OVN-Kubernetes主节点所需的步骤。", "A": "启动ovn，启动ovnkube，配置网络", "B": "安装依赖项，启动kubectl，运行ovnkube", "C": "配置etcd，启动ovn，部署应用程序", "D": "启动ovn，部署ovnkube，监控日志", "answer": "A", "score": 4}
{"id": 831, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在OVN Kubernetes CNI插件中，哪个命令用于将端口添加到OVS桥？", "A": "ovs-vsctl add-port", "B": "kubectl add-port", "C": "ovnkube configure-port", "D": "ovn-nbctl create-port", "answer": "A", "score": 5}
{"id": 832, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "描述在覆盖网络模式下设置OVN-Kubernetes节点所需的步骤。", "A": "运行带有适当标志的ovnkube，配置日志", "B": "设置Kubernetes API服务器，定义子网范围", "C": "安装OVN，配置网络，启动ovnkube", "D": "配置主节点，安装OVS，启动服务", "answer": "C", "score": 4}
{"id": 833, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在配置 OVN-Kubernetes 环境期间，可能发生的典型网络设置错误是什么，以及如何诊断？", "A": "子网设置错误导致连接问题，通过 ovn-nbctl 诊断", "B": "防火墙阻止节点通信，通过 tcpdump 检查", "C": "OVS 桥配置错误，通过 ovs-vsctl show 识别", "D": "错误的网关设置导致路由环路，通过 traceroute 诊断", "answer": "C", "score": 4}
{"id": 834, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种 Kubernetes 网络插件支持跨多个节点的 Pod 直接连接而无需 NAT，使用平面可路由网络？", "A": "Calico", "B": "Weave Net", "C": "kubenet", "D": "OVN", "answer": "A", "score": 4}
{"id": 835, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "“kubenet” 插件分配 Pod IP 地址的主要机制是什么？", "A": "Host-local IPAM", "B": "DHCP", "C": "静态分配", "D": "Cloud-provider IPAM", "answer": "A", "score": 3}
{"id": 836, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪种 Kubernetes 网络插件使用 BGP 管理数据中心内的 Pod 流量路由？", "A": "Flannel", "B": "Calico", "C": "Cilium", "D": "Canal", "answer": "B", "score": 4}
{"id": 837, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何在 Kubernetes 集群中安装 CNI 插件？", "A": "使用 kubectl create", "B": "配置 /etc/cni/net.d 目录", "C": "通过 Kubernetes 仪表板", "D": "以上都不是", "answer": "B", "score": 3}
{"id": 838, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "使用 kubeadm 为 Kubernetes 集群部署 Romana 时使用的命令是什么？", "A": "kubectl set env romana-kubeadm", "B": "kubectl apply -f https://raw.githubusercontent.com/romana/romana/master/docs/kubernetes/romana-kubeadm.yml", "C": "kubectl create deployment romana-kubeadm", "D": "kubectl config set-network-plugin romana", "answer": "B", "score": 3}
{"id": 839, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "使用 kops 部署 Kubernetes 并使用 Romana 作为网络插件时应指定什么？", "A": "--networking cni", "B": "--use-romana", "C": "--enable-networking romana", "D": "--set-networking romana", "answer": "A", "score": 3}
{"id": 840, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 中容器存储接口 (CSI) 的主要功能是什么？", "A": "自动部署新节点", "B": "管理容器镜像存储", "C": "标准化容器存储解决方案的接口", "D": "增强容器数据的安全性", "answer": "C", "score": 4}
{"id": 841, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "哪个 Kubernetes 版本标志着 CSI 规范的正式发布 (GA)？", "A": "v1.9", "B": "v1.10", "C": "v1.11", "D": "v1.13", "answer": "D", "score": 3}
{"id": 842, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个 sidecar 容器负责监控 CSI 驱动的健康状况？", "A": "external-provisioner", "B": "livenessprobe", "C": "node-driver-registrar", "D": "external-attacher", "answer": "B", "score": 4}
{"id": 843, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "CSI 部署中 “external-attacher” sidecar 容器的作用是什么？", "A": "监控 CSI 驱动的健康状况", "B": "将 CSI 插件注册到 kubelet", "C": "处理 VolumeAttachment 和 PersistentVolume 操作", "D": "创建和管理持久卷声明", "answer": "C", "score": 4}
{"id": 844, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何查看 Kubernetes 中当前的部署状态？", "A": "kubectl get deploy", "B": "kubectl status deployment", "C": "kubectl describe deployments", "D": "kubectl check deployment", "answer": "A", "score": 3}
{"id": 845, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "哪个 Kubernetes 命令用于回滚先前失败的部署？", "A": "kubectl revert deployment", "B": "kubectl rollback deployment", "C": "kubectl undo deployment", "D": "kubectl rollout undo deployment", "answer": "D", "score": 4}
{"id": 846, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何在 Kubernetes 中为部署中的容器设置资源限制？", "A": "kubectl set resources deployment my-app -c=my-container --limits=cpu=1000m,memory=256Mi", "B": "kubectl config set resources deployment my-app --cpu=1000m --memory=256Mi", "C": "kubectl deployment set-resource --cpu=1 --memory=256Mi my-app", "D": "kubectl edit deployment my-app", "answer": "A", "score": 4}
{"id": 847, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "要检查 Kubernetes 中部署的滚动状态，应该使用哪个命令？", "A": "kubectl rollout status deployment my-app", "B": "kubectl deployment status", "C": "kubectl get rollout my-app", "D": "kubectl check deployment my-app", "answer": "A", "score": 3}
{"id": 848, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 Kubernetes 部署中，LivenessProbe 的目的是是什么？", "A": "确保应用程序正确启动", "B": "重新启动失败的容器", "C": "在 pod 之间提供加密通信", "D": "监控网络流量", "answer": "B", "score": 4}
{"id": 849, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "Kubernetes Federation 的目的是是什么？", "A": "提供一个管理多个集群的单一接口", "B": "增加单个集群的计算能力", "C": "管理跨多个云的存储", "D": "加快部署过程", "answer": "A", "score": 4}
{"id": 850, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用 minikube 启动本地 Kubernetes 集群？", "A": "minikube start", "B": "kubectl start minikube", "C": "minikube init", "D": "kubectl init", "answer": "A", "score": 3}
{"id": 851, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "哪个命令提供有关 Kubernetes master 及其服务的当前状态的详细信息？", "A": "kubectl get all", "B": "kubectl describe nodes", "C": "kubectl cluster-info", "D": "kubectl config view", "answer": "C", "score": 3}
{"id": 852, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "Kubernetes 如何处理访问集群资源的身份验证？", "A": "使用网络策略", "B": "通过 kube-proxy", "C": "使用访问令牌和基于角色的访问控制（RBAC）", "D": "API 网关管理", "answer": "C", "score": 4}
{"id": 853, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 kube-system 命名空间中替换基本身份验证 secret 的命令是什么？", "A": "kubectl -n kube-system replace secret basic-auth --from-file=auth", "B": "kubectl -n kube-system create secret generic basic-auth --from-file=auth", "C": "kubectl -n kube-system delete secret basic-auth", "D": "B 和 C 都是", "answer": "D", "score": 4}
{"id": 854, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Elasticsearch 有效使用 mmap 所需的 vm.max_map_count 设置是多少？", "A": "sysctl -w vm.max_map_count=262144", "B": "sysctl -w vm.max_map_count=512000", "C": "sysctl -w vm.max_map_count=100000", "D": "sysctl -w vm.max_map_count=204800", "answer": "A", "score": 3}
{"id": 855, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "部署 nginx ingress controller 时用于确保启用 RBAC 的 Helm 命令选项是什么？", "A": "--set rbac.create=false", "B": "--set rbac.create=true", "C": "--set rbac.check=true", "D": "--set rbac.enable=true", "answer": "B", "score": 3}
{"id": 856, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何检索部署在 kube-system 命名空间中的 nginx ingress 服务的外部 IP 地址？", "A": "kubectl get svc nginx-ingress-controller -n kube-system", "B": "helm status nginx-ingress-controller", "C": "kubectl describe svc nginx-ingress-controller", "D": "kubectl -n kube-system get svc nginx-ingress-controller", "answer": "D", "score": 4}
{"id": 857, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "设置 DNS A 记录以指向 nginx ingress 服务的外部 IP 的命令是什么？", "A": "手动修改 DNS 配置", "B": "使用自动脚本", "C": "这不是命令行操作", "D": "使用云提供商的 DNS 服务", "answer": "A", "score": 2}
{"id": 858, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "使用 cert-manager 为 nginx ingress 启用 TLS 的推荐方法是什么？", "A": "使用 Helm 安装 cert-manager", "B": "手动配置 TLS 证书", "C": "禁用 TLS", "D": "使用默认的 Kubernetes TLS", "answer": "A", "score": 4}
{"id": 859, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "通常使用哪个 Kubernetes 资源来配置使用 nginx ingress 的域名 HTTPS 路由？", "A": "Deployment", "B": "Service", "C": "ConfigMap", "D": "Ingress", "answer": "D", "score": 4}
{"id": 860, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何为 Kubernetes 仪表板创建基本身份验证 secret？", "A": "kubectl create secret basic-auth", "B": "htpasswd -c auth foo; kubectl -n kube-system create secret generic basic-auth --from-file=auth", "C": "kubectl create secret tls", "D": "kubectl -n kube-system apply secret", "answer": "B", "score": 4}
{"id": 861, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何使用 Helm 安装 Prometheus Operator？", "A": "helm install prometheus-operator coreos/prometheus-operator --namespace monitoring", "B": "helm install coreos/prometheus-operator --name prometheus-operator --namespace monitoring", "C": "kubectl install coreos/prometheus-operator --name prometheus-operator --namespace monitoring", "D": "helm setup coreos/prometheus-operator --name prometheus-operator --namespace monitoring", "answer": "B", "score": 4}
{"id": 862, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如果 exporter-kubelets 函数返回“server returned HTTP status 401 Unauthorized”错误，应该使用哪个命令来配置 Kubelet 的 webhook 身份验证？", "A": "kubelet --authentication-token-webhook=true --authorization-mode=Webhook", "B": "kubelet set --authentication-token-webhook=true --authorization-mode=Webhook", "C": "helm set kubelet --authentication-token-webhook=true --authorization-mode=Webhook", "D": "kubectl config set kubelet --authentication-token-webhook=true --authorization-mode=Webhook", "answer": "A", "score": 4}
{"id": 863, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "当 Kubernetes 服务在集群内不可访问时，首先应该采取什么故障排除步骤？", "A": "检查服务和 Pod 日志", "B": "重启 Kubernetes master", "C": "检查网络策略", "D": "升级集群节点", "answer": "C", "score": 4}
{"id": 864, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个 kubectl 命令列出 Kubernetes 集群中的所有节点？", "A": "kubectl get nodes", "B": "kubectl list pods", "C": "kubectl show nodes", "D": "kubectl display nodes", "answer": "A", "score": 3}
{"id": 865, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在 Velero 中，哪个命令可以让您为 Kubernetes 集群定期备份？", "A": "velero schedule set", "B": "velero create schedule", "C": "velero backup create", "D": "velero schedule create", "answer": "D", "score": 4}
{"id": 866, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "使用 Velero 如何从最新备份中恢复 Kubernetes 集群？", "A": "velero restore from-latest", "B": "velero restore create --from-backup <SCHEDULE NAME>-<TIMESTAMP>", "C": "kubectl apply -f latest-backup", "D": "velero recover --latest", "answer": "B", "score": 5}
{"id": 867, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "配置 kube-apiserver 多个 etcd 服务器（包括为事件配置单独的服务器）的命令是什么？", "A": "--etcd-servers='http://etcd1:2379,http://etcd2:2379'", "B": "--etcd-servers-overrides='/events#http://etcd3:2379'", "C": "--etcd-servers='http://etcd1:2379,http://etcd2:2379,http://etcd3:2379' --etcd-servers-overrides='/events#http://etcd4:2379,http://etcd5:2379,http://etcd6:2379'", "D": "--etcd-servers='http://etcd1:2379'", "answer": "C", "score": 4}
{"id": 868, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 AWS 上管理 101 到 250 个节点的 Kubernetes Master 节点，推荐使用哪种实例大小？", "A": "m3.large", "B": "m3.xlarge", "C": "m3.2xlarge", "D": "c4.4xlarge", "answer": "C", "score": 3}
{"id": 869, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "为了管理更高的应用负载，kube-apiserver 的 `--max-requests-inflight` 和 `--max-mutating-requests-inflight` 设置应该是什么？", "A": "300 和 100", "B": "3000 和 1000", "C": "1000 和 300", "D": "500 和 200", "answer": "B", "score": 4}
{"id": 870, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "增加 etcd 存储配额限制的命令是什么？", "A": "--set-storage-quota", "B": "--quota-backend-bytes", "C": "--max-storage-limit", "D": "--increase-storage", "answer": "B", "score": 4}
{"id": 871, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "为处理高网络流量，Kubernetes 节点需要的关键配置是什么？", "A": "--max-concurrent-downloads=10", "B": "net.netfilter.nf_conntrack_max=10485760", "C": "fs.file-max=1000000", "D": "--image-pull-progress-deadline=30m", "answer": "B", "score": 4}
{"id": 872, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何检查由 kubeadm 配置的 Kubernetes 集群证书的到期时间？", "A": "kubeadm check certs", "B": "kubeadm alpha certs check-expiration", "C": "kubectl get certs", "D": "kubectl check-expiration", "answer": "B", "score": 4}
{"id": 873, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用 kubeadm 在不更改现有配置的情况下更新 Kubernetes 集群中的所有证书的命令是什么？", "A": "kubeadm upgrade apply --certificate-renewal", "B": "kubeadm alpha certs renew all --config kubeadm.yaml", "C": "kubeadm renew certs", "D": "kubeadm update certs", "answer": "B", "score": 4}
{"id": 874, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "从 Kubernetes 版本 1.8.0 开始，启用 kubelet 证书轮换的推荐方法是什么？", "A": "在 kube-controller-manager 中设置 RotateKubeletClientCertificate", "B": "在 kubelet 中启用 RotateCertificates", "C": "使用 kubeadm 轮换证书", "D": "A 和 B 都正确", "answer": "D", "score": 5}
{"id": 875, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用 kubeadm 重新生成各种 Kubernetes 角色的 kubeconfig 的命令是什么？", "A": "kubeadm init phase kubeconfig all --config kubeadm.yaml", "B": "kubeadm renew kubeconfig", "C": "kubeadm alpha kubeconfig renew all", "D": "kubeadm update kubeconfig", "answer": "A", "score": 3}
{"id": 876, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何确保 Kubernetes pod 在具有多种 GPU 类型的节点上使用特定类型的 GPU 模型？", "A": "使用节点亲和性将 pod 调度到具有特定 GPU 类型的节点上", "B": "手动将 pod 分配到基于 GPU 型号的节点上", "C": "使用专门的 Kubernetes 调度器处理 GPU 类型", "D": "pod 自动选择基于使用情况的 GPU 类型", "answer": "A", "score": 4}
{"id": 877, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "在部署需要访问 GPU 库的 pod 时，使用 hostPath 卷的目的是？", "A": "增加 pod 可用的存储容量", "B": "为多个 pod 提供共享存储", "C": "允许 pod 访问主机上的特定目录", "D": "提高 pod 的 I/O 性能", "answer": "C", "score": 4}
{"id": 878, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪个Kubernetes组件主要负责监控集群中节点的健康状况？", "A": "Kubelet", "B": "Kube-proxy", "C": "Kubernetes API", "D": "etcd", "answer": "A", "score": 3}
{"id": 879, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何监听一个随机的本地端口并转发到名为 'mypod' 的pod的5000端口？", "A": "kubectl port-forward mypod :5000", "B": "kubectl port-forward mypod 0:5000", "C": "A和B都可以", "D": "以上都不是", "answer": "C", "score": 3}
{"id": 880, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个kubectl命令将本地端口6379转发到名为 'redis-master' 的部署的6379端口？", "A": "kubectl port-forward deployment/redis-master 6379:6379", "B": "kubectl forward deployment/redis-master 6379", "C": "kubectl port-forward redis-master 6379", "D": "kubectl forward svc/redis-master 6379:6379", "answer": "A", "score": 3}
{"id": 881, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "创建Pod时，如何在容器和主机之间指定端口映射以允许通过节点的IP和hostPort外部访问服务？", "A": "在pod的spec中定义hostPort和containerPort", "B": "将containerPort设置为与hostPort相同的值", "C": "使用NodePort服务代替hostPort", "D": "在Deployment配置中配置hostPort", "answer": "A", "score": 3}
{"id": 882, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在YAML清单中设置pod请求和限制的推荐做法是什么？", "A": "为每个pod设置无限资源以最大化性能。", "B": "为每个pod设置特定的CPU和内存请求和限制。", "C": "允许Kubernetes自动分配资源。", "D": "仅设置限制以防止pods使用过多资源。", "answer": "B", "score": 4}
{"id": 883, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "启用RBAC如何增强Kubernetes集群的安全性？", "A": "限制pod到pod的通信", "B": "防止未经授权访问Kubernetes API", "C": "自动安装安全更新", "D": "加密存储在etcd中的数据", "answer": "B", "score": 4}
{"id": 884, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Kubernetes集群中，推荐使用哪种模式来保护API通信？", "A": "使用不加密的HTTP", "B": "强制使用TLS 1.2或更高版本", "C": "为所有流量使用SSH隧道", "D": "禁用所有外部通信", "answer": "B", "score": 4}
{"id": 885, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在Pod安全策略中设置 'MustRunAsNonRoot' 实现了什么？", "A": "确保容器以root权限运行", "B": "防止容器以root用户运行", "C": "允许容器提升权限", "D": "强制容器以指定的用户ID运行", "answer": "B", "score": 5}
{"id": 886, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "无服务器平台（如AWS Lambda）的常见限制是什么？", "A": "运行时间有限", "B": "用户界面复杂", "C": "存储成本高", "D": "频繁的强制更新", "answer": "A", "score": 4}
{"id": 887, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在Kubernetes中，容器内自动挂载ServiceAccount凭证的标准目录是什么？", "A": "/etc/kubernetes/ssl", "B": "/var/run/secrets/kubernetes.io/serviceaccount", "C": "/usr/local/share/ca-certificates", "D": "/etc/ssl/certs", "answer": "B", "score": 3}
{"id": 888, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在Kubernetes中为新用户设置RBAC时，必须创建哪种资源类型以指定用户在命名空间内可以行使的权限？", "A": "RoleBinding", "B": "ClusterRole", "C": "Role", "D": "UserPermissions", "answer": "C", "score": 4}
{"id": 889, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个kubectl命令用于批准名为 'user1-default' 的CertificateSigningRequest？", "A": "kubectl approve csr user1-default", "B": "kubectl certificate approve user1-default", "C": "kubectl get csr user1-default --approve", "D": "kubectl create csr user1-default", "answer": "B", "score": 4}
{"id": 890, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "哪个Kubernetes API组涉及管理TLS证书签名请求？", "A": "rbac.authorization.k8s.io", "B": "admissionregistration.k8s.io", "C": "certificates.k8s.io", "D": "apiextensions.k8s.io", "answer": "C", "score": 4}
{"id": 891, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "为新用户配置kubectl的步骤包括哪些内容，涉及到使用新签署的证书和设置用户对特定命名空间的访问权限？", "A": "生成密钥，创建CSR，批准CSR，绑定角色，配置kubectl", "B": "创建用户，分配权限，设置上下文", "C": "设置集群，创建用户，生成令牌", "D": "注册用户，创建令牌，设置命名空间", "answer": "A", "score": 5}
{"id": 892, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何使用ServiceAccount的令牌从Pod内部访问Kubernetes API？", "A": "使用kubectl proxy", "B": "通过Kubernetes仪表板访问", "C": "使用/var/run/secrets/kubernetes.io/serviceaccount/token中的令牌", "D": "配置外部API网关", "answer": "C", "score": 4}
{"id": 893, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "要在Kubernetes集群中使用Kubeflow部署TensorFlow模型，哪个命令可以设置必要的Kubernetes组件？", "A": "kubectl apply -f tensorflow.yaml", "B": "ks pkg install kubeflow/tf-serving", "C": "ks generate tf-serving serveInception", "D": "docker pull tensorflow/serving", "answer": "B", "score": 4}
{"id": 894, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "可以使用哪个命令切换上下文到另一个Kubernetes集群以部署Kubeflow，确保高可用性？", "A": "ks env add gke", "B": "kubectl config use-context gke", "C": "ks apply gke -c kubeflow-core", "D": "kubectl set context gke", "answer": "B", "score": 3}
{"id": 895, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在部署Kubeflow后，如何找到JupyterHub服务的公共IP地址？", "A": "kubectl get svc tf-hub-lb", "B": "ks show default", "C": "kubectl describe pods jupyter", "D": "ks env describe", "answer": "A", "score": 3}
{"id": 896, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "按照教程，使用哪个命令在Kubernetes中部署一个Web应用程序？", "A": "kubectl apply -f", "B": "kubectl create -f", "C": "kubectl set -f", "D": "kubectl deploy -f", "answer": "B", "score": 3}
{"id": 897, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "在测试期间如何扩展Kubernetes中worker pods的数量以处理增加的负载？", "A": "使用kubectl scale命令并带有--replicas选项。", "B": "手动删除并重新创建具有更多实例的pods。", "C": "编辑Docker镜像以允许更多实例。", "D": "在Kubernetes上无法进行扩展。", "answer": "A", "score": 4}
{"id": 898, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何配置Traefik Ingress将流量路由到Kubernetes中的locust-master服务？", "A": "通过修改ingress.yaml以在http路径下包括服务名称和端口。", "B": "通过直接编辑Kubernetes仪表板中的服务配置。", "C": "使用外部DNS管理工具重定向流量。", "D": "使用Traefik Ingress无法路由流量到服务。", "answer": "A", "score": 4}
{"id": 899, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "从节点使用Cluster IP访问Kubernetes集群的首选方法是什么？", "A": "使用直接节点IP地址", "B": "通过服务访问", "C": "使用Traefik Ingress", "D": "直接连接到pod IP", "answer": "B", "score": 4}
{"id": 900, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在Kubernetes环境中，用于测量系统并发用户处理能力的工具是什么？", "A": "Locust", "B": "Apache JMeter", "C": "Kubemark", "D": "Gatling", "answer": "A", "score": 3}
{"id": 901, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "使用如iperf等工具进行网络性能测试主要影响哪个Kubernetes资源？", "A": "Pods", "B": "Services", "C": "Ingress controllers", "D": "Nodes", "answer": "D", "score": 3}
{"id": 902, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "与host-gw模式相比，Flannel的VXLAN模式如何影响网络性能？", "A": "没有影响", "B": "提高性能", "C": "使性能下降30-40%", "D": "使性能下降超过50%", "answer": "C", "score": 5}
{"id": 903, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在Kubernetes中将Traefik配置为Ingress controller时，ServiceAccount的角色是什么？", "A": "它提供访问Kubernetes API所需的认证", "B": "它作为Traefik配置的存储账户", "C": "它管理Kubernetes仪表板中的用户访问", "D": "它记录和监控Traefik活动", "answer": "A", "score": 3}
{"id": 904, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在Kubernetes中部署Traefik作为Ingress controller涉及哪些步骤？", "A": "创建ServiceAccount、ClusterRole，并分配ClusterRoleBinding", "B": "通过简单的Pod部署安装Traefik，不需要RBAC配置", "C": "通过Kubernetes主节点直接安装", "D": "仅通过外部工具配置，不使用kubectl", "answer": "A", "score": 4}
{"id": 905, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果Traefik的pod无法将流量路由到正确的后端服务，应采取什么初步诊断步骤？", "A": "检查Ingress规则配置是否有误", "B": "重启集群中的所有pods", "C": "增加Traefik的副本数量", "D": "删除并重新创建所有服务账户", "answer": "A", "score": 3}
{"id": 906, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在Kubernetes的上下文中，规划集群部署的高可用性时最关键的考虑是什么？", "A": "资源成本", "B": "设置的难易程度", "C": "确保所有组件都是冗余的", "D": "集群中的节点数量", "answer": "C", "score": 5}
{"id": 907, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在Kubernetes集群中错误配置pod CIDR块时会出现什么常见问题？", "A": "未使用资源的成本增加", "B": "pods之间的网络冲突和连接问题", "C": "底层硬件性能下降", "D": "无法部署其他节点", "answer": "B", "score": 4}
{"id": 908, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用 curl 在 Linux 系统上安装 kubectl？", "A": "curl -LO https://storage.googleapis.com/kubernetes-release/release/latest/bin/linux/amd64/kubectl", "B": "curl -LO https://storage.googleapis.com/kubernetes-release/release/stable.txt/bin/linux/amd64/kubectl", "C": "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl", "D": "wget https://storage.googleapis.com/kubernetes-release/release/latest/bin/linux/amd64/kubectl", "answer": "C", "score": 3}
{"id": 909, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用 krew 管理 kubectl 插件的命令是哪个？", "A": "kubectl krew list", "B": "kubectl plugin list", "C": "kubectl krew install", "D": "kubectl krew update", "answer": "D", "score": 3}
{"id": 910, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "安装后将 krew 添加到 PATH 环境变量的命令是什么？", "A": "export PATH=\"$KREW_ROOT/bin:$PATH\"", "B": "export PATH=\"$HOME/.krew/bin:$PATH\"", "C": "export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"", "D": "export PATH=\"/usr/local/krew/bin:$PATH\"", "answer": "C", "score": 4}
{"id": 911, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用 krew 卸载 kubectl 插件？", "A": "kubectl krew delete ssh-jump", "B": "kubectl krew uninstall ssh-jump", "C": "kubectl krew remove ssh-jump", "D": "kubectl plugin remove ssh-jump", "answer": "C", "score": 4}
{"id": 912, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "哪种 Kubernetes 实践最适合创建服务以确保容器在启动时设置正确的环境变量？", "A": "在 pod 之后创建服务", "B": "在相关复制控制器之前创建服务", "C": "使用默认环境变量", "D": "在 pod 创建后手动设置环境变量", "answer": "B", "score": 4}
{"id": 913, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "推荐的镜像拉取策略是什么，以确保 Kubernetes 部署始终使用最新版本的容器镜像？", "A": "使用 'IfNotPresent' 策略", "B": "使用 'Never' 策略", "C": "使用带有 ':latest' 标签的 'Always' 策略", "D": "避免指定镜像拉取策略", "answer": "C", "score": 4}
{"id": 914, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在生产环境中，为什么建议避免在 Kubernetes 部署中使用 ':latest' 镜像标签？", "A": "确保镜像仅被拉取一次", "B": "最小化集群节点上的存储使用", "C": "有助于排查运行容器的特定版本问题", "D": "提供更快的部署速度", "answer": "C", "score": 4}
{"id": 915, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何在 minikube 中运行的 Kubernetes 集群中安装 Calico 作为网络插件？", "A": "kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml", "B": "minikube start --network-plugin=calico", "C": "kubectl install calico", "D": "通过 minikube 设置应用 calico 安装", "answer": "A", "score": 5}
{"id": 916, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何使用 Docker 镜像部署集群自动扩展器（Cluster Autoscaler）？", "A": "使用来自 'gcr.io/google_containers/cluster-autoscaler:v1.3.0' 的镜像", "B": "使用任何通用的 Docker 镜像", "C": "集群自动扩展器不支持 Docker 部署", "D": "使用默认的 Kubernetes 镜像", "answer": "A", "score": 3}
{"id": 917, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "集群自动扩展器在小型和大型集群中的操作能力是什么？", "A": "小型集群在 30 秒内扩展，大型集群在 60 秒内扩展", "B": "扩展小型和大型集群都需要几分钟", "C": "只能有效地扩展小型集群", "D": "不区分小型和大型集群", "answer": "A", "score": 3}
{"id": 918, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个配置选项允许您为集群自动扩展器选择节点组进行扩展？", "A": "--node-select", "B": "--expander=<option>", "C": "--group-size", "D": "--scale-method", "answer": "B", "score": 4}
{"id": 919, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "部署 Kubernetes 仪表板后，如何访问它？", "A": "使用命令 `kubectl proxy` 并通过 http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/ 访问", "B": "通过 Kubernetes API 服务器 URL 直接访问", "C": "部署后自动授予访问权限，无需额外命令", "D": "通过部署仪表板时分配的外部 IP 访问", "answer": "A", "score": 4}
{"id": 920, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在 v1.7 之前，如何导入 API 服务器证书以访问仪表板？", "A": "使用 API 服务器的证书生成 .p12 文件并导入到系统中", "B": "无需证书即可使用 HTTP 直接访问", "C": "证书由 Kubernetes 自动处理，无需手动步骤", "D": "将 API 服务器证书直接导入 Kubernetes 仪表板", "answer": "A", "score": 4}
{"id": 921, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "从 v1.7.0 开始，使用 kubeconfig 文件登录 Kubernetes 仪表板的步骤是什么？", "A": "打开仪表板 URL，会重定向到登录页面，然后选择 kubeconfig 文件", "B": "在仪表板设置中手动配置 kubeconfig 设置", "C": "不支持 kubeconfig 文件；使用令牌登录", "D": "仪表板访问不需要登录", "answer": "A", "score": 3}
{"id": 922, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "从版本 1.8 开始，在 Kubernetes 环境中部署 NVIDIA 设备插件需要哪些步骤？", "A": "安装 Docker CE，添加 NVIDIA 包存储库，并安装 nvidia-docker2", "B": "配置 Docker 守护进程以默认使用 NVIDIA 运行时，并使用 kubectl 部署插件", "C": "仅在 kubelet 和 kube-apiserver 上启用特定功能门", "D": "直接修改 Kubernetes 源代码以支持 NVIDIA GPU", "answer": "B", "score": 4}
{"id": 923, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "使用 Node Affinity 调度特定 GPU 类型的 Pods 需要哪些 Kubernetes 配置？", "A": "标记具有 GPU 类型的节点，并在 Pod 规范中设置 nodeSelector。", "B": "使用 taints 和 tolerations 控制在配备 GPU 的节点上调度 Pod。", "C": "修改调度器配置以自动检测 GPU 类型。", "D": "不需要特定配置；Kubernetes 会自动处理。", "answer": "A", "score": 4}
{"id": 924, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "在 Kubernetes Pod 的 `resources.limits` 部分请求 GPU 但不在 `resources.requests` 中请求 GPU 会产生什么影响？", "A": "由于未请求 GPU 资源，Pod 将不会被调度。", "B": "Pod 可以使用 GPU，但可能无法最佳管理资源使用。", "C": "这会导致更好的性能，因为 Pod 将有保证的 GPU 资源。", "D": "如果未在 limits 和 requests 中同时指定，则 Pod 无法请求 GPU 资源。", "answer": "B", "score": 3}
{"id": 925, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在所有节点上安装 CUDA 和 cuDNN 如何增强使用 NVIDIA GPU 的 Kubernetes 集群的安全性？", "A": "确保所有节点统一更新并减少兼容性问题。", "B": "直接通过保护 GPU 操作增强安全性。", "C": "对安全没有影响，仅关注性能提升。", "D": "通过使用更新的驱动程序防止未经授权访问 GPU 资源。", "answer": "A", "score": 2}
{"id": 926, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 中使用哪个命令从 kube-dns 升级到 CoreDNS？", "A": "kubectl apply -f coredns.yaml", "B": "kubectl upgrade coredns", "C": "kubectl set dns coredns", "D": "./deploy.sh | kubectl apply -f -", "answer": "D", "score": 3}
{"id": 927, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何在 Kubernetes 集群中部署包括 Fluentd、Elasticsearch 和 Kibana 的日志堆栈？", "A": "使用 `kube-up.sh` 命令并设置日志目的地的环境变量。", "B": "手动在各个 pod 上安装每个组件而不进行集成。", "C": "仅安装 Kibana 进行日志管理，因为它集成了所有必要的功能。", "D": "使用 Kubernetes 之外的第三方工具进行部署。", "answer": "A", "score": 4}
{"id": 928, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个组件对管理 Kubernetes 集群内的网络流量至关重要？", "A": "kube-proxy", "B": "fluentd-elasticsearch", "C": "istio", "D": "dns-horizontal-autoscaler", "answer": "A", "score": 3}
{"id": 929, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在 Kubernetes 中用于日志管理的插件是什么？", "A": "dashboard", "B": "dns", "C": "fluentd-elasticsearch", "D": "metrics-server", "answer": "C", "score": 4}
{"id": 930, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "哪个插件有助于在集群节点之间平衡负载？", "A": "cluster-loadbalancing", "B": "node-problem-detector", "C": "dns", "D": "kube-proxy", "answer": "A", "score": 3}
{"id": 931, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何在 Azure CLI 中为 AKS 创建资源组？", "A": "az group make --name group1 --location centralus", "B": "az group start --name group1 --location centralus", "C": "az group create --name group1 --location centralus", "D": "az resource group --name group1 --location centralus", "answer": "C", "score": 3}
{"id": 932, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令用于为新创建的 AKS 集群安装和配置 kubectl？", "A": "az aks install-cli & az aks set-credentials --resource-group=group1 --name=myK8sCluster", "B": "az aks install-cli & az aks get-credentials --resource-group=group1 --name=myK8sCluster", "C": "az kubectl install --resource-group=group1 --name=myK8sCluster", "D": "az aks setup-cli --resource-group=group1 --name=myK8sCluster", "answer": "B", "score": 4}
{"id": 933, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如果 'az aks get-credentials' 因 Azure CLI 版本过时而失败，你应该采取什么故障排除步骤？", "A": "重新安装整个 AKS 集群", "B": "将 Azure CLI 降级到旧版本", "C": "忽略错误", "D": "升级 Azure CLI 到新版本或回滚到 2.0.23 版本", "answer": "D", "score": 4}
{"id": 934, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 Azure CLI 命令用于扩展 AKS 集群？", "A": "az aks scale --resource-group=group1 --name=myK8SCluster --node-count 5", "B": "az aks resize --resource-group=group1 --name=myK8SCluster --size 5", "C": "az aks adjust --resource-group=group1 --name=myK8SCluster --count 5", "D": "az aks set-size --resource-group=group1 --name=myK8SCluster --count 5", "answer": "A", "score": 3}
{"id": 935, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在构建 Kubernetes 镜像的背景下，LinuxKit 的主要功能是什么？", "A": "提供 Kubernetes 管理的 GUI 界面", "B": "使用容器创建最小的、不可变的 Linux 系统框架", "C": "增加可用的 Kubernetes 节点数量", "D": "自动化 Kubernetes 集群升级", "answer": "B", "score": 4}
{"id": 936, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在使用 LinuxKit 部署的 Kubernetes 设置中，执行 'halt' 命令会对节点产生什么影响？", "A": "暂停节点进行维护", "B": "立即重启节点", "C": "关闭节点，将其断电", "D": "将节点从集群中移除", "answer": "C", "score": 3}
{"id": 937, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 kubectl 命令用于查看 Kubernetes 集群中节点的状态？", "A": "kubectl get no", "B": "kubectl status nodes", "C": "kubectl show nodes", "D": "kubectl list nodes", "answer": "A", "score": 3}
{"id": 938, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果使用LinuxKit部署的Kubernetes节点无法访问，诊断网络问题的初始步骤是什么？", "A": "检查Docker命名空间网络设置", "B": "使用kubeadm重启节点", "C": "增加节点的CPU和内存资源", "D": "更换物理网络电缆", "answer": "A", "score": 4}
{"id": 939, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在AWS上使用kops创建高可用Kubernetes集群的命令是什么？", "A": "kops create cluster with specific node and zone parameters", "B": "kops update cluster to enable high availability", "C": "kops high-availability enable", "D": "kubectl create deployment high-availability", "answer": "A", "score": 4}
{"id": 940, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在准备kops部署环境时，哪些AWS CLI命令是必需的？", "A": "aws configure和aws iam list-users", "B": "aws s3api create-bucket和put-bucket-versioning", "C": "所有提到的AWS CLI命令", "D": "仅与IAM相关的命令", "answer": "C", "score": 4}
{"id": 941, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "配置AWS CLI和IAM角色以使用kops的步骤是什么？", "A": "安装AWS CLI，配置IAM策略，并创建用户", "B": "只需安装AWS CLI", "C": "无需AWS CLI即可配置kops", "D": "使用AWS管理控制台而不是CLI", "answer": "A", "score": 4}
{"id": 942, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如何创建S3存储桶并将其配置为使用kops的Kubernetes集群？", "A": "使用aws s3api create-bucket命令并启用版本控制", "B": "通过AWS控制台创建存储桶", "C": "kops不需要创建S3存储桶", "D": "使用kops create bucket命令", "answer": "A", "score": 3}
{"id": 943, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "使用kops在GCE上部署Kubernetes集群使用哪个命令行工具？", "A": "kubectl", "B": "gcloud", "C": "kops", "D": "AWS CLI", "answer": "C", "score": 2}
{"id": 944, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "使用kubeadm在Kubernetes中应用网络插件的命令是什么？", "A": "kubectl apply -f <plugin-url>", "B": "kubeadm apply plugin <plugin-url>", "C": "kubeadm set network-plugin <plugin-url>", "D": "kubectl set network <plugin-url>", "answer": "A", "score": 3}
{"id": 945, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "使用kubeadm初始化Kubernetes主节点的YAML文件的正确配置方法是什么？", "A": "使用包含InitConfiguration和ClusterConfiguration部分的kubeadm.yaml", "B": "仅在kubeadm.yaml中配置ClusterConfiguration", "C": "创建一个包含API服务器设置的简单kubeadm.yaml", "D": "kubeadm不需要YAML配置", "answer": "A", "score": 5}
{"id": 946, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "如何使用kubeadm手动将节点添加到Kubernetes集群中？", "A": "kubeadm add node --config ./nodeconfig.yml", "B": "kubeadm join --config ./nodeconfig.yml", "C": "kubectl join --config ./nodeconfig.yml", "D": "kubeadm connect --config ./nodeconfig.yml", "answer": "B", "score": 4}
{"id": 947, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在使用Kubespray部署的高可用Kubernetes集群中，主节点的作用是什么？", "A": "作为调度和管理整个集群工作负载的主要节点", "B": "作为没有特殊权限的普通工作节点", "C": "仅作为持久卷的存储节点", "D": "仅用于网络流量管理和路由", "answer": "A", "score": 3}
{"id": 948, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "在使用Kubespray部署Kubernetes后，如何检查集群节点的状态？", "A": "使用命令'kubectl get node'列出所有节点及其状态", "B": "检查每台机器的物理连接状态", "C": "使用不集成Kubernetes的第三方监控工具", "D": "调用云提供商的API获取节点状态", "answer": "A", "score": 3}
{"id": 949, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在设置Kubernetes集群时，Kubespray不支持哪个网络插件选项？", "A": "Flannel", "B": "Calico", "C": "Weave", "D": "Istio", "answer": "D", "score": 4}
{"id": 950, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "在通过Kubespray部署的Kubernetes集群中，确保节点通信安全的步骤是什么？", "A": "配置网络策略并使用SSH密钥访问节点", "B": "禁用所有外部通信", "C": "为所有节点使用默认密码", "D": "在部署期间忽略安全配置", "answer": "A", "score": 4}
{"id": 951, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在Kubernetes集群中为控制器管理器和调度器设置'--leader-elect=true'的目的是什么？", "A": "启用自动扩展", "B": "提供负载均衡", "C": "确保一次只运行一个实例", "D": "提高数据吞吐量", "answer": "C", "score": 4}
{"id": 952, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在Kubernetes部署中使用kube-apiserver与负载均衡器的主要目的是什么？", "A": "均衡分配网络流量", "B": "提高数据存储能力", "C": "通过隔离增强安全性", "D": "降低资源使用成本", "answer": "A", "score": 4}
{"id": 953, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Google Cloud SDK 中设置默认计算区域用于 Kubernetes 管理的命令是什么？", "A": "'gcloud compute regions list'", "B": "'gcloud config set compute/region us-west1'", "C": "'gcloud init'", "D": "'gcloud install'", "answer": "B", "score": 4}
{"id": 954, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用 wget 在 Linux 系统上安装 cfssl？", "A": "wget -q --show-progress --https-only --timestamping https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssl", "B": "wget -q --show-progress https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssljson", "C": "A 和 B 都正确", "D": "以上都不正确", "answer": "C", "score": 4}
{"id": 955, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在 Mac OS X 系统上验证 cfssl 版本的命令是什么？", "A": "cfssl version", "B": "cfssl -v", "C": "cfssl --version", "D": "cfssl check version", "answer": "A", "score": 3}
{"id": 956, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "以下哪个命令可以在 Mac OS X 系统上正确安装 kubectl？", "A": "curl -o kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/darwin/amd64/kubectl", "B": "curl -o kubectl https://kubernetes.io/docs/tasks/tools/install-kubectl", "C": "wget https://kubernetes.io/docs/tasks/tools/install-kubectl", "D": "以上都不正确", "answer": "A", "score": 4}
{"id": 957, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何使用 gcloud 命令行工具为 Kubernetes 创建虚拟私有云 (VPC) 网络？", "A": "gcloud compute networks create kubernetes-vpc --subnet-mode custom", "B": "gcloud compute networks create kubernetes-vpc --auto-subnet", "C": "gcloud compute networks create kubernetes-vpc", "D": "gcloud compute networks define kubernetes-vpc --subnet-mode custom", "answer": "A", "score": 4}
{"id": 958, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "哪个防火墙规则命令允许 Kubernetes VPC 网络内的所有协议的内部通信？", "A": "gcloud compute firewall-rules create allow-internal --allow tcp,udp,icmp --network kubernetes-the-hard-way", "B": "gcloud compute firewall-rules create allow-internal --allow all --network kubernetes-the-hard-way", "C": "gcloud compute firewall-rules establish allow-internal --protocol all --network kubernetes-the-hard-way", "D": "gcloud compute firewall-rules set allow-internal --enable tcp,udp,icmp --network kubernetes-the-hard-way", "answer": "A", "score": 4}
{"id": 959, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如何在 Kubernetes 设置中配置防火墙规则以允许外部 SSH、ICMP 和 HTTPS 流量？", "A": "gcloud compute firewall-rules create allow-external --allow tcp:22,tcp:443,icmp --network kubernetes-the-hard-way", "B": "gcloud compute firewall-rules create allow-external --allow tcp:22,tcp:6443,icmp --network kubernetes-the-hard-way", "C": "gcloud compute firewall-rules establish allow-external --protocol tcp:22,tcp:443,icmp --network kubernetes-the-hard-way", "D": "gcloud compute firewall-rules set allow-external --enable tcp:22,tcp:6443,icmp --network kubernetes-the-hard-way", "answer": "B", "score": 4}
{"id": 960, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在 'kubernetes-the-hard-way' VPC 网络中列出所有防火墙规则的命令是什么？", "A": "gcloud compute firewall-rules show --filter=\"network:kubernetes-the-hard-way\"", "B": "gcloud compute firewall-rules list --filter=\"network:kubernetes-the-hard-way\"", "C": "gcloud compute firewall-rules display --filter=\"network:kubernetes-the-hard-way\"", "D": "gcloud compute firewall-rules view --filter=\"network:kubernetes-the-hard-way\"", "answer": "B", "score": 3}
{"id": 961, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "创建证书颁发机构 (CA) 如何使 Kubernetes 环境受益？", "A": "它允许 Kubernetes 横向扩展", "B": "它确保 Kubernetes 组件之间的通信安全", "C": "它提高负载均衡能力", "D": "它简化了应用程序部署过程", "answer": "B", "score": 4}
{"id": 962, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "TLS 证书在 Kubernetes 数据管理策略中的作用是什么？", "A": "它们确保数据在传输中的加密", "B": "它们提供存储优化", "C": "它们自动化数据备份过程", "D": "它们提高数据检索速度", "answer": "A", "score": 3}
{"id": 963, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "在 Kubernetes 的背景下，CA 和 TLS 证书的实施如何有助于灾难恢复？", "A": "它们防止恢复过程中的未经授权访问", "B": "它们确保灾后数据的完整性", "C": "它们促进更快的恢复速度", "D": "它们与灾难恢复没有直接关系", "answer": "B", "score": 3}
{"id": 964, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "配置控制节点上的 Kubernetes API 服务器的必要步骤是什么？", "A": "安装 API 服务器二进制文件，移动必要的证书，创建服务文件，启动服务。", "B": "只需运行 Kubernetes 安装程序并启动服务。", "C": "仅配置绑定地址并启动服务。", "D": "将 API 服务器二进制文件复制到 /usr/bin 并重启服务器。", "answer": "A", "score": 4}
{"id": 965, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何为管理员用户生成 kubeconfig 文件？", "A": "使用 kubectl config set-cluster 和 set-credentials 命令", "B": "复制另一个用户的现有 kubeconfig 文件", "C": "在文本编辑器中手动编辑 kubeconfig 文件", "D": "以上都不正确", "answer": "A", "score": 4}
{"id": 966, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何检查远程 Kubernetes 集群组件的健康状况？", "A": "kubectl get componentstatuses", "B": "kubectl check health", "C": "通过外部工具进行监控", "D": "查看 Kubernetes 仪表板", "answer": "A", "score": 3}
{"id": 967, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "路由表部分旨在收集创建 `kubernetes-the-hard-way` VPC 路由所需的信息。显示的命令列出每个工作节点的内部 IP 地址和 Pod CIDR 范围的意义是什么？", "A": "它确认网络接口和元数据设置是否正确。", "B": "它与 Kubernetes 网络无关。", "C": "它有助于解决应用程序部署问题。", "D": "它用于设置外部网络访问。", "answer": "A", "score": 3}
{"id": 968, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "在所描述的 Kubernetes 设置中，用于为每个工作节点创建网络路由的命令序列的目的是什么？", "A": "通过脚本自动创建网络路由。", "B": "手动设置 DNS 配置。", "C": "监控节点之间的网络流量。", "D": "更新 Kubernetes 到最新版本。", "answer": "A", "score": 4}
{"id": 969, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何列出 `kube-system` 命名空间中 `kube-dns` 部署的 pods？", "A": "kubectl get pods -n kube-system", "B": "kubectl describe pod kube-dns -n kube-system", "C": "kubectl get pods -l k8s-app=kube-dns -n kube-system", "D": "kubectl list all pods in kube-dns", "answer": "C", "score": 4}
{"id": 970, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在 Kubernetes 中创建一个 nginx web 服务部署应该使用什么命令？", "A": "kubectl create service nginx --image=nginx", "B": "kubectl create pod nginx --image=nginx", "C": "kubectl create deployment nginx --image=nginx", "D": "docker run nginx", "answer": "C", "score": 3}
{"id": 971, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何在 Kubernetes 中对 nginx pod 进行端口转发？", "A": "kubectl port-forward pod_name 8080:80", "B": "kubectl forward ports nginx 8080:80", "C": "docker port-forward nginx 8080:80", "D": "kubectl expose nginx 8080 --type=PortForward", "answer": "A", "score": 4}
{"id": 972, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何从运行在 Kubernetes pod 中的 nginx 容器获取日志？", "A": "kubectl logs nginx", "B": "docker logs nginx", "C": "kubectl logs pod_name", "D": "nginx -v", "answer": "C", "score": 4}
{"id": 973, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 集群中运行的容器内执行命令使用哪个命令？", "A": "docker exec -ti container_name -- command", "B": "kubectl exec -ti pod_name -- command", "C": "ssh into pod and execute command", "D": "kubectl run pod_name --command", "answer": "B", "score": 4}
{"id": 974, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何在 Kubernetes 中将部署暴露为 NodePort 服务？", "A": "kubectl expose pod nginx --port 80 --type NodePort", "B": "kubectl expose deployment nginx --port 80 --type NodePort", "C": "kubectl create service nginx NodePort --port 80", "D": "docker expose nginx --port 80 --type NodePort", "answer": "B", "score": 4}
{"id": 975, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "哪种 Kubernetes 功能确保即使多个节点故障，应用程序仍然可用？", "A": "Pod replication", "B": "Horizontal Pod Autoscaling", "C": "Node auto-repair", "D": "Deployment strategies", "answer": "B", "score": 4}
{"id": 976, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "当 kube-apiserver 和其他控制平面组件作为静态 Pod 部署时，如何获取其日志？", "A": "使用 kubectl logs 和 pod 名称及命名空间", "B": "直接 SSH 进入主节点并使用 journalctl", "C": "静态 Pod 的日志不可用", "D": "使用 Kubernetes dashboard 查看日志", "answer": "A", "score": 4}
{"id": 977, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果 kube-dns 遇到 CrashLoopBackOff 错误，应该如何排查和解决问题？", "A": "重启 kube-dns pods 直到它们没有错误运行", "B": "检查 kube-dns 容器的日志并解决任何 DNS 请求转发错误", "C": "增加 kube-dns 部署的 CPU 和内存限制", "D": "重建集群以确保所有配置正确", "answer": "B", "score": 4}
{"id": 978, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "对于由于 PLEG 问题导致的 Node NotReady 状态应该采取哪些步骤？", "A": "重启 Kubelet 并检查问题是否仍然存在", "B": "删除并重新创建受影响的节点", "C": "忽略，因为它不会影响集群性能", "D": "将集群升级到最新的 Kubernetes 版本", "answer": "A", "score": 3}
{"id": 979, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "用于检查可用 Kubernetes 节点及其状态的命令是哪个？", "A": "kubectl get nodes", "B": "kubectl check nodes", "C": "kubectl nodes list", "D": "kubectl describe all nodes", "answer": "A", "score": 2}
{"id": 980, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在 Kubernetes 中，Pods 无法访问外部网络的常见原因是什么？如何解决？", "A": "CNI 插件配置错误，确保正确配置和 IP 转发", "B": "kube-proxy 问题，验证其是否正在运行并正确配置", "C": "硬件问题，更换网络硬件", "D": "服务配置错误，调整服务设置", "answer": "A", "score": 4}
{"id": 981, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如何在 Kubernetes 中部署和排查处于 Init:CrashLoopBackOff 状态的 Flannel Pods？", "A": "检查 SELinux 强制模式并禁用它", "B": "增加内存和 CPU 资源", "C": "重新安装 Kubernetes 集群", "D": "以上都不是", "answer": "A", "score": 5}
{"id": 982, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "使用 Kubernetes 网络插件时，如何解决 Pods 的 IP 分配失败问题？", "A": "重启网络插件以重置 IP 分配", "B": "检查并手动清理未使用的已分配 IP", "C": "通过扩展网络范围增加可用 IP 数量", "D": "以上都是", "answer": "D", "score": 5}
{"id": 983, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在 Kubernetes 集群中解决 DNS 解析问题需要哪些步骤？", "A": "确保 kube-dns 或 CoreDNS 正在运行并正确配置", "B": "更新每个节点上的 iptables FORWARD 策略", "C": "A 和 B 都需要", "D": "以上都不是", "answer": "C", "score": 4}
{"id": 984, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "什么原因会导致 Kubernetes 中的 Service 无法访问 Endpoints，以及如何解决这个问题？", "A": "LabelSelector 配置错误，重新配置或修正标签", "B": "Pods 未运行，确保 pods 正确部署", "C": "CNI 问题，排查 CNI 连接性", "D": "以上所有", "answer": "D", "score": 5}
{"id": 985, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "当 Pod 处于 Waiting 或 ContainerCreating 状态时，用于检查与 Pod 状态相关事件的命令是哪个？", "A": "kubectl get events", "B": "kubectl describe pod <pod-name>", "C": "kubectl logs <pod-name>", "D": "kubectl get pod <pod-name>", "answer": "B", "score": 4}
{"id": 986, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "Pod 保持在 ImagePullBackOff 状态的常见原因是什么，以及如何解决？", "A": "CPU 不足，增加节点大小", "B": "网络问题，重启 CNI 插件", "C": "镜像名称错误，使用 `docker pull <image>` 验证", "D": "高内存使用，增加 pod 限制", "answer": "C", "score": 5}
{"id": 987, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如何调查 Pod 处于 CrashLoopBackOff 状态的原因？", "A": "使用 `kubectl describe pod <pod-name>` 检查 Pod 的事件", "B": "检查节点的 CPU 使用情况", "C": "增加 pod 的内存限制", "D": "重启 Kubernetes API 服务器", "answer": "A", "score": 4}
{"id": 988, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "当 Pod 因网络插件错误失败时，检查哪些日志至关重要？", "A": "Scheduler 日志", "B": "Kubelet 日志", "C": "API server 日志", "D": "ETCD server 日志", "answer": "B", "score": 4}
{"id": 989, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "使用哪个命令查看 Kubernetes 组件的日志？", "A": "kubectl logs", "B": "journalctl -u kubelet -l", "C": "kubectl describe pod", "D": "sysdig -w filename.scap", "answer": "B", "score": 4}
{"id": 990, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何检查 kube-proxy 配置的 iptables 规则是否正确？", "A": "kubectl get iptables", "B": "iptables -L", "C": "iptables -t nat -nL", "D": "kubectl describe service", "answer": "C", "score": 4}
{"id": 991, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "推荐使用哪种工具来调查 Kubernetes 中的 Linux 内核性能问题？", "A": "kubectl top", "B": "journalctl", "C": "tcpdump", "D": "perf", "answer": "D", "score": 4}
{"id": 992, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果 Windows Pod 保持在 ContainerCreating 状态，可能的原因是什么？", "A": "Pause 镜像配置错误", "B": "容器镜像版本与 Windows 不兼容", "C": "Kubernetes 服务账户配置错误", "D": "网络策略阻止了部署", "answer": "A", "score": 4}
{"id": 993, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "Windows Pods 中 DNS 解析问题的已知临时解决方案是什么？", "A": "重启 Windows 并重新启动 KubeProxy", "B": "为 Pods 直接配置 kube-dns Pod 的地址", "C": "增加每个节点运行的 Pods 数量", "D": "以上所有", "answer": "D", "score": 4}
{"id": 994, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "解决 'Remote endpoint creation failed: HNS failed with error: The switch-port was not found' 错误需要采取什么操作？", "A": "安装更新 KB4089848", "B": "重新配置 HNS 策略", "C": "重启 Docker 服务", "D": "检查虚拟交换机配置", "answer": "A", "score": 4}
{"id": 995, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如果 Windows Pod 无法访问 ServiceAccount Secrets，应该采取什么步骤？", "A": "重启节点", "B": "检查 Pod 的服务账户配置", "C": "将 Windows 升级到 1803 版本", "D": "重新安装 Kubernetes 集群", "answer": "C", "score": 3}
{"id": 996, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如果 Kubelet 在 Docker 18.03 上无法启动，Windows 的 Docker API 版本应该如何设置？", "A": "将 DOCKER_API_VERSION 设置为 1.37", "B": "将 Docker 升级到最新版本", "C": "降级 Kubernetes 版本", "D": "使用默认设置重新安装 Docker", "answer": "A", "score": 4}
{"id": 997, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在设置 Kubernetes 集群后使用 Azure Cloud Provider 时，LoadBalancer 类型的 Service 会创建 Azure 负载均衡器以及相关的公共 IP、BackendPool 和网络安全组 (NSG)。使用 Basic SKU 负载均衡器相比 Standard SKU 有什么限制？", "A": "Basic SKU 支持最多 100 个后端池大小，而 Standard 支持最多 1,000 个", "B": "Basic SKU 支持 HA 端口，而 Standard 不支持", "C": "Basic SKU 有限的诊断功能，仅适用于公共 IP", "D": "Basic SKU 不需要在 NIC/子网上配置网络安全组", "answer": "C", "score": 4}
{"id": 998, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在Azure上的Kubernetes中，LoadBalancer服务的EXTERNAL-IP处于'pending'状态时，应采取哪些步骤进行故障排除？", "A": "检查kube-controller-manager日志中的错误", "B": "验证与Azure API的网络连接", "C": "确保Azure配置中的clientId和clientSecret正确", "D": "以上所有", "answer": "D", "score": 4}
{"id": 999, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在Azure Kubernetes Service中，尽管服务已正确配置，但LoadBalancer的公共IP仍无法访问，可能是什么原因？", "A": "后端虚拟机无响应或未运行", "B": "防火墙或NSG阻止端口访问", "C": "由于后端容器问题导致负载均衡器探测失败", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1000, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "如果在Kubernetes集群版本1.9.0至1.9.3中的Azure内部负载均衡器的BackendPool显示为空，应检查什么？", "A": "检查负载均衡器配置期间与AvaibilitySet搜索相关的问题", "B": "验证节点是否已用其主机名在Azure中注册", "C": "确保负载均衡器的SKU与Kubernetes版本兼容", "D": "检查Azure Cloud Provider日志中的错误", "answer": "A", "score": 4}
{"id": 1001, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在公共云上运行的Kubernetes中，是什么原因可能导致跨主机的Pod连接问题，以及这种问题的典型迹象是什么？", "A": "服务类型配置不正确", "B": "路由规则配置错误", "C": "Pod未在节点上调度", "D": "服务端口冲突", "answer": "B", "score": 4}
{"id": 1002, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在公共云平台上，Kubernetes中的LoadBalancer类型服务分配公共IP失败的常见原因是什么？", "A": "LoadBalancer配置错误", "B": "云提供商的公共IP限制", "C": "安全组限制", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1003, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "在公共云平台上为Kubernetes中的服务配置安全组时的典型问题是什么？", "A": "与现有安全组冲突", "B": "超出安全组配额限制", "C": "网络策略配置错误", "D": "A和B都对", "answer": "D", "score": 4}
{"id": 1004, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "在公共云平台上的Kubernetes中分配或挂载持久存储时可能出现什么问题？", "A": "持久卷（PV）超出配额", "B": "PV配置错误", "C": "PV被另一个pod锁定", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1005, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在公共云平台上的Kubernetes中，错误使用网络插件可能导致什么问题？", "A": "使用云平台不支持的网络协议", "B": "网络分段不正确", "C": "干扰云提供商的网络控制", "D": "以上所有", "answer": "A", "score": 3}
{"id": 1006, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes如何分类AzureDisk类型，这些分类对部署有什么影响？", "A": "托管磁盘和Blob磁盘，其中Blob磁盘允许共享存储账户", "B": "仅支持托管磁盘，具有自动调整大小功能", "C": "Blob磁盘创建速度更快，但托管磁盘提供更好的数据持久性", "D": "所有磁盘类型都支持共享存储账户和自动数据管理", "answer": "A", "score": 4}
{"id": 1007, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "将AzureDisk从一个Pod移动到另一个节点时可能出现什么常见问题，以及如何解决？", "A": "磁盘类型不匹配导致附加错误，通过确保一致的磁盘类型来解决", "B": "性能下降，通过升级到更高的磁盘性能层来解决", "C": "由于权限不足导致访问错误，通过更新IAM角色来解决", "D": "在附加/分离操作期间的锁定错误，通过手动干预或控制器更新来解决", "answer": "D", "score": 4}
{"id": 1008, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "在节点上挂载额外磁盘时，AzureDisk可能出现什么潜在问题，以及如何缓解？", "A": "磁盘字母更改导致访问问题，通过缓存设置或使用不同磁盘类型来缓解", "B": "由于网络拥塞导致延迟增加，通过网络策略调整来缓解", "C": "资源过度配置，通过更好的资源分配策略来缓解", "D": "由于共享磁盘导致的安全漏洞，通过严格的访问控制来缓解", "answer": "A", "score": 5}
{"id": 1009, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "Kubernetes中对AzureDisk挂载过程进行了哪些改进以减少时间，以及哪些Kubernetes版本包含这些改进？", "A": "为VM数据添加缓存，减少设置时间，从v1.9.2+开始包含", "B": "磁盘附件的并行处理，从v1.10+开始包含", "C": "优化对Azure ARM的API调用，从v1.11+开始包含", "D": "引入异步磁盘格式化，从v1.12+开始包含", "answer": "A", "score": 4}
{"id": 1010, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "AzureFile用于托管托管文件共享的主要协议是什么？", "A": "NFS", "B": "SMB", "C": "iSCSI", "D": "FTP", "answer": "B", "score": 3}
{"id": 1011, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "推荐使用哪个Kubernetes版本来使用AzureFile 1.14版本？", "A": "1.14.0或更高版本", "B": "1.12.6或更高版本", "C": "1.13.4或更高版本", "D": "1.15或更高版本", "answer": "A", "score": 3}
{"id": 1012, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes v1.9.0版本的默认`fileMode`和`dirMode`是什么？", "A": "0777", "B": "0755", "C": "0700", "D": "0711", "answer": "C", "score": 4}
{"id": 1013, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "如果 Windows Node 在重启后无法访问 AzureFile，通常会看到什么错误？", "A": "Error response from daemon: invalid bind mount spec", "B": "Failed to pull image", "C": "Container runtime error", "D": "Kubelet start-up failure", "answer": "A", "score": 4}
{"id": 1014, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如何列出集群中所有的 Persistent Volumes、Persistent Volume Claims 和 Storage Classes？", "A": "kubectl get pods", "B": "kubectl get pv, pvc, sc", "C": "kubectl get pv; kubectl get pvc; kubectl get sc", "D": "kubectl list all", "answer": "C", "score": 2}
{"id": 1015, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如果需要排查 Persistent Volume Claim，哪个命令会提供最详细的信息？", "A": "kubectl describe pv <pv-name>", "B": "kubectl describe pvc <pvc-name>", "C": "kubectl get pvc", "D": "kubectl get sc", "answer": "B", "score": 4}
{"id": 1016, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何优化 Kubernetes 中的资源分配？", "A": "使用 Horizontal Pod Autoscaling", "B": "为 Pods 设置资源请求和限制", "C": "使用 Cluster Autoscaler", "D": "以上皆是", "answer": "D", "score": 5}
{"id": 1017, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Ingress 在 Kubernetes 中的用途是什么？", "A": "从集群外部暴露 HTTP 和 HTTPS 路由到集群内的服务", "B": "为 Pods 提供网络策略", "C": "管理集群内部流量", "D": "在不同集群之间路由流量", "answer": "A", "score": 4}
{"id": 1018, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如何增强 Kubernetes 集群的安全性？", "A": "实施角色基于访问控制 (RBAC)", "B": "启用网络策略", "C": "使用 pod 安全策略", "D": "以上皆是", "answer": "D", "score": 5}
{"id": 1019, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 中 Persistent Volumes 的用途是什么？", "A": "提供超越单个 Pod 生命周期的持久存储", "B": "存储 Kubernetes 资源的配置数据", "C": "管理集群内的数据复制", "D": "存储 Docker 镜像", "answer": "A", "score": 4}
{"id": 1020, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪种工具通常用于监控 Kubernetes 集群？", "A": "Prometheus", "B": "Elasticsearch", "C": "Grafana", "D": "以上皆是", "answer": "A", "score": 5}
{"id": 1021, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "管理 Kubernetes 配置的推荐做法是什么？", "A": "使用 ConfigMaps", "B": "直接在 Pod 清单中存储配置", "C": "在应用代码中硬编码配置", "D": "以上皆是", "answer": "A", "score": 4}
{"id": 1022, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "如何确保 Kubernetes 集群的高可用性？", "A": "部署多个应用副本", "B": "使用 Pod 反亲和性", "C": "实施集群备份和故障转移策略", "D": "以上皆是", "answer": "D", "score": 5}
{"id": 1023, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "Kubernetes 中集群网络配置错误的常见问题是什么？", "A": "Pods 之间无法相互通信", "B": "Pods 资源使用过多", "C": "API 服务器响应延迟高", "D": "以上皆非", "answer": "A", "score": 4}
{"id": 1024, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如何在 Kubernetes 中处理应用的扩展？", "A": "手动调整 Pod 副本数量", "B": "使用 Horizontal Pod Autoscaling", "C": "重新启动应用 Pods", "D": "以上皆非", "answer": "B", "score": 5}
{"id": 1025, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何诊断 Kubernetes 中 Pods 之间的网络连接问题？", "A": "检查 Pod 日志", "B": "检查网络策略", "C": "在 Pods 内使用 traceroute 或 ping 等工具", "D": "以上皆是", "answer": "C", "score": 4}
{"id": 1026, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "采取什么方法来识别 Kubernetes 集群中的性能瓶颈？", "A": "使用监控工具分析资源使用指标", "B": "检查 Pod 配置文件", "C": "使用 kubectl 命令检查集群节点状态", "D": "以上皆非", "answer": "A", "score": 5}
{"id": 1027, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如何解决 Kubernetes 集群中的安全漏洞？", "A": "对底层节点应用安全补丁", "B": "更新 Kubernetes 到最新版本", "C": "配置 RBAC 和网络策略", "D": "以上皆是", "answer": "D", "score": 5}
{"id": 1028, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "Kubernetes中持久卷可能会出现什么问题？", "A": "由于复制不足导致的数据丢失", "B": "大卷的性能下降", "C": "无法动态提供存储", "D": "以上都不是", "answer": "C", "score": 4}
{"id": 1029, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "如何排查Kubernetes日志系统的故障？", "A": "检查日志Pods的状态", "B": "检查集群节点上的日志文件", "C": "分析监控工具的指标", "D": "以上都是", "answer": "B", "score": 4}
{"id": 1030, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "在Kubernetes中调试应用程序问题的步骤是什么？", "A": "查看应用程序代码是否有错误", "B": "检查Pod的状态和日志", "C": "分析Pods之间的网络流量", "D": "以上都是", "answer": "D", "score": 5}
{"id": 1031, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个kubectl命令可以获取Pod的信息？", "A": "kubectl get pods", "B": "kubectl describe pod", "C": "kubectl create pod", "D": "kubectl delete pod", "answer": "B", "score": 5}
{"id": 1032, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "使用哪组kubectl命令可以在Kubernetes中部署应用程序？", "A": "kubectl apply -f deployment.yaml", "B": "kubectl create -f service.yaml", "C": "kubectl scale deployment", "D": "kubectl expose deployment", "answer": "A", "score": 5}
{"id": 1033, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "Kubernetes中的自动化脚本的作用是什么？", "A": "简化重复性任务如部署和扩展", "B": "手动执行管理命令", "C": "排除单个Pod的故障", "D": "以上都不是", "answer": "A", "score": 4}
{"id": 1034, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的核心存储概念及其关系是什么？", "A": "Volume, PersistentVolume, PersistentVolumeClaim, StorageClass", "B": "Pod, Node, Cluster, ReplicaSet", "C": "Deployment, Service, Ingress, Network Policy", "D": "ConfigMap, Secret, StatefulSet, DaemonSet", "answer": "A", "score": 5}
{"id": 1035, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的基本构建块是什么？", "A": "Pods", "B": "Nodes", "C": "Clusters", "D": "以上都是", "answer": "D", "score": 4}
{"id": 1036, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何在资源分配方面提高Kubernetes集群的性能？", "A": "为Pods配置资源请求和限制", "B": "使用水平Pod自动扩展", "C": "实施集群范围的负载均衡", "D": "以上都是", "answer": "D", "score": 4}
{"id": 1037, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes中Ingress的作用是什么？", "A": "将来自Kubernetes集群外部的HTTP和HTTPS路由暴露给集群内的服务", "B": "管理Pods的网络策略", "C": "为服务提供内部负载均衡", "D": "存储和管理网络配置数据", "answer": "A", "score": 5}
{"id": 1038, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如何在Kubernetes中实施网络策略以控制Pods之间的流量？", "A": "使用Ingress控制器", "B": "配置Pod安全策略", "C": "定义NetworkPolicy资源", "D": "实施基于角色的访问控制（RBAC）", "answer": "C", "score": 4}
{"id": 1039, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes中持久卷的作用是什么？", "A": "在单个Pod的生命周期之外持久存储数据", "B": "为Pods提供高速缓存", "C": "促进同一Node内的Pods之间的通信", "D": "提高StatefulSets的性能", "answer": "A", "score": 5}
{"id": 1040, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪种工具常用于监控Kubernetes集群？", "A": "Prometheus", "B": "Elasticsearch", "C": "Grafana", "D": "Kibana", "answer": "A", "score": 5}
{"id": 1041, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes操作和维护的一些最佳实践是什么？", "A": "定期将Kubernetes组件更新到最新版本", "B": "实施集群数据的自动备份和恢复程序", "C": "使用kubectl直接修改集群状态", "D": "为了提高性能以提升权限运行工作负载", "answer": "B", "score": 4}
{"id": 1042, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "如何确保Kubernetes集群的高可用性？", "A": "为所有Pods配置自动扩展", "B": "在不同的Nodes上部署关键应用程序的多个副本", "C": "设置定期集群备份", "D": "禁用安全功能以减少延迟", "answer": "B", "score": 4}
{"id": 1043, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "Kubernetes集群中配置错误的一些常见原因是什么？", "A": "错误设置Pod的资源限制", "B": "未能配置网络策略", "C": "存储资源分配不足", "D": "以上全部", "answer": "D", "score": 3}
{"id": 1044, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如何排查与Kubernetes中应用程序部署相关的问题？", "A": "通过使用kubectl get pods检查Pod状态", "B": "通过查看已部署Pod的日志", "C": "通过检查Pod的资源请求和限制", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1045, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "在Kubernetes集群中诊断网络连接问题的步骤是什么？", "A": "检查应用于相关Pod的网络策略", "B": "检查服务端点的DNS解析", "C": "使用监控工具查看网络吞吐量指标", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1046, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如何识别和解决Kubernetes集群中的性能瓶颈？", "A": "通过分析Pod和节点的资源使用指标", "B": "通过为频繁访问的数据实施缓存机制", "C": "通过调整关键工作负载的调度优先级", "D": "以上全部", "answer": "A", "score": 5}
{"id": 1047, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "Kubernetes中常见的一些安全漏洞是什么以及如何减轻这些漏洞？", "A": "具有过多权限的Pod", "B": "通过环境变量暴露敏感数据", "C": "使用默认或弱认证机制", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1048, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如何排查与Kubernetes中持久卷相关的问题？", "A": "检查PersistentVolumeClaims的状态", "B": "查看存储类配置", "C": "检查与持久卷相关的事件", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1049, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "在设置Kubernetes集群的监控和日志记录时遇到的一些常见挑战是什么？", "A": "难以关联日志和指标", "B": "Kubernetes监控工具的可用性有限", "C": "无法随着集群规模扩展监控基础设施", "D": "以上全部", "answer": "A", "score": 5}
{"id": 1050, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如何排查Kubernetes环境中特定应用程序的问题？", "A": "通过使用kubectl检查Pod状态和事件", "B": "通过查看应用程序日志和指标", "C": "通过调整应用程序的资源请求和限制", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1051, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "查看Kubernetes集群中Pod状态的kubectl命令是什么？", "A": "kubectl describe pods", "B": "kubectl get pods", "C": "kubectl apply -f pods.yaml", "D": "kubectl scale deployment", "answer": "B", "score": 5}
{"id": 1052, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "描述在Kubernetes中部署新应用程序所需的kubectl命令序列。", "A": "kubectl create deployment, kubectl expose deployment, kubectl get services", "B": "kubectl apply -f deployment.yaml, kubectl expose service, kubectl get pods", "C": "kubectl run, kubectl expose deployment, kubectl get pods", "D": "kubectl apply -f deployment.yaml, kubectl create service, kubectl get deployments", "answer": "B", "score": 4}
{"id": 1053, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "导致集群不稳定的一些常见错误配置是什么？", "A": "资源分配错误", "B": "网络策略不足", "C": "安全设置不当", "D": "以上全部", "answer": "D", "score": 3}
{"id": 1054, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "如何使用kubectl检查特定Pod的状态？", "A": "kubectl pod status [pod_name]", "B": "kubectl get pods [pod_name]", "C": "kubectl describe pod [pod_name]", "D": "kubectl inspect pod [pod_name]", "answer": "C", "score": 5}
{"id": 1055, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes中StorageWithCacher和UndecoratedStorage的目的是什么？", "A": "为带缓存的间接etcd操作创建缓存器", "B": "执行不带缓存的直接etcd操作", "C": "优化Kubernetes集群中的资源分配", "D": "处理Kubernetes中的网络连接问题", "answer": "A", "score": 5}
{"id": 1056, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如何排查Kubernetes中的'PodPending'问题？", "A": "检查Pod所需资源是否超过节点上的可用资源。", "B": "检查集群的网络配置，以确保节点之间的正确通信。", "C": "查看Pod的配置文件，确保没有任何语法错误。", "D": "验证是否为Pod分配了正确的服务帐户以访问所需资源。", "answer": "A", "score": 3}
{"id": 1057, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何在Kubernetes中优化资源分配？", "A": "通过手动指定容器的资源请求和限制。", "B": "通过允许Kubernetes根据容器使用情况自动分配资源。", "C": "通过禁用资源管理以确保最大灵活性。", "D": "通过仅部署低资源需求的应用程序。", "answer": "A", "score": 4}
{"id": 1058, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在 Kubernetes 中，Ingress 的目的是什么？", "A": "管理集群中的容器化应用程序", "B": "将集群外部的 HTTP 和 HTTPS 路由暴露给集群内的服务", "C": "管理网络策略和访问控制", "D": "管理有状态应用程序的持久存储", "answer": "B", "score": 5}
{"id": 1059, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何在 Kubernetes 中优化资源分配？", "A": "通过手动为 Pod 分配资源", "B": "通过使用 Horizontal Pod Autoscaler 根据 CPU 或内存使用情况扩展 Pod", "C": "通过限制节点中的 Pod 数量", "D": "通过禁用 Pod 的资源请求和限制", "answer": "B", "score": 5}
{"id": 1060, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "在 Kubernetes 集群中，Pod 无法相互通信的原因可能是什么？", "A": "网络策略配置错误", "B": "分配给 Pod 的 CPU 资源不足", "C": "缺乏用于 Pod 通信的 SSL 证书", "D": "Kubernetes 版本过时", "answer": "A", "score": 4}
{"id": 1061, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如何排查 Deployment 未按预期扩展的问题？", "A": "检查节点中是否有待处理的 Pod 驱逐", "B": "检查 Deployment 中 Pod 的资源请求和限制", "C": "确保 Horizontal Pod Autoscaler 配置正确", "D": "重启受影响节点上的 kubelet 服务", "answer": "C", "score": 5}
{"id": 1062, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 的基本构建块是什么？", "A": "Pods", "B": "Nodes", "C": "Clusters", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1063, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何提高 Kubernetes 集群的性能？", "A": "通过优化资源分配", "B": "通过实施负载均衡策略", "C": "通过优化调度", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1064, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "什么是 Kubernetes 中的 Ingress 及其配置方法？", "A": "Ingress 是一种 API 对象，用于管理集群中服务的外部访问", "B": "它通过定义规则和配置 Ingress 资源来配置外部流量的路由", "C": "它基于主机名或路径提供 HTTP 和 HTTPS 路由到服务", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1065, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "如何增强 Kubernetes 集群的安全性？", "A": "通过实施如 RBAC 等认证机制", "B": "通过定义网络策略来控制 Pod 之间的流量", "C": "通过配置基于角色的访问控制 (RBAC) 来调节资源访问", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1066, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "什么是 Kubernetes 中的持久卷 (PV) 及其使用方法？", "A": "持久卷 (PV) 是一种为 Pod 提供持久存储的方法，与 Pod 的生命周期无关", "B": "它们通过定义 PersistentVolumeClaim (PVC) 来使用，PVC 是 Pod 对存储的请求", "C": "持久卷 (PV) 可以动态配置或静态配置", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1067, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "有哪些常用的 Kubernetes 集群监控工具？", "A": "Prometheus", "B": "Elasticsearch", "C": "Grafana", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1068, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何管理 Kubernetes 集群中的配置？", "A": "通过使用 ConfigMaps 将配置工件与镜像内容分离", "B": "通过 YAML 或 JSON 格式定义配置文件", "C": "通过使用 Helm 等工具管理应用程序打包和部署", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1069, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "确保 Kubernetes 集群高可用性可以采用哪些策略？", "A": "实施集群备份和恢复程序", "B": "设置自动故障转移机制", "C": "使用多区域部署将工作负载分布在多个可用区", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1070, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如何排查 Kubernetes 集群中频繁节点故障的问题？", "A": "使用 kubectl 命令检查节点健康状况和资源利用情况", "B": "检查集群配置，查看是否有与节点管理相关的配置错误", "C": "分析系统日志和事件，识别导致节点故障的模式或错误", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1071, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "在 Kubernetes 中，扩展 Deployment 的步骤是什么？", "A": "使用 kubectl scale 命令增加 Deployment 的副本数量", "B": "修改 Deployment 清单的资源请求和限制", "C": "监控集群资源，确保有足够的容量进行扩展", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1072, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何诊断 Kubernetes 集群中 Pod 之间的网络连接问题？", "A": "检查影响 Pod 间通信的网络策略和防火墙规则", "B": "检查 Pod 网络配置，确保正确的 DNS 解析", "C": "使用 traceroute 或 ping 等工具排查 Pod 之间的连接问题", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1073, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "你会采取哪些步骤来识别和解决Kubernetes集群中的性能瓶颈？", "A": "使用Prometheus和Grafana等工具监控资源利用率", "B": "查看应用程序日志和性能指标以识别瓶颈", "C": "根据工作负载需求垂直或水平扩展资源", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1074, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "你如何减轻Kubernetes集群中的安全漏洞？", "A": "定期为集群组件应用安全补丁和更新", "B": "实施网络策略和RBAC以限制对敏感资源的访问", "C": "在部署之前扫描容器镜像以查找已知漏洞", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1075, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "你将如何排查Kubernetes中无法绑定的持久卷声明（PVC）问题？", "A": "检查PVC引用的存储类是否在集群中可用", "B": "验证底层存储提供程序是否配置正确且可访问", "C": "检查与PVC相关的事件以识别任何错误或警告", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1076, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "你会采取哪些步骤来解决Kubernetes集群中出现的日志问题？", "A": "检查部署在集群中的日志代理（如Fluentd或Logstash）的配置", "B": "查看日志组件的资源分配以确保其具有足够的容量", "C": "监控日志组件与中央日志系统之间的网络连接", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1077, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "你将如何排查Kubernetes中运行的无法访问外部服务的应用程序？", "A": "检查服务配置以确保指定了正确的端点", "B": "查看可能阻止出站流量的网络策略和防火墙规则", "C": "检查集群中的DNS解析以确保正确的名称解析", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1078, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个命令来检查Kubernetes命名空间中所有Pod的状态？", "A": "kubectl get pods", "B": "kubectl describe pods", "C": "kubectl logs pods", "D": "kubectl exec pods", "answer": "A", "score": 4}
{"id": 1079, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "你如何提高Kubernetes集群的性能？", "A": "通过优化资源分配", "B": "通过实施负载均衡策略", "C": "通过优化调度", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1080, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes中的Ingress是什么以及如何配置？", "A": "Ingress是管理集群中服务外部访问的API对象", "B": "它通过定义规则和配置路由外部流量的Ingress资源进行配置", "C": "它基于主机名或路径提供HTTP和HTTPS路由到服务", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1081, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "你如何增强Kubernetes集群的安全性？", "A": "通过实施RBAC等身份验证机制", "B": "通过定义网络策略来控制Pod之间的流量", "C": "通过配置基于角色的访问控制（RBAC）来调节对资源的访问", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1082, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "什么是Kubernetes中的持久卷（PV），以及它们是如何使用的？", "A": "PV是一种向Kubernetes Pod提供独立于Pod生命周期的持久存储的方法", "B": "它们通过定义由Pod请求存储的PersistentVolumeClaims（PVC）来使用", "C": "PV可以动态配置或静态配置", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1083, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "用于监控Kubernetes集群的一些常用工具是什么？", "A": "Prometheus", "B": "Elasticsearch", "C": "Grafana", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1084, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "你如何管理Kubernetes集群中的配置？", "A": "通过使用ConfigMaps将配置工件与镜像内容分离", "B": "通过以YAML或JSON格式定义配置文件", "C": "通过使用Helm等工具管理应用程序打包和部署", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1085, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "可以采用哪些策略来确保Kubernetes集群的高可用性？", "A": "实施集群备份和恢复程序", "B": "设置自动故障转移机制", "C": "使用多区域部署将工作负载分布在多个可用区域", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1086, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "你将如何排查Kubernetes集群中频繁的节点故障问题？", "A": "使用kubectl命令检查节点健康状况和资源利用率", "B": "查看集群配置中与节点管理相关的任何错误配置", "C": "分析系统日志和事件以识别导致节点故障的任何模式或错误", "D": "以上全部", "answer": "D", "score": 5}
{"id": 1087, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "你会采取哪些步骤来扩展Kubernetes中的部署？", "A": "使用kubectl scale命令增加部署的副本数量", "B": "修改部署清单的资源请求和限制", "C": "监控集群资源并确保有足够的容量进行扩展", "D": "以上全部", "answer": "D", "score": 4}
{"id": 1088, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何诊断Kubernetes集群中pod之间的网络连接问题？", "A": "检查影响pod间通信的网络策略和防火墙规则", "B": "查看pod网络配置并确保DNS解析正确", "C": "使用traceroute或ping等工具排除pod之间的连接故障", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1089, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如何识别和解决Kubernetes集群中的性能瓶颈？", "A": "使用Prometheus和Grafana等工具监控资源利用情况", "B": "查看应用程序日志和性能指标以识别瓶颈", "C": "根据工作负载需求垂直或水平扩展资源", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1090, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如何缓解Kubernetes集群中的安全漏洞？", "A": "定期为集群组件应用安全补丁和更新", "B": "实施网络策略和RBAC以限制对敏感资源的访问", "C": "在部署前扫描容器镜像以查找已知漏洞", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1091, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如何排除Kubernetes中未绑定的持久卷声明（PVC）故障？", "A": "检查PVC引用的存储类是否在集群中可用", "B": "验证底层存储提供程序是否正确配置并可访问", "C": "检查与PVC相关的事件以识别任何错误或警告", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1092, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "如何解决Kubernetes集群中的日志记录问题？", "A": "检查集群中部署的Fluentd或Logstash等日志记录代理的配置", "B": "查看日志记录组件的资源分配情况，确保其有足够的容量", "C": "监控日志记录组件与中央日志系统之间的网络连接", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1093, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如何排除Kubernetes中无法访问外部服务的应用程序故障？", "A": "检查服务配置以确保指定了正确的端点", "B": "查看可能阻止出站流量的网络策略和防火墙规则", "C": "检查集群中的DNS解析以确保名称解析正确", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1094, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如何排除Kubernetes集群的配置错误？", "A": "检查kubelet日志中的错误", "B": "验证API服务器的连接性", "C": "查看集群配置文件", "D": "以上所有", "answer": "D", "score": 3}
{"id": 1095, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "查看命名空间中pod状态的命令是什么？", "A": "kubectl get pods", "B": "kubectl describe pods", "C": "kubectl logs", "D": "kubectl create pod", "answer": "A", "score": 4}
{"id": 1096, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubernetes中的Pod？", "A": "总是一起部署在同一主机上的容器组", "B": "Kubernetes中最小的可部署对象，表示集群中一个运行过程的单实例", "C": "一起工作的节点的逻辑集合", "D": "在Kubernetes集群中提供网络和负载平衡的服务", "answer": "B", "score": 4}
{"id": 1097, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如何排除kubelet配置错误？", "A": "重启kubelet服务", "B": "查看kubelet配置文件中的错误", "C": "使用systemctl检查kubelet服务状态", "D": "使用kubectl重新加载kubelet配置", "answer": "B", "score": 3}
{"id": 1098, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的主要构建块是什么？", "A": "Node", "B": "Container", "C": "Pod", "D": "Service", "answer": "C", "score": 4}
{"id": 1099, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何提高Kubernetes集群的性能？", "A": "增加节点数量", "B": "优化资源分配", "C": "使用不同的网络插件", "D": "减少Pod数量", "answer": "B", "score": 3}
{"id": 1100, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "导致Kubernetes部署失败的原因是什么？", "A": "容器镜像不正确", "B": "网络策略配置错误", "C": "资源不足", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1101, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如何排除Kubernetes中的网络连接问题？", "A": "检查网络策略", "B": "检查Pod日志", "C": "使用kubectl exec访问Pod", "D": "以上所有", "answer": "D", "score": 5}
{"id": 1102, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "部署后Kubernetes集群无法正常工作的原因是什么？", "A": "网络配置问题", "B": "资源分配不当", "C": "身份验证配置错误", "D": "以上所有", "answer": "D", "score": 3}
{"id": 1103, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何优化Kubernetes中的资源分配？", "A": "通过手动调整Pod的资源请求和限制", "B": "通过自动扩展集群中的节点数量", "C": "使用Kubernetes根据工作负载需求自动管理资源分配", "D": "通过增加集群中的ReplicaSets数量", "answer": "C", "score": 4}
{"id": 1104, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes中Ingress的作用是什么？", "A": "将一组服务暴露给外部世界", "B": "管理Pod之间的内部通信", "C": "为集群中的节点提供负载均衡", "D": "确保节点与API服务器之间的通信安全", "answer": "A", "score": 5}
{"id": 1105, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "如何排查Kubernetes中启动不正常的Pod？", "A": "检查Ingress控制器的配置", "B": "检查Pod的readiness和liveness探针", "C": "增加Pod的资源限制", "D": "重启Kubernetes API服务器", "answer": "B", "score": 4}
{"id": 1106, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "Kubernetes集群CPU使用率很高，如何识别瓶颈来源？", "A": "检查Ingress控制器的配置", "B": "查看已部署Pod的资源请求和限制", "C": "扩展集群中的节点数量", "D": "重启所有节点上的kubelet服务", "answer": "B", "score": 3}
{"id": 1107, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "查看集群中所有Pod状态的命令是什么？", "A": "kubectl get services", "B": "kubectl describe pods", "C": "kubectl get pods", "D": "kubectl describe services", "answer": "C", "score": 5}
{"id": 1108, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubernetes？", "A": "一个开源的容器编排工具或系统，自动化管理、监控、扩展和部署容器化应用。", "B": "一个云原生平台，允许您使用容器无缝管理、部署和扩展应用。", "C": "一个用于自动化软件部署、扩展和管理容器化应用的工具，最终提供管理大型分布式系统的高效无缝方法。", "D": "一个设计用于自动化部署、扩展和管理容器化应用的平台，提供底层基础设施的抽象层。", "answer": "A", "score": 5}
{"id": 1109, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "K8s是什么？", "A": "用于指代Kubernetes的术语。", "B": "Kubernetes的缩写。", "C": "通常用于指代Kubernetes的首字母缩略词。", "D": "以上皆是。", "answer": "D", "score": 4}
{"id": 1110, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在软件和DevOps中，编排（orchestration）是什么？", "A": "集成多个服务以自动化流程或高效同步信息的过程。", "B": "自动化、管理和控制软件部署和操作的实践。", "C": "协调和管理软件组件和服务以确保无缝操作和扩展。", "D": "以上皆是。", "answer": "D", "score": 4}
{"id": 1111, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes和Docker有什么关系？", "A": "Kubernetes和Docker都是容器化技术，Docker是一个开源平台，用于开发、交付和运行容器化应用，而Kubernetes是一个编排工具，用于管理跨节点集群的容器化应用。", "B": "Docker是一个容器化平台，提供开发、部署和运行应用的工具，而Kubernetes是一个编排平台，自动化容器化应用的部署、扩展和管理。", "C": "Kubernetes是一个容器化平台，允许您构建、交付和运行容器，而Docker是一个编排工具，自动化管理容器化应用的部署、扩展和管理。", "D": "Kubernetes和Docker都是容器化技术，Kubernetes提供构建、交付和运行容器的工具，而Docker是一个编排工具，用于管理跨节点集群的容器化应用。", "answer": "A", "score": 5}
{"id": 1112, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Docker Swarm和Kubernetes的主要区别是什么？", "A": "Docker Swarm更易于设置，但没有强大的集群，而Kubernetes设置更复杂，但具有强大的集群保证。", "B": "Docker Swarm不能自动扩展（如Kubernetes），但Docker的扩展速度比Kubernetes快五倍。", "C": "Docker Swarm没有GUI，Kubernetes有一个以仪表板形式存在的GUI。", "D": "以上皆是。", "answer": "D", "score": 5}
{"id": 1113, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes架构的主要组件是什么？", "A": "主节点和工作节点。", "B": "Kube-apiserver，kube-scheduler，kube-controller-manager，etcd，kubelet和kube-proxy。", "C": "主节点、工作节点、pods、容器和服务。", "D": "Kube-apiserver，kube-scheduler，kube-controller-manager，etcd，kubelet，kube-proxy，pods和容器。", "answer": "B", "score": 5}
{"id": 1114, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes中的节点是什么？", "A": "表示集群中单台计算机的基本计算硬件单元。", "B": "集群中的物理或虚拟机，运行容器。", "C": "在Kubernetes集群中替代任何其他机器的机器。", "D": "以上皆是。", "answer": "D", "score": 5}
{"id": 1115, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "节点状态包含什么？", "A": "地址、条件、容量和信息。", "B": "主机名、IP地址、条件和资源。", "C": "地址、条件、容量和资源。", "D": "主机名、IP地址、条件和信息。", "answer": "A", "score": 5}
{"id": 1116, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes主节点上运行的进程是什么？", "A": "Kube-apiserver。", "B": "Kube-controller-manager。", "C": "Kube-scheduler。", "D": "以上皆是。", "answer": "D", "score": 4}
{"id": 1117, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes中的pod是什么？", "A": "一个高层次的结构，封装一个或多个容器，共享本地网络和资源。", "B": "一个可以在Kubernetes集群中任何机器上运行的容器化应用。", "C": "一个或多个容器的逻辑分组，共享相同的网络命名空间和存储卷。", "D": "在单台机器上运行的一组容器，共享相同的网络命名空间和存储卷。", "answer": "A", "score": 5}
{"id": 1118, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "有哪些类型的控制器管理器？", "A": "Endpoints controller, service accounts controller, namespace controller, node controller, token controller, and replication controller.", "B": "Pod controller, deployment controller, service controller, volume controller, and network controller.", "C": "Node controller, pod controller, ingress controller, volume controller, and namespace controller.", "D": "Service accounts controller, namespace controller, node controller, token controller, and replication controller.", "answer": "A", "score": 5}
{"id": 1119, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是etcd？", "A": "一个容器编排平台。", "B": "用于Kubernetes数据的分布式键值存储。", "C": "一个容器运行环境。", "D": "一种用于使用TCP和UDP暴露应用程序的服务。", "answer": "B", "score": 5}
{"id": 1120, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes中有哪些不同的服务？", "A": "Cluster IP service, Node Port service, External Name Creation service, and Load Balancer service.", "B": "Pod service, Deployment service, Ingress service, and Network service.", "C": "Node service, Load Balancer service, External IP service, and Service Discovery service.", "D": "Cluster IP service, Node Port service, External Name Creation service, and Load Balancer service.", "answer": "A", "score": 5}
{"id": 1121, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是ClusterIP？", "A": "一种用于使用TCP和UDP暴露应用程序的服务。", "B": "默认的Kubernetes服务，提供集群内部的访问。", "C": "一种用于跨节点集群管理容器化应用程序的工具。", "D": "一种用于将服务暴露到互联网的组件。", "answer": "B", "score": 5}
{"id": 1122, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是NodePort？", "A": "一个容器编排平台。", "B": "用于Kubernetes数据的分布式键值存储。", "C": "一种用于使用TCP和UDP暴露应用程序的服务。", "D": "将外部流量直接引入服务的基本方式。", "answer": "D", "score": 5}
{"id": 1123, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes中的LoadBalancer是什么？", "A": "一个容器运行环境。", "B": "一种用于使用TCP和UDP暴露应用程序的服务。", "C": "一种用于跨节点集群管理容器化应用程序的工具。", "D": "一种用于将服务暴露到互联网的服务。", "answer": "D", "score": 5}
{"id": 1124, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是headless service？", "A": "一种用于使用TCP和UDP暴露应用程序的服务。", "B": "一种用于跨节点集群管理容器化应用程序的工具。", "C": "一种用于与服务发现机制接口而不依赖于ClusterIP的服务。", "D": "默认的Kubernetes服务，提供集群内部的访问。", "answer": "C", "score": 5}
{"id": 1125, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是kubelet？", "A": "用于嵌入核心控制循环、垃圾回收和命名空间创建的守护进程。", "B": "一种用于将服务暴露到互联网的组件。", "C": "负责控制和维护每个节点上一组Pod的服务代理。", "D": "一个用于对Kubernetes集群运行命令的CLI工具。", "answer": "C", "score": 5}
{"id": 1126, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubectl？", "A": "一个用于对Kubernetes集群运行命令的CLI工具。", "B": "一个容器编排平台。", "C": "负责控制和维护每个节点上一组Pod的服务代理。", "D": "一种用于将服务暴露到互联网的组件。", "answer": "A", "score": 5}
{"id": 1127, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "给出Kubernetes推荐的安全措施示例。", "A": "定义资源配额、限制etcd访问、使用授权存储库中的镜像以及启用网络分段。", "B": "实施基于角色的访问控制、支持审计并持续扫描安全漏洞。", "C": "应用定期的安全更新、定义严格的资源策略并使用授权存储库中的镜像。", "D": "配置身份验证、授权用户和加密网络流量。", "answer": "B", "score": 5}
{"id": 1128, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kube-proxy？", "A": "一种负载均衡和网络代理的实现，用于支持服务抽象和其他网络操作。", "B": "一个用于对Kubernetes集群运行命令的CLI工具。", "C": "用于嵌入核心控制循环、垃圾回收和命名空间创建的守护进程。", "D": "负责控制和维护每个节点上一组Pod的服务代理。", "answer": "A", "score": 5}
{"id": 1129, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "您已在Kubernetes上部署了一个应用程序，但它没有正确扩展。可能的问题是什么？", "A": "应用程序镜像已损坏。", "B": "Horizontal Pod Autoscaler配置不正确。", "C": "集群内存不足。", "D": "集群网络存在延迟问题。", "answer": "B", "score": 4}
{"id": 1130, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "解释Kubernetes中命名空间的功能。", "A": "资源效率。", "B": "生命周期一致性。", "C": "资源隔离。", "D": "网络隔离。", "answer": "C", "score": 4}
{"id": 1131, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "区分Deployments、StatefulSets和DaemonSets。", "A": "无状态与有状态与节点聚焦。", "B": "Pod管理。", "C": "Pod间通信。", "D": "存储。", "answer": "A", "score": 5}
{"id": 1132, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义Kubernetes中的节点。", "A": "由Google开发的虚拟机。", "B": "集群中最小的硬件单元。", "C": "Kubernetes中的容器运行环境。", "D": "Kubernetes中的一种服务类型。", "answer": "B", "score": 5}
{"id": 1133, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "kubescheduler 的工作是什么？", "A": "管理 Kubernetes 节点的调度。", "B": "将节点分配给新创建的 pods。", "C": "管理 Kubernetes 集群的配置。", "D": "监控 Kubernetes pods 的性能。", "answer": "B", "score": 4}
{"id": 1134, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义 Kubernetes 中的 daemon sets。", "A": "负责监控网络流量的一组 pods。", "B": "在主机上运行的一组 pods。", "C": "一种用于负载均衡的 Kubernetes 服务。", "D": "负责安全策略的 Kubernetes 组件。", "answer": "B", "score": 4}
{"id": 1135, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义 Kubernetes 中的 Heapster。", "A": "Kubernetes pods 的监控系统。", "B": "一个用于收集指标和性能监控的系统。", "C": "负责管理 pods 的 Kubernetes 控制器。", "D": "一个用于 Kubernetes 集群的存储解决方案。", "answer": "B", "score": 4}
{"id": 1136, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 执行哪些任务？", "A": "管理分布式系统。", "B": "抽象节点的底层硬件。", "C": "为应用程序提供一致的接口。", "D": "以上全部。", "answer": "D", "score": 5}
{"id": 1137, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义 Kubernetes controller manager。", "A": "一个用于监控 Kubernetes 集群的工具。", "B": "一个负责垃圾收集和控制循环的守护进程。", "C": "负责调度 pods 的组件。", "D": "一个管理 Kubernetes 命名空间的系统。", "answer": "B", "score": 4}
{"id": 1138, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "为什么在 Kubernetes 中使用命名空间？", "A": "在用户之间划分集群资源。", "B": "配置 Kubernetes 中的网络策略。", "C": "管理 Kubernetes 中的存储解决方案。", "D": "启用 Kubernetes 的自动扩展功能。", "answer": "A", "score": 5}
{"id": 1139, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "为什么使用 Kubernetes？", "A": "因为它只能在 Google Cloud Platform 上运行。", "B": "因为它比其他容器管理系统成本更低。", "C": "因为它允许容器化的应用程序在各种环境中一致运行。", "D": "因为它提供了用于管理集群的图形用户界面。", "answer": "C", "score": 5}
{"id": 1140, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 的特点是什么？", "A": "自动部署和扩展。", "B": "与应用程序紧密耦合的基础设施。", "C": "资源的手动调度。", "D": "供应商锁定。", "answer": "A", "score": 5}
{"id": 1141, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "提到的控制器管理器类型有哪些？", "A": "服务控制器、Pod 控制器、节点控制器。", "B": "端点控制器、服务账户控制器、节点控制器。", "C": "集群控制器、副本控制器、命名空间控制器。", "D": "端点控制器、服务账户控制器、节点控制器。", "answer": "B", "score": 4}
{"id": 1142, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "解释 Kubernetes 架构。", "A": "Kubernetes 架构包括主节点和工作节点。", "B": "Kubernetes 架构仅包括主节点。", "C": "Kubernetes 架构包括 API 服务器、调度器和 etcd。", "D": "Kubernetes 架构由一个叫做 Kubelet 的单一组件组成。", "answer": "C", "score": 5}
{"id": 1143, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "列出 Kubernetes 中可用的各种服务。", "A": "集群 IP 服务、主机 IP 服务、外部 IP 服务。", "B": "集群 IP 服务、负载均衡服务、节点端口服务。", "C": "集群 IP 服务、Ingress 网络服务、外部名称创建服务。", "D": "集群 IP 服务、负载均衡服务、外部名称创建服务。", "answer": "B", "score": 5}
{"id": 1144, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义集群 IP。", "A": "一个用于访问外部资源的 Kubernetes 服务。", "B": "一个为 Kubernetes 集群提供外部 IP 地址的服务。", "C": "一个在集群内提供负载均衡的服务。", "D": "一个为集群内部通信提供 IP 地址的 Kubernetes 服务。", "answer": "D", "score": 5}
{"id": 1145, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "解释节点端口。", "A": "一个用于 pod 间内部通信的 Kubernetes 服务。", "B": "一种用于托管多个 pods 的 Kubernetes 节点。", "C": "获取外部流量到服务的基本方式。", "D": "负责管理网络端口的 Kubernetes 组件。", "answer": "C", "score": 5}
{"id": 1146, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义 kubelet。", "A": "一个负责管理网络的 Kubernetes 组件。", "B": "一个控制和维护 pods 组的服务代理。", "C": "一种负责扩展应用程序的 Kubernetes 控制器。", "D": "一个管理 Kubernetes 中容器存储的工具。", "answer": "B", "score": 4}
{"id": 1147, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 的缺点是什么？", "A": "Kubernetes 不是开源的。", "B": "Kubernetes 仪表板不如预期的那样有用。", "C": "Kubernetes 缺乏与云提供商的集成。", "D": "Kubernetes 比它的替代品扩展性差。", "answer": "B", "score": 4}
{"id": 1148, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubeproxy?", "A": "负责调度pods的Kubernetes组件。", "B": "网络代理和负载均衡器的实现。", "C": "管理Kubernetes命名空间的工具。", "D": "用于监控集群性能的Kubernetes服务。", "answer": "B", "score": 5}
{"id": 1149, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "如何在Kubernetes中提高系统性能?", "A": "增加所有pods的CPU限制", "B": "减少所有pods的内存限制", "C": "向集群添加更多节点", "D": "利用资源分配和负载均衡", "answer": "D", "score": 5}
{"id": 1150, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes中的Ingress用于什么?", "A": "将集群外部的HTTP和HTTPS路由暴露给集群内的服务", "B": "管理集群资源的身份验证和授权", "C": "跨多个集群部署应用程序", "D": "基于资源使用情况自动扩展应用程序", "answer": "A", "score": 5}
{"id": 1151, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如果Kubernetes集群未正确配置，可能会出现什么问题?", "A": "应用程序可扩展性降低", "B": "安全漏洞增加", "C": "资源利用率提高", "D": "故障容错能力增强", "answer": "B", "score": 4}
{"id": 1152, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "在Kubernetes集群中，如果应用程序无法扩展，该如何排查?", "A": "检查Horizontal Pod Autoscaler是否配置正确", "B": "增加集群中的节点数量", "C": "重启Kubernetes API服务器", "D": "为应用程序部署一个单独的负载均衡器", "answer": "A", "score": 5}
{"id": 1153, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "使用哪个命令可以获取Kubernetes集群中所有节点的信息?", "A": "kubectl get nodes", "B": "kubectl describe nodes", "C": "kubectl view nodes", "D": "kubectl list nodes", "answer": "A", "score": 5}
{"id": 1154, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "描述在Kubernetes中部署新服务所涉及的步骤。", "A": "创建Pod，使用Service资源将其暴露为服务，然后配置Ingress", "B": "创建Deployment，使用Service资源将其暴露为服务，然后配置Ingress", "C": "创建StatefulSet，使用Service资源将其暴露为服务，然后配置Ingress", "D": "创建ReplicaSet，使用Service资源将其暴露为服务，然后配置Ingress", "answer": "B", "score": 4}
{"id": 1155, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "编写一个脚本，基于CPU使用情况自动扩展Deployment的副本数量。", "A": "for replica in `kubectl get deployment my-deployment -o=jsonpath='{.spec.replicas}'`; do kubectl scale --replicas=$((replica+1)) deployment my-deployment; done", "B": "for replica in `kubectl get deployment my-deployment -o=jsonpath='{.spec.replicas}'`; do kubectl scale --replicas=$((replica*2)) deployment my-deployment; done", "C": "for replica in `kubectl get deployment my-deployment -o=jsonpath='{.spec.replicas}'`; do kubectl scale --replicas=$((replica*0.5)) deployment my-deployment; done", "D": "for replica in `kubectl get deployment my-deployment -o=jsonpath='{.spec.replicas}'`; do kubectl scale --replicas=$((replica-1)) deployment my-deployment; done", "answer": "B", "score": 5}
{"id": 1156, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes Pod的用途是什么?", "A": "将一个或多个容器分组在同一个主机上运行。", "B": "在Kubernetes集群中提供数据存储。", "C": "管理Kubernetes集群中容器之间的网络。", "D": "监控Kubernetes集群中运行的容器的健康状况。", "answer": "A", "score": 4}
{"id": 1157, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "你在Kubernetes上部署了一个微服务应用程序，但一段时间后，你注意到其中一个pod消耗了太多内存。你会如何解决这个问题?", "A": "增加该pod的内存限制。", "B": "减少该pod的内存限制。", "C": "重启该pod以释放内存。", "D": "增加该pod的副本数量。", "answer": "A", "score": 5}
{"id": 1158, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个命令来获取Kubernetes集群中所有pods的状态?", "A": "kubectl get all", "B": "kubectl describe pods", "C": "kubectl get pods", "D": "kubectl describe all", "answer": "C", "score": 4}
{"id": 1159, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubernetes?", "A": "一个监控应用程序的平台", "B": "一个容器编排工具", "C": "一种虚拟化技术", "D": "一种网络协议", "answer": "B", "score": 5}
{"id": 1160, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "K8s是什么?", "A": "Kubernetes集群", "B": "Kubernetes配置", "C": "Kubernetes pods", "D": "Kubernetes缩写", "answer": "D", "score": 3}
{"id": 1161, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes架构的主要组成部分是什么?", "A": "Pods和Containers", "B": "主节点和工作节点", "C": "服务和部署", "D": "ConfigMaps和Secrets", "answer": "B", "score": 4}
{"id": 1162, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes中的节点是什么?", "A": "一个单独的容器", "B": "一个物理或虚拟机", "C": "一个Kubernetes API服务器", "D": "一个容器编排工具", "answer": "B", "score": 4}
{"id": 1163, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubernetes?", "A": "一个在谷歌平台开发的容器管理系统。", "B": "一个用于管理容器化应用程序的容器编排系统。", "C": "一个在单个主机上运行多个隔离的Linux系统（容器）的虚拟化平台。", "D": "一个用于部署、管理和扩展容器化应用程序的云计算平台。", "answer": "B", "score": 5}
{"id": 1164, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义Kubernetes中的节点。", "A": "集群中最小的硬件单位，可以是虚拟机或物理机。", "B": "共享同一网络命名空间的Pod的逻辑组。", "C": "管理容器之间网络的组件。", "D": "定义一组Pod及其运行策略的Kubernetes对象。", "answer": "A", "score": 4}
{"id": 1165, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes执行哪些任务?", "A": "管理和扩展容器化应用程序。", "B": "自动调度容器化应用程序。", "C": "为应用程序提供一致的接口以使用共享资源。", "D": "以上所有。", "answer": "D", "score": 5}
{"id": 1166, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "为什么使用Kubernetes?", "A": "它只能在谷歌云等特定云提供商上运行。", "B": "它为应用程序提供一致的接口以使用共享资源。", "C": "它仅限于在本地数据中心管理容器化应用程序。", "D": "它提供了一个高度受限的环境来部署应用程序。", "answer": "B", "score": 5}
{"id": 1167, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义Kubernetes控制器管理器。", "A": "一个用于管理Kubernetes集群中网络策略和安全的工具。", "B": "负责垃圾收集、核心控制循环和命名空间创建的组件。", "C": "一个提供Kubernetes集群监控和性能指标的服务。", "D": "管理Pod调度的容器化应用程序。", "answer": "B", "score": 5}
{"id": 1168, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义Kubernetes中的节点。", "A": "集群中最小的硬件单位，可以是虚拟机或物理机。", "B": "共享同一网络命名空间的Pod的逻辑组。", "C": "管理容器之间网络的组件。", "D": "定义一组Pod及其运行策略的Kubernetes对象。", "answer": "A", "score": 4}
{"id": 1169, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes执行哪些任务?", "A": "管理和扩展容器化应用程序。", "B": "自动调度容器化应用程序。", "C": "为应用程序提供一致的接口以使用共享资源。", "D": "以上所有。", "answer": "D", "score": 5}
{"id": 1170, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "为什么使用Kubernetes?", "A": "它只能在谷歌云等特定云提供商上运行。", "B": "它为应用程序提供一致的接口以使用共享资源。", "C": "它仅限于在本地数据中心管理容器化应用程序。", "D": "它提供了一个高度受限的环境来部署应用程序。", "answer": "B", "score": 5}
{"id": 1171, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "定义Kubernetes控制器管理器。", "A": "一个用于管理Kubernetes集群中网络策略和安全的工具。", "B": "负责垃圾收集、核心控制循环和命名空间创建的组件。", "C": "一个提供Kubernetes集群监控和性能指标的服务。", "D": "管理Pod调度的容器化应用程序。", "answer": "B", "score": 5}
{"id": 1172, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的基本构建模块是什么?", "A": "Pods, Services, Deployments", "B": "Nodes, Clusters, ReplicaSets", "C": "Volumes, Ingress, Network Policies", "D": "ConfigMaps, StatefulSets, DaemonSets", "answer": "B", "score": 4}
{"id": 1173, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如果Kubernetes集群资源不足，可能会出现什么问题?", "A": "访问服务的延迟增加", "B": "由于资源限制Pod无法调度", "C": "网络吞吐量下降", "D": "工作节点上的磁盘I/O增加", "answer": "B", "score": 4}
{"id": 1174, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "您可以使用什么命令来获取Kubernetes命名空间中所有Pod的状态?", "A": "kubectl get pods --all-namespaces", "B": "kubectl describe pods --all-namespaces", "C": "kubectl get all --all-namespaces", "D": "kubectl describe all --all-namespaces", "answer": "A", "score": 5}
{"id": 1175, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes与Docker Swarm有何不同?", "A": "Kubernetes安装和配置更复杂，但一旦设置好，它提供一个健壮的集群。", "B": "Docker Swarm的安装过程更简单，但其集群不如Kubernetes健壮。", "C": "Kubernetes有一个称为Kubernetes Dashboard的GUI，而Docker Swarm没有GUI界面。", "D": "Kubernetes不具备可扩展性，而Docker Swarm可以以5倍速度扩展。", "answer": "A", "score": 4}
{"id": 1176, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubernetes?", "A": "Kubernetes是一个容器管理工具，负责容器的部署、扩展和负载均衡。", "B": "Kubernetes是谷歌开发的开源容器化平台。", "C": "Kubernetes是一个多容器管理解决方案，但不是容器化平台。", "D": "Kubernetes是Docker主要用来管理容器生命周期的工具。", "answer": "A", "score": 5}
{"id": 1177, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes与Docker有何关系?", "A": "Kubernetes与Docker容器通信，在多个主机上编排它们。", "B": "Docker提供容器的生命周期管理，而Kubernetes构建和管理集群。", "C": "Docker构建容器，而Kubernetes管理运行环境并处理容器之间的通信。", "D": "Kubernetes是Docker生态系统的一部分，提供额外的容器编排功能。", "answer": "A", "score": 5}
{"id": 1178, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "在主机和容器上部署应用程序有什么区别？", "A": "在主机上部署应用程序允许它们共享操作系统资源，而容器隔离了应用程序及其依赖。", "B": "容器提供比主机更快的部署速度，但主机提供更好的资源利用率。", "C": "与容器相比，主机有更复杂的部署过程，容器提供更简单的管理。", "D": "与主机相比，容器需要更多手动干预来进行负载平衡。", "answer": "A", "score": 5}
{"id": 1179, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是容器编排？", "A": "容器编排是管理单个容器的过程，以确保它们有效地通信和协作。", "B": "容器编排涉及在容器化环境中为最佳表现组织音乐设备。", "C": "容器编排指的是根据工作负载需求自动缩放容器。", "D": "容器编排是在多个主机上手动连接容器的过程。", "answer": "A", "score": 5}
{"id": 1180, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "容器编排的需求是什么？", "A": "容器编排确保部署在容器中的微服务之间有效沟通。", "B": "容器编排通过自动化容器映像的创建过程简化了部署过程。", "C": "容器编排通过将容器与底层基础设施隔离来提高安全性。", "D": "容器编排允许容器更快部署，无需监控。", "answer": "A", "score": 5}
{"id": 1181, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的特性有哪些？", "A": "Kubernetes提供了如容器化部署、缩放和负载平衡等功能。", "B": "Kubernetes为高效的容器管理提供了内置的日志记录和监控工具。", "C": "Kubernetes支持部署的自动回滚和内置的自动缩放功能。", "D": "Kubernetes是云中立的，可以在任何公共或私有云提供商上运行。", "answer": "A", "score": 5}
{"id": 1182, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes是如何简化容器化部署的？", "A": "Kubernetes自动化容器化应用的负载平衡、缩放和监控。", "B": "Kubernetes提供了一个GUI界面，便于容器群集的可视化和管理。", "C": "Kubernetes通过与第三方日志和监控工具集成简化了部署。", "D": "Kubernetes通过最小化容器编排的需要加速部署。", "answer": "A", "score": 5}
{"id": 1183, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "你对Kubernetes中的集群有什么了解？", "A": "Kubernetes中的集群通过基于配置文件调度Pod来强制执行期望状态管理。", "B": "Kubernetes中的集群包括运行Kubelet进程和API服务器的多个节点。", "C": "Kubernetes中的集群处理容器调度和资源分配以实现有效利用。", "D": "Kubernetes中的集群通过集中式控制平面进行管理以进行编排。", "answer": "A", "score": 5}
{"id": 1184, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "如何对K8节点进行维护活动？", "A": "排空节点以驱逐运行中的Pods，标记为不可调度，执行维护任务，验证节点状态，并在适用时推出更新。", "B": "手动更新Kubernetes节点的内核，执行维护任务，并重启节点以应用更改。", "C": "使用第三方工具自动维护Kubernetes节点，确保对运行中的应用程序的最小干扰。", "D": "缩减节点规模，执行维护任务，并将其规模扩大以确保集群的平稳运行。", "answer": "A", "score": 5}
{"id": 1185, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "在Kubernetes中负载平衡的角色是什么？", "A": "在Kubernetes部署或ReplicaSet的一组Pods中分配传入的网络流量。", "B": "在Kubernetes集群的多个节点之间管理容器的部署。", "C": "监控和跟踪Kubernetes集群中各个Pod的健康和性能。", "D": "处理Kubernetes环境中微服务的编排和缩放。", "answer": "A", "score": 5}
{"id": 1186, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "可以采取哪些措施来提高Kubernetes的安全性？", "A": "实施网络流量分配的负载平衡", "B": "优化Kubernetes集群中Pods的资源利用", "C": "利用RBAC、网络策略、安全API服务器、镜像安全、Pod安全政策、安全秘密管理、定期更新和补丁、安全etcd、限制外部访问、实施Pod安全上下文、监控和日志记录、确保网络通信安全、限制主机操作系统访问、定期安全审计以及培训和教育", "D": "根据资源使用指标配置Kubernetes部署的自动缩放", "answer": "C", "score": 5}
{"id": 1187, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何监控Kubernetes集群？", "A": "通过使用kubectl命令手动检查单个Pod的状态", "B": "通过设置各种工具和实践来收集和分析集群的健康、性能和资源使用数据，如选择监控解决方案、部署监控组件、收集节点级别和应用指标、监控Kubernetes特定指标、关注Kubernetes组件的健康、配置警报、可视化数据、设置长期存储、聚合日志、实施安全监控并定期审查和维护监控设置", "C": "仅依赖Kubernetes内置的监控和记录机制", "D": "定期重启Kubernetes组件以刷新它们的监控数据", "answer": "B", "score": 5}
{"id": 1188, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "如何从POD获取中心日志？", "A": "通过使用kubectl命令直接从每个独立的Pod获取日志", "B": "通过设置如ELK Stack（Elasticsearch、Logstash/Fluentd、Kibana）这样的集中式日志解决方案，其中Elasticsearch作为中心日志存储和索引解决方案，Logstash或Fluentd收集并转发来自Pods的日志，而Kibana提供日志数据的可视化和查询功能", "C": "配置每个Pod将其日志直接发送到指定的中央日志服务器", "D": "手动将每个Pod的日志文件转移到中央存储位置", "answer": "B", "score": 5}
{"id": 1189, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的基本构建块是什么？", "A": "容器", "B": "Pods", "C": "Docker", "D": "镜像", "answer": "B", "score": 4}
{"id": 1190, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "你如何提高Kubernetes集群的性能？", "A": "为每个pod分配更多资源", "B": "对pods进行负载平衡", "C": "使用持久卷", "D": "在集群中部署更多节点", "answer": "B", "score": 4}
{"id": 1191, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如果一个pod在Kubernetes中无法部署，可能是什么问题？", "A": "网络连接问题", "B": "资源限制", "C": "安全漏洞", "D": "配置错误的Ingress", "answer": "B", "score": 3}
{"id": 1192, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "你如何处理Kubernetes集群中的安全漏洞？", "A": "启用pod安全政策", "B": "禁用身份验证", "C": "公开Kubernetes API", "D": "为服务账户使用弱密码", "answer": "A", "score": 4}
{"id": 1193, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个命令来获取 Kubernetes 集群中 pod 的状态？", "A": "kubectl describe pods", "B": "kubectl get pods", "C": "kubectl logs pods", "D": "kubectl create pods", "answer": "B", "score": 5}
{"id": 1194, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 中的基本部署单位是什么？", "A": "Node", "B": "Pod", "C": "ReplicaSet", "D": "Cluster", "answer": "B", "score": 4}
{"id": 1195, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "你在 Kubernetes 中扩展应用程序 pod 时遇到问题。你应该检查哪个组件来排除这个问题？", "A": "Ingress", "B": "StatefulSets", "C": "Deployment", "D": "Service", "answer": "C", "score": 4}
{"id": 1196, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个命令来查看 Kubernetes 中特定 pod 的日志？", "A": "kubectl get logs", "B": "kubectl describe pod", "C": "kubectl logs", "D": "kubectl pod logs", "answer": "C", "score": 5}
{"id": 1197, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 的主要目的是是什么？", "A": "管理多个主机上的容器化应用程序", "B": "开发容器化应用程序", "C": "监控容器化应用程序", "D": "构建容器镜像", "answer": "A", "score": 5}
{"id": 1198, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "你在 Kubernetes 上部署了一个微服务，但它遇到了高延迟问题。可能的原因是什么？", "A": "资源配置不足", "B": "资源配置过多", "C": "网络拥塞", "D": "以上所有", "answer": "D", "score": 4}
{"id": 1199, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个 kubectl 命令用于获取集群中正在运行的 pod 的信息？", "A": "kubectl describe pods", "B": "kubectl get services", "C": "kubectl logs", "D": "kubectl apply", "answer": "A", "score": 5}
{"id": 1200, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes 中的基本部署单位是什么？", "A": "Nodes", "B": "Clusters", "C": "Pods", "D": "Services", "answer": "C", "score": 5}
{"id": 1201, "category": "K8s Knowledge Base", "subcategory": "Performance Optimisation", "question": "你如何在 Kubernetes 中优化资源分配？", "A": "手动为每个 Pod 分配资源", "B": "使用水平 Pod 自动扩展", "C": "增加集群中的节点数量", "D": "限制每个命名空间中的 Pod 数量", "answer": "B", "score": 4}
{"id": 1202, "category": "K8s Knowledge Base", "subcategory": "Network and Service Discovery", "question": "Kubernetes Ingress 的目的是什么？", "A": "将服务暴露给外部流量", "B": "管理节点之间的通信", "C": "为集群资源提供身份验证", "D": "监控网络性能", "answer": "A", "score": 4}
{"id": 1203, "category": "K8s Knowledge Base", "subcategory": "Security", "question": "你如何在 Kubernetes 中实施网络策略？", "A": "使用基于角色的访问控制 (RBAC)", "B": "配置 Ingress 控制器", "C": "创建 Pod 安全策略", "D": "在 NetworkPolicy 资源中定义规则", "answer": "D", "score": 5}
{"id": 1204, "category": "K8s Knowledge Base", "subcategory": "Storage & Data Management", "question": "Kubernetes 中 Persistent Volumes 的目的是什么？", "A": "在 Pod 内存储临时数据", "B": "在不同节点之间共享数据", "C": "提供超越单个 Pod 生命周期的持久存储", "D": "优化数据密集型应用程序的网络性能", "answer": "C", "score": 5}
{"id": 1205, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "哪个工具常用于监控 Kubernetes 集群？", "A": "Prometheus", "B": "Elasticsearch", "C": "Fluentd", "D": "Grafana", "answer": "A", "score": 5}
{"id": 1206, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "在 Kubernetes 中管理配置的常见做法是什么？", "A": "直接在每个节点上编辑 YAML 文件", "B": "使用 Kubernetes ConfigMaps", "C": "将配置存储在 Pod 内的环境变量中", "D": "手动更新主节点上的配置文件", "answer": "B", "score": 4}
{"id": 1207, "category": "K8s Knowledge Base", "subcategory": "High Availability and Disaster Recovery", "question": "你如何确保 Kubernetes 集群的高可用性？", "A": "创建多个主节点", "B": "对所有部署使用 StatefulSets", "C": "定期备份集群数据", "D": "为服务配置负载均衡", "answer": "A", "score": 4}
{"id": 1208, "category": "K8s Real-World Problems", "subcategory": "Cluster Configuration Problems", "question": "如果Pods在集群内无法相互通信，可能是什么问题？", "A": "网络策略未正确配置", "B": "为Pods分配的资源不足", "C": "节点标签错误", "D": "Ingress控制器故障", "answer": "A", "score": 4}
{"id": 1209, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "如何排查在Kubernetes上部署后不久就不断崩溃的应用程序？", "A": "检查Pod的资源请求和限制", "B": "检查节点的CPU和内存使用情况", "C": "查看应用程序日志", "D": "验证Pods之间的网络连接", "answer": "C", "score": 5}
{"id": 1210, "category": "K8s Real-World Problems", "subcategory": "Network Problem Diagnosis", "question": "如果Pods出现间歇性网络连接问题，可能是什么原因？", "A": "服务配置错误", "B": "Pod安全策略不充分", "C": "节点资源过载", "D": "Ingress控制器配置错误", "answer": "C", "score": 4}
{"id": 1211, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "如何识别导致Kubernetes集群性能瓶颈的组件？", "A": "通过分析Pod安全策略", "B": "通过查看节点资源使用指标", "C": "通过检查Ingress控制器日志", "D": "通过检查Prometheus警报的状态", "answer": "B", "score": 4}
{"id": 1212, "category": "K8s Real-World Problems", "subcategory": "Security Vulnerability and Privilege Issues", "question": "如果发现Pod在Kubernetes中具有过多的权限，你应该采取什么行动？", "A": "立即删除Pod", "B": "更新Pod的安全上下文", "C": "重启Kubernetes API服务器", "D": "创建一个新的Kubernetes ServiceAccount", "answer": "B", "score": 5}
{"id": 1213, "category": "K8s Real-World Problems", "subcategory": "Storage Issues", "question": "如果PersistentVolumeClaim卡在'Pending'状态，可能的解决方案是什么？", "A": "增加应用程序的副本数量", "B": "检查PersistentVolume是否可用", "C": "修改PersistentVolumeClaim的存储类", "D": "重启Kubernetes调度器", "answer": "B", "score": 4}
{"id": 1214, "category": "K8s Real-World Problems", "subcategory": "Monitoring & Logging Issues", "question": "如何诊断Prometheus指标未从Kubernetes Pods中抓取的情况？", "A": "检查Prometheus Alertmanager的配置", "B": "检查Prometheus与Pods之间的网络连接", "C": "查看Prometheus ServiceMonitors的配置", "D": "检查Kubernetes审计日志的配置", "answer": "C", "score": 5}
{"id": 1215, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "哪个命令可用于创建新的Kubernetes Deployment？", "A": "kubectl describe", "B": "kubectl expose", "C": "kubectl apply", "D": "kubectl create", "answer": "C", "score": 5}
{"id": 1216, "category": "K8s Code Commands", "subcategory": "Multi-Command Operations", "question": "你会使用哪一系列命令来扩展名为'web'的Deployment的副本数量？", "A": "kubectl set replicas deployment web --replicas=3", "B": "kubectl scale deployment web --replicas=3", "C": "kubectl edit deployment web --replicas=3", "D": "kubectl rollout replicas deployment web --replicas=3", "answer": "B", "score": 5}
{"id": 1217, "category": "K8s Code Commands", "subcategory": "Automation Scripts", "question": "哪种脚本语言通常用于编写Kubernetes的自动化脚本？", "A": "Python", "B": "JavaScript", "C": "Bash", "D": "Ruby", "answer": "C", "score": 5}
{"id": 1218, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "Kubernetes的基本构建块是什么？", "A": "容器和Pods", "B": "节点和集群", "C": "服务和Ingress", "D": "ConfigMaps和Secrets", "answer": "B", "score": 4}
{"id": 1219, "category": "K8s Real-World Problems", "subcategory": "Performance bottleneck analysis", "question": "你如何诊断和解决Kubernetes集群中的性能瓶颈？", "A": "检查Pods的状态", "B": "增加节点数量", "C": "使用Prometheus等监控工具分析资源使用情况", "D": "重启Kubernetes API服务器", "answer": "C", "score": 5}
{"id": 1220, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个命令来查看Kubernetes命名空间中所有Pods的状态？", "A": "kubectl describe pods", "B": "kubectl get pods", "C": "kubectl pods status", "D": "kubectl view pods", "answer": "B", "score": 5}
{"id": 1221, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "什么是Kubernetes中的Pod？", "A": "总是一起部署在同一主机上的容器组。", "B": "表示集群中一组正在运行的容器的Kubernetes资源。", "C": "Kubernetes可以调度应用程序的节点的逻辑集合。", "D": "负责管理集群内网络方面的Kubernetes组件。", "answer": "B", "score": 4}
{"id": 1222, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "你在Kubernetes上部署了一个应用程序，但它没有正确扩展。可能是什么原因导致的？", "A": "部署清单中的标签和选择器不正确。", "B": "Pod配置中指定的资源不足。", "C": "水平Pod自动缩放器配置错误。", "D": "以上所有。", "answer": "D", "score": 4}
{"id": 1223, "category": "K8s Code Commands", "subcategory": "Single-Command Operations", "question": "你会使用哪个kubectl命令来列出特定命名空间中的所有pods？", "A": "kubectl get pods", "B": "kubectl describe pods", "C": "kubectl create pods", "D": "kubectl apply pods", "answer": "A", "score": 5}
{"id": 1224, "category": "K8s Knowledge Base", "subcategory": "Core Concepts", "question": "尝试从pod中转储Postgres数据库时出错", "A": "在pod的容器中使用pg_dump命令", "B": "kubectl dump命令", "C": "使用Kubernetes API转储数据库", "D": "使用kubectl exec命令进入pod然后运行pg_dump", "answer": "D", "score": 3}
{"id": 1225, "category": "K8s Real-World Problems", "subcategory": "Workload management problems", "question": "EKS 128 pods不能通过calico CNI在一些自管理工作节点上与其他pods通信", "A": "检查网络策略", "B": "验证受影响节点上的Calico配置", "C": "更新kube-proxy设置", "D": "检查pod安全策略", "answer": "B", "score": 4}
{"id": 1226, "category": "K8s Knowledge Base", "subcategory": "Monitoring and Logging", "question": "为什么Google Kubernetes Engine的cilium for anetd报告错误", "A": "为cilium启用调试日志", "B": "检查集群中的网络策略", "C": "审查kubesystem pods的日志", "D": "重启cilium容器", "answer": "C", "score": 4}
{"id": 1227, "category": "K8s Real-World Problems", "subcategory": "Application Level Issues", "question": "在一个运行entrypoint进程的k8s pod中，通过kubectl exec进入bash是否会中断进程", "A": "是的，它总是中断进程", "B": "不，kubectl exec不会中断进程", "C": "这取决于正在运行的进程", "D": "通过kubectl exec进入bash从不中断进程", "answer": "C", "score": 4}
{"id": 1228, "category": "K8s Knowledge Base", "subcategory": "Configuration and Operations", "question": "Kubernetes的AKS成本分析插件", "A": "在AKS仪表板中启用成本分析", "B": "安装Azure Cost Management插件", "C": "在Azure门户中检查计费详情", "D": "使用Azure CLI分析AKS成本", "answer": "B", "score": 3}
